// BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

within lichess_bot::components::Engine is

  package functions is
    @dialect("oal");
    @function_num(3);
    function init() is
      @noparse
      // load configuration properties
      select any bot from instances of Bot;
      if empty bot then
        create object instance bot of Bot;
        bot.config = PROP::loadProperties(file_name:"lichess_bot.properties");
      end if;

      // connect to the Lichess API and start listening for events
      send chess::connect(properties: bot.config);

      // TODO create a game manager for testing
      mgr = GameManager::get_instance();

      LOG::LogInfo(message: "Initialization complete");
      @endnoparse
    end function;

    @dialect("oal");
    @function_num(1);
    function resign_all() is
      @noparse
      select many games from instances of ActiveGame;
      for each game in games loop
        game.resign();
      end for;
      @endnoparse
    end function;

    @dialect("oal");
    @function_num(2);
    function send_challenge(user: in string) is
      @noparse
      max_games = Bot::getInteger(name: "max_games", default_value: 1);
      select many games from instances of ActiveGame where (selected.game_state.status == GameStatus::CREATED or selected.game_state.status == GameStatus::STARTED);
      if cardinality games < max_games then
        LOG::LogInfo(message: "Challenging " + param.user + "...");
        r = chess::createChallenge(
          user: param.user,
          rated: false,
          clock_limit: 900,
          clock_increment: 5,
          color: Color::RANDOM,
          variant: Variant::STANDARD,
          fen: ""
        );
      else
        LOG::LogInfo(message: "Could not challenge " + param.user + ": too many games already");
      end if;
      @endnoparse
    end function;

  end package;

end;
