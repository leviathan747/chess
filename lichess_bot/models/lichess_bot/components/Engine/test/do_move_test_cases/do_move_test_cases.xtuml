// BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

within lichess_bot::components::Engine::test is

	package do_move_test_cases is
		@dialect("oal");
		function test1() return boolean is
			@noparse
			LOG::LogInfo(message: "test1: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pp2pppp/2p5/3pP3/3P4/8/PPP2PPP/RNBQKBNR b KQkq - 0 1";
			move_text = "d8a5 d1d2 a5d2 c1d2 b8d7 c2c3 d7e5 d4e5 d5d4 c3d4 c8e6 d4d5 e6d5 f1c4 d5c4 b1c3 c4a2 a1a2 e8c8 d2c1";
			fens[19] = "2kr1bnr/pp2pppp/2p5/4P3/8/2N5/RP3PPP/2B1K1NR b K - 2 11";
			fens[18] = "2kr1bnr/pp2pppp/2p5/4P3/8/2N5/RP1B1PPP/4K1NR w K - 1 11";
			fens[17] = "r3kbnr/pp2pppp/2p5/4P3/8/2N5/RP1B1PPP/4K1NR b Kkq - 0 10";
			fens[16] = "r3kbnr/pp2pppp/2p5/4P3/8/2N5/bP1B1PPP/R3K1NR w KQkq - 0 10";
			fens[15] = "r3kbnr/pp2pppp/2p5/4P3/2b5/2N5/PP1B1PPP/R3K1NR b KQkq - 1 9";
			fens[14] = "r3kbnr/pp2pppp/2p5/4P3/2b5/8/PP1B1PPP/RN2K1NR w KQkq - 0 9";
			fens[13] = "r3kbnr/pp2pppp/2p5/3bP3/2B5/8/PP1B1PPP/RN2K1NR b KQkq - 1 8";
			fens[12] = "r3kbnr/pp2pppp/2p5/3bP3/8/8/PP1B1PPP/RN2KBNR w KQkq - 0 8";
			fens[11] = "r3kbnr/pp2pppp/2p1b3/3PP3/8/8/PP1B1PPP/RN2KBNR b KQkq - 0 7";
			fens[10] = "r3kbnr/pp2pppp/2p1b3/4P3/3P4/8/PP1B1PPP/RN2KBNR w KQkq - 1 7";
			fens[9] = "r1b1kbnr/pp2pppp/2p5/4P3/3P4/8/PP1B1PPP/RN2KBNR b KQkq - 0 6";
			fens[8] = "r1b1kbnr/pp2pppp/2p5/4P3/3p4/2P5/PP1B1PPP/RN2KBNR w KQkq - 0 6";
			fens[7] = "r1b1kbnr/pp2pppp/2p5/3pP3/8/2P5/PP1B1PPP/RN2KBNR b KQkq - 0 5";
			fens[6] = "r1b1kbnr/pp2pppp/2p5/3pn3/3P4/2P5/PP1B1PPP/RN2KBNR w KQkq - 0 5";
			fens[5] = "r1b1kbnr/pp1npppp/2p5/3pP3/3P4/2P5/PP1B1PPP/RN2KBNR b KQkq - 0 4";
			fens[4] = "r1b1kbnr/pp1npppp/2p5/3pP3/3P4/8/PPPB1PPP/RN2KBNR w KQkq - 1 4";
			fens[3] = "rnb1kbnr/pp2pppp/2p5/3pP3/3P4/8/PPPB1PPP/RN2KBNR b KQkq - 0 3";
			fens[2] = "rnb1kbnr/pp2pppp/2p5/3pP3/3P4/8/PPPq1PPP/RNB1KBNR w KQkq - 0 3";
			fens[1] = "rnb1kbnr/pp2pppp/2p5/q2pP3/3P4/8/PPPQ1PPP/RNB1KBNR b KQkq - 2 2";
			fens[0] = "rnb1kbnr/pp2pppp/2p5/q2pP3/3P4/8/PPP2PPP/RNBQKBNR w KQkq - 1 2";
			
			result = ::test_do_move(name: "test1", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test1: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test10() return boolean is
			@noparse
			LOG::LogInfo(message: "test10: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 d7d5 g1h3 e7e5 e2e4 d5e4 f1a6 b7a6 b2b3 d8d5 c2c3 e4e3 g2g3 d5e4 d2e3 c7c5 d1d5 e4d5 c3c4 d5c6 h3g1 c8e6 f2f3 e6c4 a1a2 c4b3 c1d2 b3a2 d2b4 a2b1 b4d2 c5c4 h2h3 c4c3 d2c1 c6c4 c1d2 c3d2 e1f2 d2d1n f2e1 c4c3 e1d1 c3a3 e3e4 a6a5 f3f4 a3b3 d1c1 a5a4 f4e5 a4a3 g3g4 a3a2 c1d2 a2a1q e5e6";
			fens[56] = "rn2kbnr/p4ppp/4P3/8/4P1P1/1q5P/3K4/qb4NR b kq - 0 29";
			fens[55] = "rn2kbnr/p4ppp/8/4P3/4P1P1/1q5P/3K4/qb4NR w kq - 0 29";
			fens[54] = "rn2kbnr/p4ppp/8/4P3/4P1P1/1q5P/p2K4/1b4NR b kq - 1 28";
			fens[53] = "rn2kbnr/p4ppp/8/4P3/4P1P1/1q5P/p7/1bK3NR w kq - 0 28";
			fens[52] = "rn2kbnr/p4ppp/8/4P3/4P1P1/pq5P/8/1bK3NR b kq - 0 27";
			fens[51] = "rn2kbnr/p4ppp/8/4P3/4P3/pq4PP/8/1bK3NR w kq - 0 27";
			fens[50] = "rn2kbnr/p4ppp/8/4P3/p3P3/1q4PP/8/1bK3NR b kq - 0 26";
			fens[49] = "rn2kbnr/p4ppp/8/4p3/p3PP2/1q4PP/8/1bK3NR w kq - 0 26";
			fens[48] = "rn2kbnr/p4ppp/8/p3p3/4PP2/1q4PP/8/1bK3NR b kq - 2 25";
			fens[47] = "rn2kbnr/p4ppp/8/p3p3/4PP2/1q4PP/8/1b1K2NR w kq - 1 25";
			fens[46] = "rn2kbnr/p4ppp/8/p3p3/4PP2/q5PP/8/1b1K2NR b kq - 0 24";
			fens[45] = "rn2kbnr/p4ppp/8/p3p3/4P3/q4PPP/8/1b1K2NR w kq - 0 24";
			fens[44] = "rn2kbnr/p4ppp/p7/4p3/4P3/q4PPP/8/1b1K2NR b kq - 0 23";
			fens[43] = "rn2kbnr/p4ppp/p7/4p3/8/q3PPPP/8/1b1K2NR w kq - 0 23";
			fens[42] = "rn2kbnr/p4ppp/p7/4p3/8/P1q1PPPP/8/1b1K2NR b kq - 0 22";
			fens[41] = "rn2kbnr/p4ppp/p7/4p3/8/P1q1PPPP/8/1b1nK1NR w kq - 2 22";
			fens[40] = "rn2kbnr/p4ppp/p7/4p3/2q5/P3PPPP/8/1b1nK1NR b kq - 1 21";
			fens[39] = "rn2kbnr/p4ppp/p7/4p3/2q5/P3PPPP/5K2/1b1n2NR w kq - 0 21";
			fens[38] = "rn2kbnr/p4ppp/p7/4p3/2q5/P3PPPP/3p1K2/1b4NR b kq - 1 20";
			fens[37] = "rn2kbnr/p4ppp/p7/4p3/2q5/P3PPPP/3p4/1b2K1NR w Kkq - 0 20";
			fens[36] = "rn2kbnr/p4ppp/p7/4p3/2q5/P1p1PPPP/3B4/1b2K1NR b Kkq - 3 19";
			fens[35] = "rn2kbnr/p4ppp/p7/4p3/2q5/P1p1PPPP/8/1bB1K1NR w Kkq - 2 19";
			fens[34] = "rn2kbnr/p4ppp/p1q5/4p3/8/P1p1PPPP/8/1bB1K1NR b Kkq - 1 18";
			fens[33] = "rn2kbnr/p4ppp/p1q5/4p3/8/P1p1PPPP/3B4/1b2K1NR w Kkq - 0 18";
			fens[32] = "rn2kbnr/p4ppp/p1q5/4p3/2p5/P3PPPP/3B4/1b2K1NR b Kkq - 0 17";
			fens[31] = "rn2kbnr/p4ppp/p1q5/4p3/2p5/P3PPP1/3B3P/1b2K1NR w Kkq - 0 17";
			fens[30] = "rn2kbnr/p4ppp/p1q5/2p1p3/8/P3PPP1/3B3P/1b2K1NR b Kkq - 1 16";
			fens[29] = "rn2kbnr/p4ppp/p1q5/2p1p3/1B6/P3PPP1/7P/1b2K1NR w Kkq - 0 16";
			fens[28] = "rn2kbnr/p4ppp/p1q5/2p1p3/1B6/P3PPP1/b6P/1N2K1NR b Kkq - 1 15";
			fens[27] = "rn2kbnr/p4ppp/p1q5/2p1p3/8/P3PPP1/b2B3P/1N2K1NR w Kkq - 0 15";
			fens[26] = "rn2kbnr/p4ppp/p1q5/2p1p3/8/Pb2PPP1/R2B3P/1N2K1NR b Kkq - 1 14";
			fens[25] = "rn2kbnr/p4ppp/p1q5/2p1p3/8/Pb2PPP1/R6P/1NB1K1NR w Kkq - 0 14";
			fens[24] = "rn2kbnr/p4ppp/p1q5/2p1p3/2b5/PP2PPP1/R6P/1NB1K1NR b Kkq - 1 13";
			fens[23] = "rn2kbnr/p4ppp/p1q5/2p1p3/2b5/PP2PPP1/7P/RNB1K1NR w KQkq - 0 13";
			fens[22] = "rn2kbnr/p4ppp/p1q1b3/2p1p3/2P5/PP2PPP1/7P/RNB1K1NR b KQkq - 0 12";
			fens[21] = "rn2kbnr/p4ppp/p1q1b3/2p1p3/2P5/PP2P1P1/5P1P/RNB1K1NR w KQkq - 3 12";
			fens[20] = "rnb1kbnr/p4ppp/p1q5/2p1p3/2P5/PP2P1P1/5P1P/RNB1K1NR b KQkq - 2 11";
			fens[19] = "rnb1kbnr/p4ppp/p1q5/2p1p3/2P5/PP2P1PN/5P1P/RNB1K2R w KQkq - 1 11";
			fens[18] = "rnb1kbnr/p4ppp/p7/2pqp3/2P5/PP2P1PN/5P1P/RNB1K2R b KQkq - 0 10";
			fens[17] = "rnb1kbnr/p4ppp/p7/2pqp3/8/PPP1P1PN/5P1P/RNB1K2R w KQkq - 0 10";
			fens[16] = "rnb1kbnr/p4ppp/p7/2pQp3/4q3/PPP1P1PN/5P1P/RNB1K2R b KQkq - 1 9";
			fens[15] = "rnb1kbnr/p4ppp/p7/2p1p3/4q3/PPP1P1PN/5P1P/RNBQK2R w KQkq c6 0 9";
			fens[14] = "rnb1kbnr/p1p2ppp/p7/4p3/4q3/PPP1P1PN/5P1P/RNBQK2R b KQkq - 0 8";
			fens[13] = "rnb1kbnr/p1p2ppp/p7/4p3/4q3/PPP1p1PN/3P1P1P/RNBQK2R w KQkq - 1 8";
			fens[12] = "rnb1kbnr/p1p2ppp/p7/3qp3/8/PPP1p1PN/3P1P1P/RNBQK2R b KQkq - 0 7";
			fens[11] = "rnb1kbnr/p1p2ppp/p7/3qp3/8/PPP1p2N/3P1PPP/RNBQK2R w KQkq - 0 7";
			fens[10] = "rnb1kbnr/p1p2ppp/p7/3qp3/4p3/PPP4N/3P1PPP/RNBQK2R b KQkq - 0 6";
			fens[9] = "rnb1kbnr/p1p2ppp/p7/3qp3/4p3/PP5N/2PP1PPP/RNBQK2R w KQkq - 1 6";
			fens[8] = "rnbqkbnr/p1p2ppp/p7/4p3/4p3/PP5N/2PP1PPP/RNBQK2R b KQkq - 0 5";
			fens[7] = "rnbqkbnr/p1p2ppp/p7/4p3/4p3/P6N/1PPP1PPP/RNBQK2R w KQkq - 0 5";
			fens[6] = "rnbqkbnr/ppp2ppp/B7/4p3/4p3/P6N/1PPP1PPP/RNBQK2R b KQkq - 1 4";
			fens[5] = "rnbqkbnr/ppp2ppp/8/4p3/4p3/P6N/1PPP1PPP/RNBQKB1R w KQkq - 0 4";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3pp3/4P3/P6N/1PPP1PPP/RNBQKB1R b KQkq e3 0 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/8/P6N/1PPPPPPP/RNBQKB1R w KQkq e6 0 3";
			fens[2] = "rnbqkbnr/ppp1pppp/8/3p4/8/P6N/1PPPPPPP/RNBQKB1R b KQkq - 1 2";
			fens[1] = "rnbqkbnr/ppp1pppp/8/3p4/8/P7/1PPPPPPP/RNBQKBNR w KQkq d6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test10", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test10: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test11() return boolean is
			@noparse
			LOG::LogInfo(message: "test11: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 a7a5";
			fens[1] = "rnbqkbnr/1ppppppp/8/p7/4P3/8/PPPP1PPP/RNBQKBNR w KQkq a6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test11", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test11: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test12() return boolean is
			@noparse
			LOG::LogInfo(message: "test12: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 d7d5 b2b3 e7e5 c1b2";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3pp3/8/PP6/1BPPPPPP/RN1QKBNR b KQkq - 1 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/8/PP6/2PPPPPP/RNBQKBNR w KQkq e6 0 3";
			fens[2] = "rnbqkbnr/ppp1pppp/8/3p4/8/PP6/2PPPPPP/RNBQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/ppp1pppp/8/3p4/8/P7/1PPPPPPP/RNBQKBNR w KQkq d6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test12", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test12: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test13() return boolean is
			@noparse
			LOG::LogInfo(message: "test13: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 c7c6 d1h5 c6c5 h5c5 g8h6 f1b5 g7g5 g1f3 e7e6 c5g5 d8g5 f3g5 f8c5 e1g1 h8g8 d2d3 a7a6 b5a4 e8f8 b1c3 f8e7 g5f3 h6g4 c1g5 e7e8 a1e1 c5f2 f1f2 g4e5 f3e5 g8g5 f2f7 g5e5 e1f1 h7h6 f7f8 e8e7 f1f7";
			fens[38] = "rnb2R2/1p1pkR2/p3p2p/4r3/B3P3/2NP4/PPP3PP/6K1 b - - 3 20";
			fens[37] = "rnb2R2/1p1pk3/p3p2p/4r3/B3P3/2NP4/PPP3PP/5RK1 w - - 2 20";
			fens[36] = "rnb1kR2/1p1p4/p3p2p/4r3/B3P3/2NP4/PPP3PP/5RK1 b - - 1 19";
			fens[35] = "rnb1k3/1p1p1R2/p3p2p/4r3/B3P3/2NP4/PPP3PP/5RK1 w - - 0 19";
			fens[34] = "rnb1k3/1p1p1R1p/p3p3/4r3/B3P3/2NP4/PPP3PP/5RK1 b - - 1 18";
			fens[33] = "rnb1k3/1p1p1R1p/p3p3/4r3/B3P3/2NP4/PPP3PP/4R1K1 w - - 0 18";
			fens[32] = "rnb1k3/1p1p1R1p/p3p3/4N1r1/B3P3/2NP4/PPP3PP/4R1K1 b - - 0 17";
			fens[31] = "rnb1k3/1p1p1p1p/p3p3/4N1r1/B3P3/2NP4/PPP2RPP/4R1K1 w - - 0 17";
			fens[30] = "rnb1k1r1/1p1p1p1p/p3p3/4N1B1/B3P3/2NP4/PPP2RPP/4R1K1 b - - 0 16";
			fens[29] = "rnb1k1r1/1p1p1p1p/p3p3/4n1B1/B3P3/2NP1N2/PPP2RPP/4R1K1 w - - 1 16";
			fens[28] = "rnb1k1r1/1p1p1p1p/p3p3/6B1/B3P1n1/2NP1N2/PPP2RPP/4R1K1 b - - 0 15";
			fens[27] = "rnb1k1r1/1p1p1p1p/p3p3/6B1/B3P1n1/2NP1N2/PPP2bPP/4RRK1 w - - 0 15";
			fens[26] = "rnb1k1r1/1p1p1p1p/p3p3/2b3B1/B3P1n1/2NP1N2/PPP2PPP/4RRK1 b - - 9 14";
			fens[25] = "rnb1k1r1/1p1p1p1p/p3p3/2b3B1/B3P1n1/2NP1N2/PPP2PPP/R4RK1 w - - 8 14";
			fens[24] = "rnb3r1/1p1pkp1p/p3p3/2b3B1/B3P1n1/2NP1N2/PPP2PPP/R4RK1 b - - 7 13";
			fens[23] = "rnb3r1/1p1pkp1p/p3p3/2b5/B3P1n1/2NP1N2/PPP2PPP/R1B2RK1 w - - 6 13";
			fens[22] = "rnb3r1/1p1pkp1p/p3p2n/2b5/B3P3/2NP1N2/PPP2PPP/R1B2RK1 b - - 5 12";
			fens[21] = "rnb3r1/1p1pkp1p/p3p2n/2b3N1/B3P3/2NP4/PPP2PPP/R1B2RK1 w - - 4 12";
			fens[20] = "rnb2kr1/1p1p1p1p/p3p2n/2b3N1/B3P3/2NP4/PPP2PPP/R1B2RK1 b - - 3 11";
			fens[19] = "rnb2kr1/1p1p1p1p/p3p2n/2b3N1/B3P3/3P4/PPP2PPP/RNB2RK1 w - - 2 11";
			fens[18] = "rnb1k1r1/1p1p1p1p/p3p2n/2b3N1/B3P3/3P4/PPP2PPP/RNB2RK1 b q - 1 10";
			fens[17] = "rnb1k1r1/1p1p1p1p/p3p2n/1Bb3N1/4P3/3P4/PPP2PPP/RNB2RK1 w q - 0 10";
			fens[16] = "rnb1k1r1/pp1p1p1p/4p2n/1Bb3N1/4P3/3P4/PPP2PPP/RNB2RK1 b q - 0 9";
			fens[15] = "rnb1k1r1/pp1p1p1p/4p2n/1Bb3N1/4P3/8/PPPP1PPP/RNB2RK1 w q - 3 9";
			fens[14] = "rnb1k2r/pp1p1p1p/4p2n/1Bb3N1/4P3/8/PPPP1PPP/RNB2RK1 b kq - 2 8";
			fens[13] = "rnb1k2r/pp1p1p1p/4p2n/1Bb3N1/4P3/8/PPPP1PPP/RNB1K2R w KQkq - 1 8";
			fens[12] = "rnb1kb1r/pp1p1p1p/4p2n/1B4N1/4P3/8/PPPP1PPP/RNB1K2R b KQkq - 0 7";
			fens[11] = "rnb1kb1r/pp1p1p1p/4p2n/1B4q1/4P3/5N2/PPPP1PPP/RNB1K2R w KQkq - 0 7";
			fens[10] = "rnbqkb1r/pp1p1p1p/4p2n/1B4Q1/4P3/5N2/PPPP1PPP/RNB1K2R b KQkq - 0 6";
			fens[9] = "rnbqkb1r/pp1p1p1p/4p2n/1BQ3p1/4P3/5N2/PPPP1PPP/RNB1K2R w KQkq - 0 6";
			fens[8] = "rnbqkb1r/pp1ppp1p/7n/1BQ3p1/4P3/5N2/PPPP1PPP/RNB1K2R b KQkq - 1 5";
			fens[7] = "rnbqkb1r/pp1ppp1p/7n/1BQ3p1/4P3/8/PPPP1PPP/RNB1K1NR w KQkq g6 0 5";
			fens[6] = "rnbqkb1r/pp1ppppp/7n/1BQ5/4P3/8/PPPP1PPP/RNB1K1NR b KQkq - 2 4";
			fens[5] = "rnbqkb1r/pp1ppppp/7n/2Q5/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 1 4";
			fens[4] = "rnbqkbnr/pp1ppppp/8/2Q5/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/pp1ppppp/8/2p4Q/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/pp1ppppp/2p5/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pp1ppppp/2p5/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test13", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test13: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test14() return boolean is
			@noparse
			LOG::LogInfo(message: "test14: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 e7e5 h2h3 d8h4 g1f3 h4f6 f3e5 f6e5 c2c3 d7d5 d1b3 c8e6 b3b7 d5d4 b7a8 e6d5 a8b8 e8e7 b8f8 e7f8 c3d4 e5d4 g2g3 d5h1 b2b3 d4a1 a3a4 a1b1 d2d4 b1c1";
			fens[29] = "5knr/p1p2ppp/8/8/P2P4/1P4PP/4PP2/2q1KB1b w - - 0 16";
			fens[28] = "5knr/p1p2ppp/8/8/P2P4/1P4PP/4PP2/1qB1KB1b b - d3 0 15";
			fens[27] = "5knr/p1p2ppp/8/8/P7/1P4PP/3PPP2/1qB1KB1b w - - 0 15";
			fens[26] = "5knr/p1p2ppp/8/8/P7/1P4PP/3PPP2/qNB1KB1b b - - 0 14";
			fens[25] = "5knr/p1p2ppp/8/8/8/PP4PP/3PPP2/qNB1KB1b w - - 0 14";
			fens[24] = "5knr/p1p2ppp/8/8/3q4/PP4PP/3PPP2/RNB1KB1b b Q - 0 13";
			fens[23] = "5knr/p1p2ppp/8/8/3q4/P5PP/1P1PPP2/RNB1KB1b w Q - 0 13";
			fens[22] = "5knr/p1p2ppp/8/3b4/3q4/P5PP/1P1PPP2/RNB1KB1R b KQ - 0 12";
			fens[21] = "5knr/p1p2ppp/8/3b4/3q4/P6P/1P1PPPP1/RNB1KB1R w KQ - 0 12";
			fens[20] = "5knr/p1p2ppp/8/3bq3/3P4/P6P/1P1PPPP1/RNB1KB1R b KQ - 0 11";
			fens[19] = "5knr/p1p2ppp/8/3bq3/3p4/P1P4P/1P1PPPP1/RNB1KB1R w KQ - 0 11";
			fens[18] = "5Qnr/p1p1kppp/8/3bq3/3p4/P1P4P/1P1PPPP1/RNB1KB1R b KQ - 0 10";
			fens[17] = "1Q3bnr/p1p1kppp/8/3bq3/3p4/P1P4P/1P1PPPP1/RNB1KB1R w KQ - 1 10";
			fens[16] = "1Q2kbnr/p1p2ppp/8/3bq3/3p4/P1P4P/1P1PPPP1/RNB1KB1R b KQk - 0 9";
			fens[15] = "Qn2kbnr/p1p2ppp/8/3bq3/3p4/P1P4P/1P1PPPP1/RNB1KB1R w KQk - 1 9";
			fens[14] = "Qn2kbnr/p1p2ppp/4b3/4q3/3p4/P1P4P/1P1PPPP1/RNB1KB1R b KQk - 0 8";
			fens[13] = "rn2kbnr/pQp2ppp/4b3/4q3/3p4/P1P4P/1P1PPPP1/RNB1KB1R w KQkq - 0 8";
			fens[12] = "rn2kbnr/pQp2ppp/4b3/3pq3/8/P1P4P/1P1PPPP1/RNB1KB1R b KQkq - 0 7";
			fens[11] = "rn2kbnr/ppp2ppp/4b3/3pq3/8/PQP4P/1P1PPPP1/RNB1KB1R w KQkq - 2 7";
			fens[10] = "rnb1kbnr/ppp2ppp/8/3pq3/8/PQP4P/1P1PPPP1/RNB1KB1R b KQkq - 1 6";
			fens[9] = "rnb1kbnr/ppp2ppp/8/3pq3/8/P1P4P/1P1PPPP1/RNBQKB1R w KQkq d6 0 6";
			fens[8] = "rnb1kbnr/pppp1ppp/8/4q3/8/P1P4P/1P1PPPP1/RNBQKB1R b KQkq - 0 5";
			fens[7] = "rnb1kbnr/pppp1ppp/8/4q3/8/P6P/1PPPPPP1/RNBQKB1R w KQkq - 0 5";
			fens[6] = "rnb1kbnr/pppp1ppp/5q2/4N3/8/P6P/1PPPPPP1/RNBQKB1R b KQkq - 0 4";
			fens[5] = "rnb1kbnr/pppp1ppp/5q2/4p3/8/P4N1P/1PPPPPP1/RNBQKB1R w KQkq - 3 4";
			fens[4] = "rnb1kbnr/pppp1ppp/8/4p3/7q/P4N1P/1PPPPPP1/RNBQKB1R b KQkq - 2 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/4p3/7q/P6P/1PPPPPP1/RNBQKBNR w KQkq - 1 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/8/P6P/1PPPPPP1/RNBQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/P7/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test14", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test14: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test15() return boolean is
			@noparse
			LOG::LogInfo(message: "test15: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a4 e7e6 a1a2 e8e7 h2h3 e6e5 h1h2 g8h6 d2d4 g7g5 h3h4 e7e6 c2c4 f8b4 c1d2 b4d2 d1d2 g5h4 h2h4 d8h4 g2g3 h4h1 d4d5";
			fens[22] = "rnb4r/pppp1p1p/4k2n/3Pp3/P1P5/6P1/RP1QPP2/1N2KBNq b - - 0 12";
			fens[21] = "rnb4r/pppp1p1p/4k2n/4p3/P1PP4/6P1/RP1QPP2/1N2KBNq w - - 1 12";
			fens[20] = "rnb4r/pppp1p1p/4k2n/4p3/P1PP3q/6P1/RP1QPP2/1N2KBN1 b - - 0 11";
			fens[19] = "rnb4r/pppp1p1p/4k2n/4p3/P1PP3q/8/RP1QPPP1/1N2KBN1 w - - 0 11";
			fens[18] = "rnbq3r/pppp1p1p/4k2n/4p3/P1PP3R/8/RP1QPPP1/1N2KBN1 b - - 0 10";
			fens[17] = "rnbq3r/pppp1p1p/4k2n/4p3/P1PP3p/8/RP1QPPPR/1N2KBN1 w - - 0 10";
			fens[16] = "rnbq3r/pppp1p1p/4k2n/4p1p1/P1PP3P/8/RP1QPPPR/1N2KBN1 b - - 0 9";
			fens[15] = "rnbq3r/pppp1p1p/4k2n/4p1p1/P1PP3P/8/RP1bPPPR/1N1QKBN1 w - - 0 9";
			fens[14] = "rnbq3r/pppp1p1p/4k2n/4p1p1/PbPP3P/8/RP1BPPPR/1N1QKBN1 b - - 2 8";
			fens[13] = "rnbq3r/pppp1p1p/4k2n/4p1p1/PbPP3P/8/RP2PPPR/1NBQKBN1 w - - 1 8";
			fens[12] = "rnbq1b1r/pppp1p1p/4k2n/4p1p1/P1PP3P/8/RP2PPPR/1NBQKBN1 b - c3 0 7";
			fens[11] = "rnbq1b1r/pppp1p1p/4k2n/4p1p1/P2P3P/8/RPP1PPPR/1NBQKBN1 w - - 1 7";
			fens[10] = "rnbq1b1r/ppppkp1p/7n/4p1p1/P2P3P/8/RPP1PPPR/1NBQKBN1 b - - 0 6";
			fens[9] = "rnbq1b1r/ppppkp1p/7n/4p1p1/P2P4/7P/RPP1PPPR/1NBQKBN1 w - g6 0 6";
			fens[8] = "rnbq1b1r/ppppkppp/7n/4p3/P2P4/7P/RPP1PPPR/1NBQKBN1 b - d3 0 5";
			fens[7] = "rnbq1b1r/ppppkppp/7n/4p3/P7/7P/RPPPPPPR/1NBQKBN1 w - - 2 5";
			fens[6] = "rnbq1bnr/ppppkppp/8/4p3/P7/7P/RPPPPPPR/1NBQKBN1 b - - 1 4";
			fens[5] = "rnbq1bnr/ppppkppp/8/4p3/P7/7P/RPPPPPP1/1NBQKBNR w K - 0 4";
			fens[4] = "rnbq1bnr/ppppkppp/4p3/8/P7/7P/RPPPPPP1/1NBQKBNR b K - 0 3";
			fens[3] = "rnbq1bnr/ppppkppp/4p3/8/P7/8/RPPPPPPP/1NBQKBNR w K - 2 3";
			fens[2] = "rnbqkbnr/pppp1ppp/4p3/8/P7/8/RPPPPPPP/1NBQKBNR b Kkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/4p3/8/P7/8/1PPPPPPP/RNBQKBNR w KQkq - 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/P7/8/1PPPPPPP/RNBQKBNR b KQkq a3 0 1";
			
			result = ::test_do_move(name: "test15", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test15: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test16() return boolean is
			@noparse
			LOG::LogInfo(message: "test16: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b1c3 e7e5 c3b5 d8h4 b5d6 e8e7 d6c8 e7f6 g2g4 b8c6 g4g5 h4g5 c8a7 a8a7 g1h3 g5g4 b2b4 g4b4 h3g1 f8c5 f1g2 b4f4 g2c6 f4f2";
			fens[23] = "6nr/rppp1ppp/2B2k2/2b1p3/8/8/P1PPPq1P/R1BQK1NR w KQ - 0 13";
			fens[22] = "6nr/rppp1ppp/2B2k2/2b1p3/5q2/8/P1PPPP1P/R1BQK1NR b KQ - 0 12";
			fens[21] = "6nr/rppp1ppp/2n2k2/2b1p3/5q2/8/P1PPPPBP/R1BQK1NR w KQ - 4 12";
			fens[20] = "6nr/rppp1ppp/2n2k2/2b1p3/1q6/8/P1PPPPBP/R1BQK1NR b KQ - 3 11";
			fens[19] = "6nr/rppp1ppp/2n2k2/2b1p3/1q6/8/P1PPPP1P/R1BQKBNR w KQ - 2 11";
			fens[18] = "5bnr/rppp1ppp/2n2k2/4p3/1q6/8/P1PPPP1P/R1BQKBNR b KQ - 1 10";
			fens[17] = "5bnr/rppp1ppp/2n2k2/4p3/1q6/7N/P1PPPP1P/R1BQKB1R w KQ - 0 10";
			fens[16] = "5bnr/rppp1ppp/2n2k2/4p3/1P4q1/7N/P1PPPP1P/R1BQKB1R b KQ b3 0 9";
			fens[15] = "5bnr/rppp1ppp/2n2k2/4p3/6q1/7N/PPPPPP1P/R1BQKB1R w KQ - 2 9";
			fens[14] = "5bnr/rppp1ppp/2n2k2/4p1q1/8/7N/PPPPPP1P/R1BQKB1R b KQ - 1 8";
			fens[13] = "5bnr/rppp1ppp/2n2k2/4p1q1/8/8/PPPPPP1P/R1BQKBNR w KQ - 0 8";
			fens[12] = "r4bnr/Nppp1ppp/2n2k2/4p1q1/8/8/PPPPPP1P/R1BQKBNR b KQ - 0 7";
			fens[11] = "r1N2bnr/pppp1ppp/2n2k2/4p1q1/8/8/PPPPPP1P/R1BQKBNR w KQ - 0 7";
			fens[10] = "r1N2bnr/pppp1ppp/2n2k2/4p1P1/7q/8/PPPPPP1P/R1BQKBNR b KQ - 0 6";
			fens[9] = "r1N2bnr/pppp1ppp/2n2k2/4p3/6Pq/8/PPPPPP1P/R1BQKBNR w KQ - 1 6";
			fens[8] = "rnN2bnr/pppp1ppp/5k2/4p3/6Pq/8/PPPPPP1P/R1BQKBNR b KQ g3 0 5";
			fens[7] = "rnN2bnr/pppp1ppp/5k2/4p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 5";
			fens[6] = "rnN2bnr/ppppkppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 0 4";
			fens[5] = "rnb2bnr/ppppkppp/3N4/4p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 4 4";
			fens[4] = "rnb1kbnr/pppp1ppp/3N4/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQkq - 3 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/1N2p3/7q/8/PPPPPPPP/R1BQKBNR w KQkq - 2 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/1N2p3/8/8/PPPPPPPP/R1BQKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/2N5/PPPPPPPP/R1BQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/2N5/PPPPPPPP/R1BQKBNR b KQkq - 1 1";
			
			result = ::test_do_move(name: "test16", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test16: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test17() return boolean is
			@noparse
			LOG::LogInfo(message: "test17: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 g7g5 d2d4 d7d5 e4d5 d8d5 b1a3 d5e4 f1e2 g5g4 f2f3 g4f3 g2f3 e4d5 c2c4 d5d6 c4c5 d6d5 e2c4 d5d8 g1e2 c8h3 c1f4 h3g2 e2c3 g2h1 e1d2";
			fens[26] = "rn1qkbnr/ppp1pp1p/8/2P5/2BP1B2/N1N2P2/PP1K3P/R2Q3b b kq - 1 14";
			fens[25] = "rn1qkbnr/ppp1pp1p/8/2P5/2BP1B2/N1N2P2/PP5P/R2QK2b w Qkq - 0 14";
			fens[24] = "rn1qkbnr/ppp1pp1p/8/2P5/2BP1B2/N1N2P2/PP4bP/R2QK2R b KQkq - 8 13";
			fens[23] = "rn1qkbnr/ppp1pp1p/8/2P5/2BP1B2/N4P2/PP2N1bP/R2QK2R w KQkq - 7 13";
			fens[22] = "rn1qkbnr/ppp1pp1p/8/2P5/2BP1B2/N4P1b/PP2N2P/R2QK2R b KQkq - 6 12";
			fens[21] = "rn1qkbnr/ppp1pp1p/8/2P5/2BP4/N4P1b/PP2N2P/R1BQK2R w KQkq - 5 12";
			fens[20] = "rnbqkbnr/ppp1pp1p/8/2P5/2BP4/N4P2/PP2N2P/R1BQK2R b KQkq - 4 11";
			fens[19] = "rnbqkbnr/ppp1pp1p/8/2P5/2BP4/N4P2/PP5P/R1BQK1NR w KQkq - 3 11";
			fens[18] = "rnb1kbnr/ppp1pp1p/8/2Pq4/2BP4/N4P2/PP5P/R1BQK1NR b KQkq - 2 10";
			fens[17] = "rnb1kbnr/ppp1pp1p/8/2Pq4/3P4/N4P2/PP2B2P/R1BQK1NR w KQkq - 1 10";
			fens[16] = "rnb1kbnr/ppp1pp1p/3q4/2P5/3P4/N4P2/PP2B2P/R1BQK1NR b KQkq - 0 9";
			fens[15] = "rnb1kbnr/ppp1pp1p/3q4/8/2PP4/N4P2/PP2B2P/R1BQK1NR w KQkq - 1 9";
			fens[14] = "rnb1kbnr/ppp1pp1p/8/3q4/2PP4/N4P2/PP2B2P/R1BQK1NR b KQkq c3 0 8";
			fens[13] = "rnb1kbnr/ppp1pp1p/8/3q4/3P4/N4P2/PPP1B2P/R1BQK1NR w KQkq - 1 8";
			fens[12] = "rnb1kbnr/ppp1pp1p/8/8/3Pq3/N4P2/PPP1B2P/R1BQK1NR b KQkq - 0 7";
			fens[11] = "rnb1kbnr/ppp1pp1p/8/8/3Pq3/N4p2/PPP1B1PP/R1BQK1NR w KQkq - 0 7";
			fens[10] = "rnb1kbnr/ppp1pp1p/8/8/3Pq1p1/N4P2/PPP1B1PP/R1BQK1NR b KQkq - 0 6";
			fens[9] = "rnb1kbnr/ppp1pp1p/8/8/3Pq1p1/N7/PPP1BPPP/R1BQK1NR w KQkq - 0 6";
			fens[8] = "rnb1kbnr/ppp1pp1p/8/6p1/3Pq3/N7/PPP1BPPP/R1BQK1NR b KQkq - 3 5";
			fens[7] = "rnb1kbnr/ppp1pp1p/8/6p1/3Pq3/N7/PPP2PPP/R1BQKBNR w KQkq - 2 5";
			fens[6] = "rnb1kbnr/ppp1pp1p/8/3q2p1/3P4/N7/PPP2PPP/R1BQKBNR b KQkq - 1 4";
			fens[5] = "rnb1kbnr/ppp1pp1p/8/3q2p1/3P4/8/PPP2PPP/RNBQKBNR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/ppp1pp1p/8/3P2p1/3P4/8/PPP2PPP/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/ppp1pp1p/8/3p2p1/3PP3/8/PPP2PPP/RNBQKBNR w KQkq d6 0 3";
			fens[2] = "rnbqkbnr/pppppp1p/8/6p1/3PP3/8/PPP2PPP/RNBQKBNR b KQkq d3 0 2";
			fens[1] = "rnbqkbnr/pppppp1p/8/6p1/4P3/8/PPPP1PPP/RNBQKBNR w KQkq g6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test17", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test17: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test18() return boolean is
			@noparse
			LOG::LogInfo(message: "test18: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 e7e5 a3a4 d7d5 c2c3";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3pp3/P7/2P5/1P1PPPPP/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/P7/8/1PPPPPPP/RNBQKBNR w KQkq d6 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/P7/8/1PPPPPPP/RNBQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/P7/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test18", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test18: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test19() return boolean is
			@noparse
			LOG::LogInfo(message: "test19: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "d2d4 a7a5 e2e4 a5a4 b2b3 a4b3 c2b3 b7b6 e1e2 b6b5 d1d3 b5b4 c1f4 g7g5 f4g5 b8c6 e2d1 c6a7 f1e2 f7f5 e4f5 f8g7 e2h5 e8f8 f5f6 e7f6 d3f5 c7c6 g5f6 g7f6 f5f6 d8f6 b1d2 f6f2 g1h3 f2g2 h3f4 g2h1 d1e2 h1a1 d2e4 a1d4 e4g5 d4f4 g5h3 f4h2 e2f3 h2h3 f3e4 h3h5 e4d4 h5d1 d4c4 d1g4 c4d3 d7d6 d3e3 g4g7 e3f4 d6d5 f4e3 a8b8 a2a3 b4a3 b3b4 b8b4 e3f3 b4h4 f3e2 d5d4 e2d2 f8e8 d2d1 c6c5 d1e1 g7d7 e1f2 h4h5 f2f3 d7g7 f3e4 g7g3";
			fens[81] = "2b1k1nr/n6p/8/2p4r/3pK3/p5q1/8/8 w - - 8 42";
			fens[80] = "2b1k1nr/n5qp/8/2p4r/3pK3/p7/8/8 b - - 7 41";
			fens[79] = "2b1k1nr/n5qp/8/2p4r/3p4/p4K2/8/8 w - - 6 41";
			fens[78] = "2b1k1nr/n2q3p/8/2p4r/3p4/p4K2/8/8 b - - 5 40";
			fens[77] = "2b1k1nr/n2q3p/8/2p4r/3p4/p7/5K2/8 w - - 4 40";
			fens[76] = "2b1k1nr/n2q3p/8/2p5/3p3r/p7/5K2/8 b - - 3 39";
			fens[75] = "2b1k1nr/n2q3p/8/2p5/3p3r/p7/8/4K3 w - - 2 39";
			fens[74] = "2b1k1nr/n5qp/8/2p5/3p3r/p7/8/4K3 b - - 1 38";
			fens[73] = "2b1k1nr/n5qp/8/2p5/3p3r/p7/8/3K4 w - - 0 38";
			fens[72] = "2b1k1nr/n5qp/2p5/8/3p3r/p7/8/3K4 b - - 3 37";
			fens[71] = "2b1k1nr/n5qp/2p5/8/3p3r/p7/3K4/8 w - - 2 37";
			fens[70] = "2b2knr/n5qp/2p5/8/3p3r/p7/3K4/8 b - - 1 36";
			fens[69] = "2b2knr/n5qp/2p5/8/3p3r/p7/4K3/8 w - - 0 36";
			fens[68] = "2b2knr/n5qp/2p5/3p4/7r/p7/4K3/8 b - - 3 35";
			fens[67] = "2b2knr/n5qp/2p5/3p4/7r/p4K2/8/8 w - - 2 35";
			fens[66] = "2b2knr/n5qp/2p5/3p4/1r6/p4K2/8/8 b - - 1 34";
			fens[65] = "2b2knr/n5qp/2p5/3p4/1r6/p3K3/8/8 w - - 0 34";
			fens[64] = "1rb2knr/n5qp/2p5/3p4/1P6/p3K3/8/8 b - - 0 33";
			fens[63] = "1rb2knr/n5qp/2p5/3p4/8/pP2K3/8/8 w - - 0 33";
			fens[62] = "1rb2knr/n5qp/2p5/3p4/1p6/PP2K3/8/8 b - - 0 32";
			fens[61] = "1rb2knr/n5qp/2p5/3p4/1p6/1P2K3/P7/8 w - - 2 32";
			fens[60] = "r1b2knr/n5qp/2p5/3p4/1p6/1P2K3/P7/8 b - - 1 31";
			fens[59] = "r1b2knr/n5qp/2p5/3p4/1p3K2/1P6/P7/8 w - - 0 31";
			fens[58] = "r1b2knr/n5qp/2pp4/8/1p3K2/1P6/P7/8 b - - 3 30";
			fens[57] = "r1b2knr/n5qp/2pp4/8/1p6/1P2K3/P7/8 w - - 2 30";
			fens[56] = "r1b2knr/n6p/2pp4/8/1p4q1/1P2K3/P7/8 b - - 1 29";
			fens[55] = "r1b2knr/n6p/2pp4/8/1p4q1/1P1K4/P7/8 w - - 0 29";
			fens[54] = "r1b2knr/n2p3p/2p5/8/1p4q1/1P1K4/P7/8 b - - 5 28";
			fens[53] = "r1b2knr/n2p3p/2p5/8/1pK3q1/1P6/P7/8 w - - 4 28";
			fens[52] = "r1b2knr/n2p3p/2p5/8/1pK5/1P6/P7/3q4 b - - 3 27";
			fens[51] = "r1b2knr/n2p3p/2p5/8/1p1K4/1P6/P7/3q4 w - - 2 27";
			fens[50] = "r1b2knr/n2p3p/2p5/7q/1p1K4/1P6/P7/8 b - - 1 26";
			fens[49] = "r1b2knr/n2p3p/2p5/7q/1p2K3/1P6/P7/8 w - - 0 26";
			fens[48] = "r1b2knr/n2p3p/2p5/7B/1p2K3/1P5q/P7/8 b - - 1 25";
			fens[47] = "r1b2knr/n2p3p/2p5/7B/1p6/1P3K1q/P7/8 w - - 0 25";
			fens[46] = "r1b2knr/n2p3p/2p5/7B/1p6/1P3K1N/P6q/8 b - - 1 24";
			fens[45] = "r1b2knr/n2p3p/2p5/7B/1p6/1P5N/P3K2q/8 w - - 0 24";
			fens[44] = "r1b2knr/n2p3p/2p5/7B/1p3q2/1P5N/P3K2P/8 b - - 1 23";
			fens[43] = "r1b2knr/n2p3p/2p5/6NB/1p3q2/1P6/P3K2P/8 w - - 0 23";
			fens[42] = "r1b2knr/n2p3p/2p5/6NB/1p1q1N2/1P6/P3K2P/8 b - - 1 22";
			fens[41] = "r1b2knr/n2p3p/2p5/7B/1p1qNN2/1P6/P3K2P/8 w - - 0 22";
			fens[40] = "r1b2knr/n2p3p/2p5/7B/1p1PNN2/1P6/P3K2P/q7 b - - 1 21";
			fens[39] = "r1b2knr/n2p3p/2p5/7B/1p1P1N2/1P6/P2NK2P/q7 w - - 0 21";
			fens[38] = "r1b2knr/n2p3p/2p5/7B/1p1P1N2/1P6/P2NK2P/R6q b - - 1 20";
			fens[37] = "r1b2knr/n2p3p/2p5/7B/1p1P1N2/1P6/P2N3P/R2K3q w - - 0 20";
			fens[36] = "r1b2knr/n2p3p/2p5/7B/1p1P1N2/1P6/P2N2qP/R2K3R b - - 1 19";
			fens[35] = "r1b2knr/n2p3p/2p5/7B/1p1P4/1P5N/P2N2qP/R2K3R w - - 0 19";
			fens[34] = "r1b2knr/n2p3p/2p5/7B/1p1P4/1P5N/P2N1qPP/R2K3R b - - 1 18";
			fens[33] = "r1b2knr/n2p3p/2p5/7B/1p1P4/1P6/P2N1qPP/R2K2NR w - - 0 18";
			fens[32] = "r1b2knr/n2p3p/2p2q2/7B/1p1P4/1P6/P2N1PPP/R2K2NR b - - 1 17";
			fens[31] = "r1b2knr/n2p3p/2p2q2/7B/1p1P4/1P6/P4PPP/RN1K2NR w - - 0 17";
			fens[30] = "r1bq1knr/n2p3p/2p2Q2/7B/1p1P4/1P6/P4PPP/RN1K2NR b - - 0 16";
			fens[29] = "r1bq1knr/n2p3p/2p2b2/5Q1B/1p1P4/1P6/P4PPP/RN1K2NR w - - 0 16";
			fens[28] = "r1bq1knr/n2p2bp/2p2B2/5Q1B/1p1P4/1P6/P4PPP/RN1K2NR b - - 0 15";
			fens[27] = "r1bq1knr/n2p2bp/2p2p2/5QBB/1p1P4/1P6/P4PPP/RN1K2NR w - - 0 15";
			fens[26] = "r1bq1knr/n1pp2bp/5p2/5QBB/1p1P4/1P6/P4PPP/RN1K2NR b - - 1 14";
			fens[25] = "r1bq1knr/n1pp2bp/5p2/6BB/1p1P4/1P1Q4/P4PPP/RN1K2NR w - - 0 14";
			fens[24] = "r1bq1knr/n1ppp1bp/5P2/6BB/1p1P4/1P1Q4/P4PPP/RN1K2NR b - - 0 13";
			fens[23] = "r1bq1knr/n1ppp1bp/8/5PBB/1p1P4/1P1Q4/P4PPP/RN1K2NR w - - 3 13";
			fens[22] = "r1bqk1nr/n1ppp1bp/8/5PBB/1p1P4/1P1Q4/P4PPP/RN1K2NR b kq - 2 12";
			fens[21] = "r1bqk1nr/n1ppp1bp/8/5PB1/1p1P4/1P1Q4/P3BPPP/RN1K2NR w kq - 1 12";
			fens[20] = "r1bqkbnr/n1ppp2p/8/5PB1/1p1P4/1P1Q4/P3BPPP/RN1K2NR b kq - 0 11";
			fens[19] = "r1bqkbnr/n1ppp2p/8/5pB1/1p1PP3/1P1Q4/P3BPPP/RN1K2NR w kq f6 0 11";
			fens[18] = "r1bqkbnr/n1pppp1p/8/6B1/1p1PP3/1P1Q4/P3BPPP/RN1K2NR b kq - 4 10";
			fens[17] = "r1bqkbnr/n1pppp1p/8/6B1/1p1PP3/1P1Q4/P4PPP/RN1K1BNR w kq - 3 10";
			fens[16] = "r1bqkbnr/2pppp1p/2n5/6B1/1p1PP3/1P1Q4/P4PPP/RN1K1BNR b kq - 2 9";
			fens[15] = "r1bqkbnr/2pppp1p/2n5/6B1/1p1PP3/1P1Q4/P3KPPP/RN3BNR w kq - 1 9";
			fens[14] = "rnbqkbnr/2pppp1p/8/6B1/1p1PP3/1P1Q4/P3KPPP/RN3BNR b kq - 0 8";
			fens[13] = "rnbqkbnr/2pppp1p/8/6p1/1p1PPB2/1P1Q4/P3KPPP/RN3BNR w kq g6 0 8";
			fens[12] = "rnbqkbnr/2pppppp/8/8/1p1PPB2/1P1Q4/P3KPPP/RN3BNR b kq - 1 7";
			fens[11] = "rnbqkbnr/2pppppp/8/8/1p1PP3/1P1Q4/P3KPPP/RNB2BNR w kq - 0 7";
			fens[10] = "rnbqkbnr/2pppppp/8/1p6/3PP3/1P1Q4/P3KPPP/RNB2BNR b kq - 1 6";
			fens[9] = "rnbqkbnr/2pppppp/8/1p6/3PP3/1P6/P3KPPP/RNBQ1BNR w kq - 0 6";
			fens[8] = "rnbqkbnr/2pppppp/1p6/8/3PP3/1P6/P3KPPP/RNBQ1BNR b kq - 1 5";
			fens[7] = "rnbqkbnr/2pppppp/1p6/8/3PP3/1P6/P4PPP/RNBQKBNR w KQkq - 0 5";
			fens[6] = "rnbqkbnr/1ppppppp/8/8/3PP3/1P6/P4PPP/RNBQKBNR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/1ppppppp/8/8/3PP3/1p6/P1P2PPP/RNBQKBNR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/1ppppppp/8/8/p2PP3/1P6/P1P2PPP/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/1ppppppp/8/8/p2PP3/8/PPP2PPP/RNBQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/1ppppppp/8/p7/3PP3/8/PPP2PPP/RNBQKBNR b KQkq e3 0 2";
			fens[1] = "rnbqkbnr/1ppppppp/8/p7/3P4/8/PPP1PPPP/RNBQKBNR w KQkq a6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq d3 0 1";
			
			result = ::test_do_move(name: "test19", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test19: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test2() return boolean is
			@noparse
			LOG::LogInfo(message: "test2: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pp2pppp/2p5/3pP3/3P4/8/PPP2PPP/RNBQKBNR b KQkq - 0 1";
			move_text = "f7f6 d1h5";
			fens[1] = "rnbqkbnr/pp2p1pp/2p2p2/3pP2Q/3P4/8/PPP2PPP/RNB1KBNR b KQkq - 1 2";
			fens[0] = "rnbqkbnr/pp2p1pp/2p2p2/3pP3/3P4/8/PPP2PPP/RNBQKBNR w KQkq - 0 2";
			
			result = ::test_do_move(name: "test2", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test2: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test20() return boolean is
			@noparse
			LOG::LogInfo(message: "test20: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 e7e5 a3a4";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/P7/8/1PPPPPPP/RNBQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/P7/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test20", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test20: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test21() return boolean is
			@noparse
			LOG::LogInfo(message: "test21: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 b7b6 d1h5 g7g5 h5g5 f8h6 g5e5 f7f6 e5d5 h6d2 c1d2 b8c6 g1f3 e7e6 d5h5 e8e7 f1b5 c6b8 e4e5 f6e5 h5e5 g8f6 d2g5 h8g8 g5f6 e7e8 f6d8 e8d8 e5e4 c7c6 b5c4 g8g2 e4h4 d8c7 h4h7 e6e5 f3e5 a7a5 c4e6 a8a7 b1c3 a7a8 e1c1 g2f2 e5d7 c8d7 e6d7 c6c5 d7g4 c7c6 h7e4 c6c7 e4e5 c7c6 e5d5 c6c7 d5d6 c7b7 c3b5 b8a6 d6d7 b7b8 d7d8 b8b7 d1d7 b7c6 d7d6 c6b5 d8a8 a6b4 a8e8 b5c4 e8e4 c4b5 g4e2 c5c4 e2c4 b5a4 d6b6 b4a2 c1b1 a2c3 b2c3 f2d2 c4b5 a4a3 e4a4";
			fens[86] = "8/8/1R6/pB6/Q7/k1P5/2Pr3P/1K5R b - - 4 44";
			fens[85] = "8/8/1R6/pB6/4Q3/k1P5/2Pr3P/1K5R w - - 3 44";
			fens[84] = "8/8/1R6/pB6/k3Q3/2P5/2Pr3P/1K5R b - - 2 43";
			fens[83] = "8/8/1R6/p7/k1B1Q3/2P5/2Pr3P/1K5R w - - 1 43";
			fens[82] = "8/8/1R6/p7/k1B1Q3/2P5/2P2r1P/1K5R b - - 0 42";
			fens[81] = "8/8/1R6/p7/k1B1Q3/2n5/1PP2r1P/1K5R w - - 2 42";
			fens[80] = "8/8/1R6/p7/k1B1Q3/8/nPP2r1P/1K5R b - - 1 41";
			fens[79] = "8/8/1R6/p7/k1B1Q3/8/nPP2r1P/2K4R w - - 0 41";
			fens[78] = "8/8/1R6/p7/knB1Q3/8/PPP2r1P/2K4R b - - 0 40";
			fens[77] = "8/8/1p1R4/p7/knB1Q3/8/PPP2r1P/2K4R w - - 1 40";
			fens[76] = "8/8/1p1R4/pk6/1nB1Q3/8/PPP2r1P/2K4R b - - 0 39";
			fens[75] = "8/8/1p1R4/pk6/1np1Q3/8/PPP1Br1P/2K4R w - - 0 39";
			fens[74] = "8/8/1p1R4/pkp5/1n2Q3/8/PPP1Br1P/2K4R b - - 6 38";
			fens[73] = "8/8/1p1R4/pkp5/1n2Q1B1/8/PPP2r1P/2K4R w - - 5 38";
			fens[72] = "8/8/1p1R4/p1p5/1nk1Q1B1/8/PPP2r1P/2K4R b - - 4 37";
			fens[71] = "4Q3/8/1p1R4/p1p5/1nk3B1/8/PPP2r1P/2K4R w - - 3 37";
			fens[70] = "4Q3/8/1p1R4/pkp5/1n4B1/8/PPP2r1P/2K4R b - - 2 36";
			fens[69] = "Q7/8/1p1R4/pkp5/1n4B1/8/PPP2r1P/2K4R w - - 1 36";
			fens[68] = "Q7/8/np1R4/pkp5/6B1/8/PPP2r1P/2K4R b - - 0 35";
			fens[67] = "r2Q4/8/np1R4/pkp5/6B1/8/PPP2r1P/2K4R w - - 0 35";
			fens[66] = "r2Q4/8/npkR4/pNp5/6B1/8/PPP2r1P/2K4R b - - 19 34";
			fens[65] = "r2Q4/3R4/npk5/pNp5/6B1/8/PPP2r1P/2K4R w - - 18 34";
			fens[64] = "r2Q4/1k1R4/np6/pNp5/6B1/8/PPP2r1P/2K4R b - - 17 33";
			fens[63] = "r2Q4/1k6/np6/pNp5/6B1/8/PPP2r1P/2KR3R w - - 16 33";
			fens[62] = "rk1Q4/8/np6/pNp5/6B1/8/PPP2r1P/2KR3R b - - 15 32";
			fens[61] = "rk6/3Q4/np6/pNp5/6B1/8/PPP2r1P/2KR3R w - - 14 32";
			fens[60] = "r7/1k1Q4/np6/pNp5/6B1/8/PPP2r1P/2KR3R b - - 13 31";
			fens[59] = "r7/1k6/np1Q4/pNp5/6B1/8/PPP2r1P/2KR3R w - - 12 31";
			fens[58] = "rn6/1k6/1p1Q4/pNp5/6B1/8/PPP2r1P/2KR3R b - - 11 30";
			fens[57] = "rn6/1k6/1p1Q4/p1p5/6B1/2N5/PPP2r1P/2KR3R w - - 10 30";
			fens[56] = "rn6/2k5/1p1Q4/p1p5/6B1/2N5/PPP2r1P/2KR3R b - - 9 29";
			fens[55] = "rn6/2k5/1p6/p1pQ4/6B1/2N5/PPP2r1P/2KR3R w - - 8 29";
			fens[54] = "rn6/8/1pk5/p1pQ4/6B1/2N5/PPP2r1P/2KR3R b - - 7 28";
			fens[53] = "rn6/8/1pk5/p1p1Q3/6B1/2N5/PPP2r1P/2KR3R w - - 6 28";
			fens[52] = "rn6/2k5/1p6/p1p1Q3/6B1/2N5/PPP2r1P/2KR3R b - - 5 27";
			fens[51] = "rn6/2k5/1p6/p1p5/4Q1B1/2N5/PPP2r1P/2KR3R w - - 4 27";
			fens[50] = "rn6/8/1pk5/p1p5/4Q1B1/2N5/PPP2r1P/2KR3R b - - 3 26";
			fens[49] = "rn6/7Q/1pk5/p1p5/6B1/2N5/PPP2r1P/2KR3R w - - 2 26";
			fens[48] = "rn6/2k4Q/1p6/p1p5/6B1/2N5/PPP2r1P/2KR3R b - - 1 25";
			fens[47] = "rn6/2kB3Q/1p6/p1p5/8/2N5/PPP2r1P/2KR3R w - - 0 25";
			fens[46] = "rn6/2kB3Q/1pp5/p7/8/2N5/PPP2r1P/2KR3R b - - 0 24";
			fens[45] = "rn6/2kb3Q/1pp1B3/p7/8/2N5/PPP2r1P/2KR3R w - - 0 24";
			fens[44] = "rnb5/2kN3Q/1pp1B3/p7/8/2N5/PPP2r1P/2KR3R b - - 0 23";
			fens[43] = "rnb5/2kp3Q/1pp1B3/p3N3/8/2N5/PPP2r1P/2KR3R w - - 0 23";
			fens[42] = "rnb5/2kp3Q/1pp1B3/p3N3/8/2N5/PPP2PrP/2KR3R b - - 5 22";
			fens[41] = "rnb5/2kp3Q/1pp1B3/p3N3/8/2N5/PPP2PrP/R3K2R w KQ - 4 22";
			fens[40] = "1nb5/r1kp3Q/1pp1B3/p3N3/8/2N5/PPP2PrP/R3K2R b KQ - 3 21";
			fens[39] = "1nb5/r1kp3Q/1pp1B3/p3N3/8/8/PPP2PrP/RN2K2R w KQ - 2 21";
			fens[38] = "rnb5/2kp3Q/1pp1B3/p3N3/8/8/PPP2PrP/RN2K2R b KQ - 1 20";
			fens[37] = "rnb5/2kp3Q/1pp5/p3N3/2B5/8/PPP2PrP/RN2K2R w KQ a6 0 20";
			fens[36] = "rnb5/p1kp3Q/1pp5/4N3/2B5/8/PPP2PrP/RN2K2R b KQ - 0 19";
			fens[35] = "rnb5/p1kp3Q/1pp5/4p3/2B5/5N2/PPP2PrP/RN2K2R w KQ - 0 19";
			fens[34] = "rnb5/p1kp3Q/1pp1p3/8/2B5/5N2/PPP2PrP/RN2K2R b KQ - 0 18";
			fens[33] = "rnb5/p1kp3p/1pp1p3/8/2B4Q/5N2/PPP2PrP/RN2K2R w KQ - 2 18";
			fens[32] = "rnbk4/p2p3p/1pp1p3/8/2B4Q/5N2/PPP2PrP/RN2K2R b KQ - 1 17";
			fens[31] = "rnbk4/p2p3p/1pp1p3/8/2B1Q3/5N2/PPP2PrP/RN2K2R w KQ - 0 17";
			fens[30] = "rnbk2r1/p2p3p/1pp1p3/8/2B1Q3/5N2/PPP2PPP/RN2K2R b KQ - 1 16";
			fens[29] = "rnbk2r1/p2p3p/1pp1p3/1B6/4Q3/5N2/PPP2PPP/RN2K2R w KQ - 0 16";
			fens[28] = "rnbk2r1/p1pp3p/1p2p3/1B6/4Q3/5N2/PPP2PPP/RN2K2R b KQ - 1 15";
			fens[27] = "rnbk2r1/p1pp3p/1p2p3/1B2Q3/8/5N2/PPP2PPP/RN2K2R w KQ - 0 15";
			fens[26] = "rnbBk1r1/p1pp3p/1p2p3/1B2Q3/8/5N2/PPP2PPP/RN2K2R b KQ - 0 14";
			fens[25] = "rnbqk1r1/p1pp3p/1p2pB2/1B2Q3/8/5N2/PPP2PPP/RN2K2R w KQ - 1 14";
			fens[24] = "rnbq2r1/p1ppk2p/1p2pB2/1B2Q3/8/5N2/PPP2PPP/RN2K2R b KQ - 0 13";
			fens[23] = "rnbq2r1/p1ppk2p/1p2pn2/1B2Q1B1/8/5N2/PPP2PPP/RN2K2R w KQ - 3 13";
			fens[22] = "rnbq3r/p1ppk2p/1p2pn2/1B2Q1B1/8/5N2/PPP2PPP/RN2K2R b KQ - 2 12";
			fens[21] = "rnbq3r/p1ppk2p/1p2pn2/1B2Q3/8/5N2/PPPB1PPP/RN2K2R w KQ - 1 12";
			fens[20] = "rnbq2nr/p1ppk2p/1p2p3/1B2Q3/8/5N2/PPPB1PPP/RN2K2R b KQ - 0 11";
			fens[19] = "rnbq2nr/p1ppk2p/1p2p3/1B2p2Q/8/5N2/PPPB1PPP/RN2K2R w KQ - 0 11";
			fens[18] = "rnbq2nr/p1ppk2p/1p2pp2/1B2P2Q/8/5N2/PPPB1PPP/RN2K2R b KQ - 0 10";
			fens[17] = "rnbq2nr/p1ppk2p/1p2pp2/1B5Q/4P3/5N2/PPPB1PPP/RN2K2R w KQ - 4 10";
			fens[16] = "r1bq2nr/p1ppk2p/1pn1pp2/1B5Q/4P3/5N2/PPPB1PPP/RN2K2R b KQ - 3 9";
			fens[15] = "r1bq2nr/p1ppk2p/1pn1pp2/7Q/4P3/5N2/PPPB1PPP/RN2KB1R w KQ - 2 9";
			fens[14] = "r1bqk1nr/p1pp3p/1pn1pp2/7Q/4P3/5N2/PPPB1PPP/RN2KB1R b KQkq - 1 8";
			fens[13] = "r1bqk1nr/p1pp3p/1pn1pp2/3Q4/4P3/5N2/PPPB1PPP/RN2KB1R w KQkq - 0 8";
			fens[12] = "r1bqk1nr/p1ppp2p/1pn2p2/3Q4/4P3/5N2/PPPB1PPP/RN2KB1R b KQkq - 2 7";
			fens[11] = "r1bqk1nr/p1ppp2p/1pn2p2/3Q4/4P3/8/PPPB1PPP/RN2KBNR w KQkq - 1 7";
			fens[10] = "rnbqk1nr/p1ppp2p/1p3p2/3Q4/4P3/8/PPPB1PPP/RN2KBNR b KQkq - 0 6";
			fens[9] = "rnbqk1nr/p1ppp2p/1p3p2/3Q4/4P3/8/PPPb1PPP/RNB1KBNR w KQkq - 0 6";
			fens[8] = "rnbqk1nr/p1ppp2p/1p3p1b/3Q4/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 1 5";
			fens[7] = "rnbqk1nr/p1ppp2p/1p3p1b/4Q3/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 0 5";
			fens[6] = "rnbqk1nr/p1pppp1p/1p5b/4Q3/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 2 4";
			fens[5] = "rnbqk1nr/p1pppp1p/1p5b/6Q1/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 1 4";
			fens[4] = "rnbqkbnr/p1pppp1p/1p6/6Q1/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/p1pppp1p/1p6/6pQ/4P3/8/PPPP1PPP/RNB1KBNR w KQkq g6 0 3";
			fens[2] = "rnbqkbnr/p1pppppp/1p6/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/p1pppppp/1p6/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test21", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test21: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test22() return boolean is
			@noparse
			LOG::LogInfo(message: "test22: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b2b4 d7d5 c1b2 e7e5 b2e5 c8e6 e5c7 d8c7 c2c3 f8d6 d1a4 b8d7 a4d7 c7d7 e2e3 f7f5 f1d3 g8f6 d3f5 e6f5 f2f3 e8g8 g2g4 f5g6 h2h3 f8e8 b4b5 b7b6 g1e2 d6g3 e2g3 d5d4 c3d4 e8e3 d2e3 d7d4 e3d4 g6b1 a1b1 a8c8 g4g5 f6d5 g3e4 d5c3 e4c3 c8c3 b1b2 c3f3 e1d2 f3f2 d2c3 f2f3 c3c2 f3f4 b2b4 h7h6 g5h6 g7h6 h1f1 f4f1 a2a4 f1h1 a4a5 b6a5 c2b2 h1h3 b2b1 h3h4 b4a4 h4h1 b1c2 h1h2 c2d3 h2h3 d3c4 h3e3 a4a5 e3e7 a5a7 e7a7 c4d5 a7a5 d5e5 a5b5 e5d6 b5b4 d6e7 b4d4 e7e6 d4e4 e6d5 e4f4 d5d6 f4f5 d6e6 f5g5 e6e7 g5g6 e7e8 g6b6 e8d7 g8f7 d7c8 f7e6 c8c7 b6a6 c7b8 e6d5 b8b7 a6e6 b7c8 e6e7 c8b8 d5d6 b8a8 d6c6 a8b8 e7f7 b8c8 f7f8";
			fens[119] = "2K2r2/8/2k4p/8/8/8/8/8 w - - 32 61";
			fens[118] = "2K5/5r2/2k4p/8/8/8/8/8 b - - 31 60";
			fens[117] = "1K6/5r2/2k4p/8/8/8/8/8 w - - 30 60";
			fens[116] = "1K6/4r3/2k4p/8/8/8/8/8 b - - 29 59";
			fens[115] = "K7/4r3/2k4p/8/8/8/8/8 w - - 28 59";
			fens[114] = "K7/4r3/3k3p/8/8/8/8/8 b - - 27 58";
			fens[113] = "1K6/4r3/3k3p/8/8/8/8/8 w - - 26 58";
			fens[112] = "1K6/4r3/7p/3k4/8/8/8/8 b - - 25 57";
			fens[111] = "2K5/4r3/7p/3k4/8/8/8/8 w - - 24 57";
			fens[110] = "2K5/8/4r2p/3k4/8/8/8/8 b - - 23 56";
			fens[109] = "8/1K6/4r2p/3k4/8/8/8/8 w - - 22 56";
			fens[108] = "8/1K6/r6p/3k4/8/8/8/8 b - - 21 55";
			fens[107] = "1K6/8/r6p/3k4/8/8/8/8 w - - 20 55";
			fens[106] = "1K6/8/r3k2p/8/8/8/8/8 b - - 19 54";
			fens[105] = "8/2K5/r3k2p/8/8/8/8/8 w - - 18 54";
			fens[104] = "8/2K5/1r2k2p/8/8/8/8/8 b - - 17 53";
			fens[103] = "2K5/8/1r2k2p/8/8/8/8/8 w - - 16 53";
			fens[102] = "2K5/5k2/1r5p/8/8/8/8/8 b - - 15 52";
			fens[101] = "8/3K1k2/1r5p/8/8/8/8/8 w - - 14 52";
			fens[100] = "6k1/3K4/1r5p/8/8/8/8/8 b - - 13 51";
			fens[99] = "4K1k1/8/1r5p/8/8/8/8/8 w - - 12 51";
			fens[98] = "4K1k1/8/6rp/8/8/8/8/8 b - - 11 50";
			fens[97] = "6k1/4K3/6rp/8/8/8/8/8 w - - 10 50";
			fens[96] = "6k1/4K3/7p/6r1/8/8/8/8 b - - 9 49";
			fens[95] = "6k1/8/4K2p/6r1/8/8/8/8 w - - 8 49";
			fens[94] = "6k1/8/4K2p/5r2/8/8/8/8 b - - 7 48";
			fens[93] = "6k1/8/3K3p/5r2/8/8/8/8 w - - 6 48";
			fens[92] = "6k1/8/3K3p/8/5r2/8/8/8 b - - 5 47";
			fens[91] = "6k1/8/7p/3K4/5r2/8/8/8 w - - 4 47";
			fens[90] = "6k1/8/7p/3K4/4r3/8/8/8 b - - 3 46";
			fens[89] = "6k1/8/4K2p/8/4r3/8/8/8 w - - 2 46";
			fens[88] = "6k1/8/4K2p/8/3r4/8/8/8 b - - 1 45";
			fens[87] = "6k1/4K3/7p/8/3r4/8/8/8 w - - 0 45";
			fens[86] = "6k1/4K3/7p/8/1r1P4/8/8/8 b - - 3 44";
			fens[85] = "6k1/8/3K3p/8/1r1P4/8/8/8 w - - 2 44";
			fens[84] = "6k1/8/3K3p/1r6/3P4/8/8/8 b - - 1 43";
			fens[83] = "6k1/8/7p/1r2K3/3P4/8/8/8 w - - 0 43";
			fens[82] = "6k1/8/7p/rP2K3/3P4/8/8/8 b - - 3 42";
			fens[81] = "6k1/8/7p/rP1K4/3P4/8/8/8 w - - 2 42";
			fens[80] = "6k1/r7/7p/1P1K4/3P4/8/8/8 b - - 1 41";
			fens[79] = "6k1/r7/7p/1P6/2KP4/8/8/8 w - - 0 41";
			fens[78] = "6k1/R3r3/7p/1P6/2KP4/8/8/8 b - - 0 40";
			fens[77] = "6k1/p3r3/7p/RP6/2KP4/8/8/8 w - - 1 40";
			fens[76] = "6k1/p7/7p/RP6/2KP4/4r3/8/8 b - - 0 39";
			fens[75] = "6k1/p7/7p/pP6/R1KP4/4r3/8/8 w - - 10 39";
			fens[74] = "6k1/p7/7p/pP6/R1KP4/7r/8/8 b - - 9 38";
			fens[73] = "6k1/p7/7p/pP6/R2P4/3K3r/8/8 w - - 8 38";
			fens[72] = "6k1/p7/7p/pP6/R2P4/3K4/7r/8 b - - 7 37";
			fens[71] = "6k1/p7/7p/pP6/R2P4/8/2K4r/8 w - - 6 37";
			fens[70] = "6k1/p7/7p/pP6/R2P4/8/2K5/7r b - - 5 36";
			fens[69] = "6k1/p7/7p/pP6/R2P4/8/8/1K5r w - - 4 36";
			fens[68] = "6k1/p7/7p/pP6/R2P3r/8/8/1K6 b - - 3 35";
			fens[67] = "6k1/p7/7p/pP6/1R1P3r/8/8/1K6 w - - 2 35";
			fens[66] = "6k1/p7/7p/pP6/1R1P4/7r/8/1K6 b - - 1 34";
			fens[65] = "6k1/p7/7p/pP6/1R1P4/7r/1K6/8 w - - 0 34";
			fens[64] = "6k1/p7/7p/pP6/1R1P4/7P/1K6/7r b - - 1 33";
			fens[63] = "6k1/p7/7p/pP6/1R1P4/7P/2K5/7r w - - 0 33";
			fens[62] = "6k1/p7/1p5p/PP6/1R1P4/7P/2K5/7r b - - 0 32";
			fens[61] = "6k1/p7/1p5p/1P6/PR1P4/7P/2K5/7r w - - 1 32";
			fens[60] = "6k1/p7/1p5p/1P6/PR1P4/7P/2K5/5r2 b - a3 0 31";
			fens[59] = "6k1/p7/1p5p/1P6/1R1P4/7P/P1K5/5r2 w - - 0 31";
			fens[58] = "6k1/p7/1p5p/1P6/1R1P1r2/7P/P1K5/5R2 b - - 1 30";
			fens[57] = "6k1/p7/1p5p/1P6/1R1P1r2/7P/P1K5/7R w - - 0 30";
			fens[56] = "6k1/p5p1/1p5P/1P6/1R1P1r2/7P/P1K5/7R b - - 0 29";
			fens[55] = "6k1/p5p1/1p5p/1P4P1/1R1P1r2/7P/P1K5/7R w - - 0 29";
			fens[54] = "6k1/p5pp/1p6/1P4P1/1R1P1r2/7P/P1K5/7R b - - 7 28";
			fens[53] = "6k1/p5pp/1p6/1P4P1/3P1r2/7P/PRK5/7R w - - 6 28";
			fens[52] = "6k1/p5pp/1p6/1P4P1/3P4/5r1P/PRK5/7R b - - 5 27";
			fens[51] = "6k1/p5pp/1p6/1P4P1/3P4/2K2r1P/PR6/7R w - - 4 27";
			fens[50] = "6k1/p5pp/1p6/1P4P1/3P4/2K4P/PR3r2/7R b - - 3 26";
			fens[49] = "6k1/p5pp/1p6/1P4P1/3P4/7P/PR1K1r2/7R w - - 2 26";
			fens[48] = "6k1/p5pp/1p6/1P4P1/3P4/5r1P/PR1K4/7R b - - 1 25";
			fens[47] = "6k1/p5pp/1p6/1P4P1/3P4/5r1P/PR6/4K2R w K - 0 25";
			fens[46] = "6k1/p5pp/1p6/1P4P1/3P4/2r2P1P/PR6/4K2R b K - 1 24";
			fens[45] = "6k1/p5pp/1p6/1P4P1/3P4/2r2P1P/P7/1R2K2R w K - 0 24";
			fens[44] = "2r3k1/p5pp/1p6/1P4P1/3P4/2N2P1P/P7/1R2K2R b K - 0 23";
			fens[43] = "2r3k1/p5pp/1p6/1P4P1/3PN3/2n2P1P/P7/1R2K2R w K - 3 23";
			fens[42] = "2r3k1/p5pp/1p6/1P1n2P1/3PN3/5P1P/P7/1R2K2R b K - 2 22";
			fens[41] = "2r3k1/p5pp/1p6/1P1n2P1/3P4/5PNP/P7/1R2K2R w K - 1 22";
			fens[40] = "2r3k1/p5pp/1p3n2/1P4P1/3P4/5PNP/P7/1R2K2R b K - 0 21";
			fens[39] = "2r3k1/p5pp/1p3n2/1P6/3P2P1/5PNP/P7/1R2K2R w K - 1 21";
			fens[38] = "r5k1/p5pp/1p3n2/1P6/3P2P1/5PNP/P7/1R2K2R b K - 0 20";
			fens[37] = "r5k1/p5pp/1p3n2/1P6/3P2P1/5PNP/P7/Rb2K2R w KQ - 0 20";
			fens[36] = "r5k1/p5pp/1p3nb1/1P6/3P2P1/5PNP/P7/RN2K2R b KQ - 0 19";
			fens[35] = "r5k1/p5pp/1p3nb1/1P6/3q2P1/4PPNP/P7/RN2K2R w KQ - 0 19";
			fens[34] = "r5k1/p2q2pp/1p3nb1/1P6/3P2P1/4PPNP/P7/RN2K2R b KQ - 0 18";
			fens[33] = "r5k1/p2q2pp/1p3nb1/1P6/3P2P1/4rPNP/P2P4/RN2K2R w KQ - 0 18";
			fens[32] = "r3r1k1/p2q2pp/1p3nb1/1P6/3P2P1/4PPNP/P2P4/RN2K2R b KQ - 0 17";
			fens[31] = "r3r1k1/p2q2pp/1p3nb1/1P6/3p2P1/2P1PPNP/P2P4/RN2K2R w KQ - 0 17";
			fens[30] = "r3r1k1/p2q2pp/1p3nb1/1P1p4/6P1/2P1PPNP/P2P4/RN2K2R b KQ - 0 16";
			fens[29] = "r3r1k1/p2q2pp/1p3nb1/1P1p4/6P1/2P1PPbP/P2PN3/RN2K2R w KQ - 2 16";
			fens[28] = "r3r1k1/p2q2pp/1p1b1nb1/1P1p4/6P1/2P1PP1P/P2PN3/RN2K2R b KQ - 1 15";
			fens[27] = "r3r1k1/p2q2pp/1p1b1nb1/1P1p4/6P1/2P1PP1P/P2P4/RN2K1NR w KQ - 0 15";
			fens[26] = "r3r1k1/pp1q2pp/3b1nb1/1P1p4/6P1/2P1PP1P/P2P4/RN2K1NR b KQ - 0 14";
			fens[25] = "r3r1k1/pp1q2pp/3b1nb1/3p4/1P4P1/2P1PP1P/P2P4/RN2K1NR w KQ - 1 14";
			fens[24] = "r4rk1/pp1q2pp/3b1nb1/3p4/1P4P1/2P1PP1P/P2P4/RN2K1NR b KQ - 0 13";
			fens[23] = "r4rk1/pp1q2pp/3b1nb1/3p4/1P4P1/2P1PP2/P2P3P/RN2K1NR w KQ - 1 13";
			fens[22] = "r4rk1/pp1q2pp/3b1n2/3p1b2/1P4P1/2P1PP2/P2P3P/RN2K1NR b KQ g3 0 12";
			fens[21] = "r4rk1/pp1q2pp/3b1n2/3p1b2/1P6/2P1PP2/P2P2PP/RN2K1NR w KQ - 1 12";
			fens[20] = "r3k2r/pp1q2pp/3b1n2/3p1b2/1P6/2P1PP2/P2P2PP/RN2K1NR b KQkq - 0 11";
			fens[19] = "r3k2r/pp1q2pp/3b1n2/3p1b2/1P6/2P1P3/P2P1PPP/RN2K1NR w KQkq - 0 11";
			fens[18] = "r3k2r/pp1q2pp/3bbn2/3p1B2/1P6/2P1P3/P2P1PPP/RN2K1NR b KQkq - 0 10";
			fens[17] = "r3k2r/pp1q2pp/3bbn2/3p1p2/1P6/2PBP3/P2P1PPP/RN2K1NR w KQkq - 2 10";
			fens[16] = "r3k1nr/pp1q2pp/3bb3/3p1p2/1P6/2PBP3/P2P1PPP/RN2K1NR b KQkq - 1 9";
			fens[15] = "r3k1nr/pp1q2pp/3bb3/3p1p2/1P6/2P1P3/P2P1PPP/RN2KBNR w KQkq f6 0 9";
			fens[14] = "r3k1nr/pp1q1ppp/3bb3/3p4/1P6/2P1P3/P2P1PPP/RN2KBNR b KQkq - 0 8";
			fens[13] = "r3k1nr/pp1q1ppp/3bb3/3p4/1P6/2P5/P2PPPPP/RN2KBNR w KQkq - 0 8";
			fens[12] = "r3k1nr/ppqQ1ppp/3bb3/3p4/1P6/2P5/P2PPPPP/RN2KBNR b KQkq - 0 7";
			fens[11] = "r3k1nr/ppqn1ppp/3bb3/3p4/QP6/2P5/P2PPPPP/RN2KBNR w KQkq - 3 7";
			fens[10] = "rn2k1nr/ppq2ppp/3bb3/3p4/QP6/2P5/P2PPPPP/RN2KBNR b KQkq - 2 6";
			fens[9] = "rn2k1nr/ppq2ppp/3bb3/3p4/1P6/2P5/P2PPPPP/RN1QKBNR w KQkq - 1 6";
			fens[8] = "rn2kbnr/ppq2ppp/4b3/3p4/1P6/2P5/P2PPPPP/RN1QKBNR b KQkq - 0 5";
			fens[7] = "rn2kbnr/ppq2ppp/4b3/3p4/1P6/8/P1PPPPPP/RN1QKBNR w KQkq - 0 5";
			fens[6] = "rn1qkbnr/ppB2ppp/4b3/3p4/1P6/8/P1PPPPPP/RN1QKBNR b KQkq - 0 4";
			fens[5] = "rn1qkbnr/ppp2ppp/4b3/3pB3/1P6/8/P1PPPPPP/RN1QKBNR w KQkq - 1 4";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3pB3/1P6/8/P1PPPPPP/RN1QKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/1P6/8/PBPPPPPP/RN1QKBNR w KQkq e6 0 3";
			fens[2] = "rnbqkbnr/ppp1pppp/8/3p4/1P6/8/PBPPPPPP/RN1QKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/ppp1pppp/8/3p4/1P6/8/P1PPPPPP/RNBQKBNR w KQkq d6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/1P6/8/P1PPPPPP/RNBQKBNR b KQkq b3 0 1";
			
			result = ::test_do_move(name: "test22", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test22: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test23() return boolean is
			@noparse
			LOG::LogInfo(message: "test23: start");
			t0 = TIM::current_clock();
			
			initial_fen = "r4r1k/1pqn1ppp/p1p2n2/2b1p3/4P3/3P2Q1/PPPB2PP/RN2NR1K w - - 2 15";
			move_text = "d3d4 e5d4 g3c7 f6e4 c7d7 f8d8 d7d8 a8d8 f1f7 e4g5 d2g5 h7h6 g5d8 g7g5 d8g5 h6g5 f7b7 c5b4 b7b4 c6c5 b4d4 c5d4 e1f3 g5g4 f3d4 g4g3 h2g3 a6a5 d4f5 a5a4 b1c3 a4a3 b2a3 h8g8 c3e4 g8h8 e4f6";
			fens[36] = "7k/8/5N2/5N2/8/P5P1/P1P3P1/R6K b - - 4 33";
			fens[35] = "7k/8/8/5N2/4N3/P5P1/P1P3P1/R6K w - - 3 33";
			fens[34] = "6k1/8/8/5N2/4N3/P5P1/P1P3P1/R6K b - - 2 32";
			fens[33] = "6k1/8/8/5N2/8/P1N3P1/P1P3P1/R6K w - - 1 32";
			fens[32] = "7k/8/8/5N2/8/P1N3P1/P1P3P1/R6K b - - 0 31";
			fens[31] = "7k/8/8/5N2/8/p1N3P1/PPP3P1/R6K w - - 0 31";
			fens[30] = "7k/8/8/5N2/p7/2N3P1/PPP3P1/R6K b - - 1 30";
			fens[29] = "7k/8/8/5N2/p7/6P1/PPP3P1/RN5K w - - 0 30";
			fens[28] = "7k/8/8/p4N2/8/6P1/PPP3P1/RN5K b - - 1 29";
			fens[27] = "7k/8/8/p7/3N4/6P1/PPP3P1/RN5K w - - 0 29";
			fens[26] = "7k/8/p7/8/3N4/6P1/PPP3P1/RN5K b - - 0 28";
			fens[25] = "7k/8/p7/8/3N4/6p1/PPP3PP/RN5K w - - 0 28";
			fens[24] = "7k/8/p7/8/3N2p1/8/PPP3PP/RN5K b - - 0 27";
			fens[23] = "7k/8/p7/8/3p2p1/5N2/PPP3PP/RN5K w - - 0 27";
			fens[22] = "7k/8/p7/6p1/3p4/5N2/PPP3PP/RN5K b - - 1 26";
			fens[21] = "7k/8/p7/6p1/3p4/8/PPP3PP/RN2N2K w - - 0 26";
			fens[20] = "7k/8/p7/2p3p1/3R4/8/PPP3PP/RN2N2K b - - 0 25";
			fens[19] = "7k/8/p7/2p3p1/1R1p4/8/PPP3PP/RN2N2K w - - 0 25";
			fens[18] = "7k/8/p1p5/6p1/1R1p4/8/PPP3PP/RN2N2K b - - 0 24";
			fens[17] = "7k/1R6/p1p5/6p1/1b1p4/8/PPP3PP/RN2N2K w - - 1 24";
			fens[16] = "7k/1R6/p1p5/2b3p1/3p4/8/PPP3PP/RN2N2K b - - 0 23";
			fens[15] = "7k/1p3R2/p1p5/2b3p1/3p4/8/PPP3PP/RN2N2K w - - 0 23";
			fens[14] = "7k/1p3R2/p1p4p/2b3B1/3p4/8/PPP3PP/RN2N2K b - - 0 22";
			fens[13] = "3B3k/1p3R2/p1p4p/2b3p1/3p4/8/PPP3PP/RN2N2K w - g6 0 22";
			fens[12] = "3B3k/1p3Rp1/p1p4p/2b5/3p4/8/PPP3PP/RN2N2K b - - 0 21";
			fens[11] = "3r3k/1p3Rp1/p1p4p/2b3B1/3p4/8/PPP3PP/RN2N2K w - - 0 21";
			fens[10] = "3r3k/1p3Rpp/p1p5/2b3B1/3p4/8/PPP3PP/RN2N2K b - - 0 20";
			fens[9] = "3r3k/1p3Rpp/p1p5/2b3n1/3p4/8/PPPB2PP/RN2N2K w - - 1 20";
			fens[8] = "3r3k/1p3Rpp/p1p5/2b5/3pn3/8/PPPB2PP/RN2N2K b - - 0 19";
			fens[7] = "3r3k/1p3ppp/p1p5/2b5/3pn3/8/PPPB2PP/RN2NR1K w - - 0 19";
			fens[6] = "r2Q3k/1p3ppp/p1p5/2b5/3pn3/8/PPPB2PP/RN2NR1K b - - 0 18";
			fens[5] = "r2r3k/1p1Q1ppp/p1p5/2b5/3pn3/8/PPPB2PP/RN2NR1K w - - 1 18";
			fens[4] = "r4r1k/1p1Q1ppp/p1p5/2b5/3pn3/8/PPPB2PP/RN2NR1K b - - 0 17";
			fens[3] = "r4r1k/1pQn1ppp/p1p5/2b5/3pn3/8/PPPB2PP/RN2NR1K w - - 0 17";
			fens[2] = "r4r1k/1pQn1ppp/p1p2n2/2b5/3pP3/8/PPPB2PP/RN2NR1K b - - 0 16";
			fens[1] = "r4r1k/1pqn1ppp/p1p2n2/2b5/3pP3/6Q1/PPPB2PP/RN2NR1K w - - 0 16";
			fens[0] = "r4r1k/1pqn1ppp/p1p2n2/2b1p3/3PP3/6Q1/PPPB2PP/RN2NR1K b - - 0 15";
			
			result = ::test_do_move(name: "test23", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test23: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test24() return boolean is
			@noparse
			LOG::LogInfo(message: "test24: start");
			t0 = TIM::current_clock();
			
			initial_fen = "r4r1k/1pqn1ppp/p1p2n2/2b1p3/4P3/3P2Q1/PPPB2PP/RN2NR1K w - - 2 15";
			move_text = "d2f4 e5f4 g3f4 c7f4 f1f4 f6e4 d3e4 c5d6 f4h4 d6h2 h1h2 a8e8 b1d2 e8e4 d2e4 f8e8 e1f3 e8e4 h4e4 b7b6 e4e8 d7f8 e8f8";
			fens[22] = "5R1k/5ppp/ppp5/8/8/5N2/PPP3PK/R7 b - - 0 26";
			fens[21] = "4Rn1k/5ppp/ppp5/8/8/5N2/PPP3PK/R7 w - - 2 26";
			fens[20] = "4R2k/3n1ppp/ppp5/8/8/5N2/PPP3PK/R7 b - - 1 25";
			fens[19] = "7k/3n1ppp/ppp5/8/4R3/5N2/PPP3PK/R7 w - - 0 25";
			fens[18] = "7k/1p1n1ppp/p1p5/8/4R3/5N2/PPP3PK/R7 b - - 0 24";
			fens[17] = "7k/1p1n1ppp/p1p5/8/4r2R/5N2/PPP3PK/R7 w - - 0 24";
			fens[16] = "4r2k/1p1n1ppp/p1p5/8/4N2R/5N2/PPP3PK/R7 b - - 2 23";
			fens[15] = "4r2k/1p1n1ppp/p1p5/8/4N2R/8/PPP3PK/R3N3 w - - 1 23";
			fens[14] = "5r1k/1p1n1ppp/p1p5/8/4N2R/8/PPP3PK/R3N3 b - - 0 22";
			fens[13] = "5r1k/1p1n1ppp/p1p5/8/4r2R/8/PPPN2PK/R3N3 w - - 0 22";
			fens[12] = "4rr1k/1p1n1ppp/p1p5/8/4P2R/8/PPPN2PK/R3N3 b - - 2 21";
			fens[11] = "4rr1k/1p1n1ppp/p1p5/8/4P2R/8/PPP3PK/RN2N3 w - - 1 21";
			fens[10] = "r4r1k/1p1n1ppp/p1p5/8/4P2R/8/PPP3PK/RN2N3 b - - 0 20";
			fens[9] = "r4r1k/1p1n1ppp/p1p5/8/4P2R/8/PPP3Pb/RN2N2K w - - 0 20";
			fens[8] = "r4r1k/1p1n1ppp/p1pb4/8/4P2R/8/PPP3PP/RN2N2K b - - 2 19";
			fens[7] = "r4r1k/1p1n1ppp/p1pb4/8/4PR2/8/PPP3PP/RN2N2K w - - 1 19";
			fens[6] = "r4r1k/1p1n1ppp/p1p5/2b5/4PR2/8/PPP3PP/RN2N2K b - - 0 18";
			fens[5] = "r4r1k/1p1n1ppp/p1p5/2b5/4nR2/3P4/PPP3PP/RN2N2K w - - 0 18";
			fens[4] = "r4r1k/1p1n1ppp/p1p2n2/2b5/4PR2/3P4/PPP3PP/RN2N2K b - - 0 17";
			fens[3] = "r4r1k/1p1n1ppp/p1p2n2/2b5/4Pq2/3P4/PPP3PP/RN2NR1K w - - 0 17";
			fens[2] = "r4r1k/1pqn1ppp/p1p2n2/2b5/4PQ2/3P4/PPP3PP/RN2NR1K b - - 0 16";
			fens[1] = "r4r1k/1pqn1ppp/p1p2n2/2b5/4Pp2/3P2Q1/PPP3PP/RN2NR1K w - - 0 16";
			fens[0] = "r4r1k/1pqn1ppp/p1p2n2/2b1p3/4PB2/3P2Q1/PPP3PP/RN2NR1K b - - 3 15";
			
			result = ::test_do_move(name: "test24", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test24: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test25() return boolean is
			@noparse
			LOG::LogInfo(message: "test25: start");
			t0 = TIM::current_clock();
			
			initial_fen = "r4r1k/1pqn1ppp/p1p2n2/2b1p3/4P3/3P2Q1/PPPB2PP/RN2NR1K w - - 2 15";
			move_text = "d2g5 c5e7 g5f6 e7f6 b1d2 h7h6 g3f3 f6g5 d2b1 d7f6 f1g1 c7d7 b2b3 d7g4 f3g4 f6g4 h2h3 g4f2 h1h2 g5f4 g2g3 f4e3 h2g2 f2d1 g1f1 f7f5 e4f5 f8f5 f1f5 a8f8 f5f8 h8h7 f8f7";
			fens[32] = "8/1p3Rpk/p1p4p/4p3/8/1P1Pb1PP/P1P3K1/RN1nN3 b - - 2 31";
			fens[31] = "5R2/1p4pk/p1p4p/4p3/8/1P1Pb1PP/P1P3K1/RN1nN3 w - - 1 31";
			fens[30] = "5R1k/1p4p1/p1p4p/4p3/8/1P1Pb1PP/P1P3K1/RN1nN3 b - - 0 30";
			fens[29] = "5r1k/1p4p1/p1p4p/4pR2/8/1P1Pb1PP/P1P3K1/RN1nN3 w - - 1 30";
			fens[28] = "r6k/1p4p1/p1p4p/4pR2/8/1P1Pb1PP/P1P3K1/RN1nN3 b - - 0 29";
			fens[27] = "r6k/1p4p1/p1p4p/4pr2/8/1P1Pb1PP/P1P3K1/RN1nNR2 w - - 0 29";
			fens[26] = "r4r1k/1p4p1/p1p4p/4pP2/8/1P1Pb1PP/P1P3K1/RN1nNR2 b - - 0 28";
			fens[25] = "r4r1k/1p4p1/p1p4p/4pp2/4P3/1P1Pb1PP/P1P3K1/RN1nNR2 w - f6 0 28";
			fens[24] = "r4r1k/1p3pp1/p1p4p/4p3/4P3/1P1Pb1PP/P1P3K1/RN1nNR2 b - - 4 27";
			fens[23] = "r4r1k/1p3pp1/p1p4p/4p3/4P3/1P1Pb1PP/P1P3K1/RN1nN1R1 w - - 3 27";
			fens[22] = "r4r1k/1p3pp1/p1p4p/4p3/4P3/1P1Pb1PP/P1P2nK1/RN2N1R1 b - - 2 26";
			fens[21] = "r4r1k/1p3pp1/p1p4p/4p3/4P3/1P1Pb1PP/P1P2n1K/RN2N1R1 w - - 1 26";
			fens[20] = "r4r1k/1p3pp1/p1p4p/4p3/4Pb2/1P1P2PP/P1P2n1K/RN2N1R1 b - - 0 25";
			fens[19] = "r4r1k/1p3pp1/p1p4p/4p3/4Pb2/1P1P3P/P1P2nPK/RN2N1R1 w - - 3 25";
			fens[18] = "r4r1k/1p3pp1/p1p4p/4p1b1/4P3/1P1P3P/P1P2nPK/RN2N1R1 b - - 2 24";
			fens[17] = "r4r1k/1p3pp1/p1p4p/4p1b1/4P3/1P1P3P/P1P2nP1/RN2N1RK w - - 1 24";
			fens[16] = "r4r1k/1p3pp1/p1p4p/4p1b1/4P1n1/1P1P3P/P1P3P1/RN2N1RK b - - 0 23";
			fens[15] = "r4r1k/1p3pp1/p1p4p/4p1b1/4P1n1/1P1P4/P1P3PP/RN2N1RK w - - 0 23";
			fens[14] = "r4r1k/1p3pp1/p1p2n1p/4p1b1/4P1Q1/1P1P4/P1P3PP/RN2N1RK b - - 0 22";
			fens[13] = "r4r1k/1p3pp1/p1p2n1p/4p1b1/4P1q1/1P1P1Q2/P1P3PP/RN2N1RK w - - 1 22";
			fens[12] = "r4r1k/1p1q1pp1/p1p2n1p/4p1b1/4P3/1P1P1Q2/P1P3PP/RN2N1RK b - - 0 21";
			fens[11] = "r4r1k/1p1q1pp1/p1p2n1p/4p1b1/4P3/3P1Q2/PPP3PP/RN2N1RK w - - 6 21";
			fens[10] = "r4r1k/1pq2pp1/p1p2n1p/4p1b1/4P3/3P1Q2/PPP3PP/RN2N1RK b - - 5 20";
			fens[9] = "r4r1k/1pq2pp1/p1p2n1p/4p1b1/4P3/3P1Q2/PPP3PP/RN2NR1K w - - 4 20";
			fens[8] = "r4r1k/1pqn1pp1/p1p4p/4p1b1/4P3/3P1Q2/PPP3PP/RN2NR1K b - - 3 19";
			fens[7] = "r4r1k/1pqn1pp1/p1p4p/4p1b1/4P3/3P1Q2/PPPN2PP/R3NR1K w - - 2 19";
			fens[6] = "r4r1k/1pqn1pp1/p1p2b1p/4p3/4P3/3P1Q2/PPPN2PP/R3NR1K b - - 1 18";
			fens[5] = "r4r1k/1pqn1pp1/p1p2b1p/4p3/4P3/3P2Q1/PPPN2PP/R3NR1K w - - 0 18";
			fens[4] = "r4r1k/1pqn1ppp/p1p2b2/4p3/4P3/3P2Q1/PPPN2PP/R3NR1K b - - 1 17";
			fens[3] = "r4r1k/1pqn1ppp/p1p2b2/4p3/4P3/3P2Q1/PPP3PP/RN2NR1K w - - 0 17";
			fens[2] = "r4r1k/1pqnbppp/p1p2B2/4p3/4P3/3P2Q1/PPP3PP/RN2NR1K b - - 0 16";
			fens[1] = "r4r1k/1pqnbppp/p1p2n2/4p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K w - - 4 16";
			fens[0] = "r4r1k/1pqn1ppp/p1p2n2/2b1p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K b - - 3 15";
			
			result = ::test_do_move(name: "test25", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test25: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test26() return boolean is
			@noparse
			LOG::LogInfo(message: "test26: start");
			t0 = TIM::current_clock();
			
			initial_fen = "r4r1k/1pqn1ppp/p1p2n2/2b1p3/4P3/3P2Q1/PPPB2PP/RN2NR1K w - - 2 15";
			move_text = "d2g5 f8e8 e1f3 f6e4 d3e4 c7b6 f3e5 e8e5 g3e5 d7e5 f1f5 b6b2 f5e5 b2e5 b1c3 e5c3 a1d1 c3c2 d1d2 c2d2 g5d2 a8e8 g2g4 e8e4 a2a4 e4a4 d2f4 a4f4 g4g5 f4h4 h1g2 h4h2 g2h2 c5e3 h2h3 e3g5 h3g4 g5d2 g4f3 b7b6 f3e2 h7h6 e2d2 f7f5 d2d3 h6h5 d3d4 c6c5 d4d5 h5h4 d5e5 c5c4 e5f5 c4c3 f5e4 c3c2 e4d3 c2c1q d3e2 c1c5 e2f3 c5c4 f3g2 c4c8 g2f3 c8f5 f3e3 f5d7 e3f4 d7e7 f4g4 a6a5 g4f4 e7d8 f4e4 h8g8 e4e5 g7g6 e5f4 d8e8 f4g5 g8f8 g5h4 e8b5 h4g4 b5b2 g4g5 f8e8 g5g6 b2h8 g6f5 e8f7 f5e4 h8f8 e4d4 f8g7 d4d5 g7c3 d5d6 c3e5 d6c6 f7f8 c6b6 e5f6 b6a5 f6g7 a5a6 g7g3 a6a7 g3f3 a7b8 f3e2 b8c7 e2f1 c7b7 f8e7 b7b8 e7d8 b8a8 f1e2 a8a7 e2d1 a7b8 d1a1 b8b7 a1e5 b7a8 e5e3 a8b8 e3c3 b8b7 c3g7 b7b8 g7g5 b8a8 g5h6 a8b8 h6d6 b8b7 d6c6 b7a7 c6a4 a7b8 a4d1 b8b7 d1d5 b7a7 d5h5 a7b8 h5h8 b8a8 h8e5 a8a7 d8e7 a7b7 e7e6 b7a8 e5d6 a8a7 d6b4 a7a8 b4e1 a8b7 e6d6 b7a8 e1b1 a8a7 b1b3 a7a8 d6c6 a8a7 c6d5 a7a8 b3c3 a8a7 c3b3 a7a8 b3b5 a8a7 b5c6 a7b8 c6b5 b8a7 b5f1 a7a8 f1b1 a8a7 b1g1 a7a8 g1g2 a8a7 g2e2 a7a8 e2e6 a8a7 e6b6 a7a8 b6d6 a8a7 d5c4 a7a8 d6c7";
			fens[201] = "K7/2q5/8/8/2k5/8/8/8 w - - 97 116";
			fens[200] = "K7/8/3q4/8/2k5/8/8/8 b - - 96 115";
			fens[199] = "8/K7/3q4/8/2k5/8/8/8 w - - 95 115";
			fens[198] = "8/K7/3q4/3k4/8/8/8/8 b - - 94 114";
			fens[197] = "K7/8/3q4/3k4/8/8/8/8 w - - 93 114";
			fens[196] = "K7/8/1q6/3k4/8/8/8/8 b - - 92 113";
			fens[195] = "8/K7/1q6/3k4/8/8/8/8 w - - 91 113";
			fens[194] = "8/K7/4q3/3k4/8/8/8/8 b - - 90 112";
			fens[193] = "K7/8/4q3/3k4/8/8/8/8 w - - 89 112";
			fens[192] = "K7/8/8/3k4/8/8/4q3/8 b - - 88 111";
			fens[191] = "8/K7/8/3k4/8/8/4q3/8 w - - 87 111";
			fens[190] = "8/K7/8/3k4/8/8/6q1/8 b - - 86 110";
			fens[189] = "K7/8/8/3k4/8/8/6q1/8 w - - 85 110";
			fens[188] = "K7/8/8/3k4/8/8/8/6q1 b - - 84 109";
			fens[187] = "8/K7/8/3k4/8/8/8/6q1 w - - 83 109";
			fens[186] = "8/K7/8/3k4/8/8/8/1q6 b - - 82 108";
			fens[185] = "K7/8/8/3k4/8/8/8/1q6 w - - 81 108";
			fens[184] = "K7/8/8/3k4/8/8/8/5q2 b - - 80 107";
			fens[183] = "8/K7/8/3k4/8/8/8/5q2 w - - 79 107";
			fens[182] = "8/K7/8/1q1k4/8/8/8/8 b - - 78 106";
			fens[181] = "1K6/8/8/1q1k4/8/8/8/8 w - - 77 106";
			fens[180] = "1K6/8/2q5/3k4/8/8/8/8 b - - 76 105";
			fens[179] = "8/K7/2q5/3k4/8/8/8/8 w - - 75 105";
			fens[178] = "8/K7/8/1q1k4/8/8/8/8 b - - 74 104";
			fens[177] = "K7/8/8/1q1k4/8/8/8/8 w - - 73 104";
			fens[176] = "K7/8/8/3k4/8/1q6/8/8 b - - 72 103";
			fens[175] = "8/K7/8/3k4/8/1q6/8/8 w - - 71 103";
			fens[174] = "8/K7/8/3k4/8/2q5/8/8 b - - 70 102";
			fens[173] = "K7/8/8/3k4/8/2q5/8/8 w - - 69 102";
			fens[172] = "K7/8/8/3k4/8/1q6/8/8 b - - 68 101";
			fens[171] = "8/K7/8/3k4/8/1q6/8/8 w - - 67 101";
			fens[170] = "8/K7/2k5/8/8/1q6/8/8 b - - 66 100";
			fens[169] = "K7/8/2k5/8/8/1q6/8/8 w - - 65 100";
			fens[168] = "K7/8/3k4/8/8/1q6/8/8 b - - 64 99";
			fens[167] = "8/K7/3k4/8/8/1q6/8/8 w - - 63 99";
			fens[166] = "8/K7/3k4/8/8/8/8/1q6 b - - 62 98";
			fens[165] = "K7/8/3k4/8/8/8/8/1q6 w - - 61 98";
			fens[164] = "K7/8/3k4/8/8/8/8/4q3 b - - 60 97";
			fens[163] = "8/1K6/3k4/8/8/8/8/4q3 w - - 59 97";
			fens[162] = "8/1K6/4k3/8/8/8/8/4q3 b - - 58 96";
			fens[161] = "K7/8/4k3/8/8/8/8/4q3 w - - 57 96";
			fens[160] = "K7/8/4k3/8/1q6/8/8/8 b - - 56 95";
			fens[159] = "8/K7/4k3/8/1q6/8/8/8 w - - 55 95";
			fens[158] = "8/K7/3qk3/8/8/8/8/8 b - - 54 94";
			fens[157] = "K7/8/3qk3/8/8/8/8/8 w - - 53 94";
			fens[156] = "K7/8/4k3/4q3/8/8/8/8 b - - 52 93";
			fens[155] = "8/1K6/4k3/4q3/8/8/8/8 w - - 51 93";
			fens[154] = "8/1K2k3/8/4q3/8/8/8/8 b - - 50 92";
			fens[153] = "8/K3k3/8/4q3/8/8/8/8 w - - 49 92";
			fens[152] = "3k4/K7/8/4q3/8/8/8/8 b - - 48 91";
			fens[151] = "K2k4/8/8/4q3/8/8/8/8 w - - 47 91";
			fens[150] = "K2k3q/8/8/8/8/8/8/8 b - - 46 90";
			fens[149] = "1K1k3q/8/8/8/8/8/8/8 w - - 45 90";
			fens[148] = "1K1k4/8/8/7q/8/8/8/8 b - - 44 89";
			fens[147] = "3k4/K7/8/7q/8/8/8/8 w - - 43 89";
			fens[146] = "3k4/K7/8/3q4/8/8/8/8 b - - 42 88";
			fens[145] = "3k4/1K6/8/3q4/8/8/8/8 w - - 41 88";
			fens[144] = "3k4/1K6/8/8/8/8/8/3q4 b - - 40 87";
			fens[143] = "1K1k4/8/8/8/8/8/8/3q4 w - - 39 87";
			fens[142] = "1K1k4/8/8/8/q7/8/8/8 b - - 38 86";
			fens[141] = "3k4/K7/8/8/q7/8/8/8 w - - 37 86";
			fens[140] = "3k4/K7/2q5/8/8/8/8/8 b - - 36 85";
			fens[139] = "3k4/1K6/2q5/8/8/8/8/8 w - - 35 85";
			fens[138] = "3k4/1K6/3q4/8/8/8/8/8 b - - 34 84";
			fens[137] = "1K1k4/8/3q4/8/8/8/8/8 w - - 33 84";
			fens[136] = "1K1k4/8/7q/8/8/8/8/8 b - - 32 83";
			fens[135] = "K2k4/8/7q/8/8/8/8/8 w - - 31 83";
			fens[134] = "K2k4/8/8/6q1/8/8/8/8 b - - 30 82";
			fens[133] = "1K1k4/8/8/6q1/8/8/8/8 w - - 29 82";
			fens[132] = "1K1k4/6q1/8/8/8/8/8/8 b - - 28 81";
			fens[131] = "3k4/1K4q1/8/8/8/8/8/8 w - - 27 81";
			fens[130] = "3k4/1K6/8/8/8/2q5/8/8 b - - 26 80";
			fens[129] = "1K1k4/8/8/8/8/2q5/8/8 w - - 25 80";
			fens[128] = "1K1k4/8/8/8/8/4q3/8/8 b - - 24 79";
			fens[127] = "K2k4/8/8/8/8/4q3/8/8 w - - 23 79";
			fens[126] = "K2k4/8/8/4q3/8/8/8/8 b - - 22 78";
			fens[125] = "3k4/1K6/8/4q3/8/8/8/8 w - - 21 78";
			fens[124] = "3k4/1K6/8/8/8/8/8/q7 b - - 20 77";
			fens[123] = "1K1k4/8/8/8/8/8/8/q7 w - - 19 77";
			fens[122] = "1K1k4/8/8/8/8/8/8/3q4 b - - 18 76";
			fens[121] = "3k4/K7/8/8/8/8/8/3q4 w - - 17 76";
			fens[120] = "3k4/K7/8/8/8/8/4q3/8 b - - 16 75";
			fens[119] = "K2k4/8/8/8/8/8/4q3/8 w - - 15 75";
			fens[118] = "K2k4/8/8/8/8/8/8/5q2 b - - 14 74";
			fens[117] = "1K1k4/8/8/8/8/8/8/5q2 w - - 13 74";
			fens[116] = "1K6/4k3/8/8/8/8/8/5q2 b - - 12 73";
			fens[115] = "8/1K2k3/8/8/8/8/8/5q2 w - - 11 73";
			fens[114] = "5k2/1K6/8/8/8/8/8/5q2 b - - 10 72";
			fens[113] = "5k2/2K5/8/8/8/8/8/5q2 w - - 9 72";
			fens[112] = "5k2/2K5/8/8/8/8/4q3/8 b - - 8 71";
			fens[111] = "1K3k2/8/8/8/8/8/4q3/8 w - - 7 71";
			fens[110] = "1K3k2/8/8/8/8/5q2/8/8 b - - 6 70";
			fens[109] = "5k2/K7/8/8/8/5q2/8/8 w - - 5 70";
			fens[108] = "5k2/K7/8/8/8/6q1/8/8 b - - 4 69";
			fens[107] = "5k2/8/K7/8/8/6q1/8/8 w - - 3 69";
			fens[106] = "5k2/6q1/K7/8/8/8/8/8 b - - 2 68";
			fens[105] = "5k2/6q1/8/K7/8/8/8/8 w - - 1 68";
			fens[104] = "5k2/8/5q2/K7/8/8/8/8 b - - 0 67";
			fens[103] = "5k2/8/1K3q2/p7/8/8/8/8 w - - 1 67";
			fens[102] = "5k2/8/1K6/p3q3/8/8/8/8 b - - 0 66";
			fens[101] = "5k2/8/1pK5/p3q3/8/8/8/8 w - - 13 66";
			fens[100] = "8/5k2/1pK5/p3q3/8/8/8/8 b - - 12 65";
			fens[99] = "8/5k2/1p1K4/p3q3/8/8/8/8 w - - 11 65";
			fens[98] = "8/5k2/1p1K4/p7/8/2q5/8/8 b - - 10 64";
			fens[97] = "8/5k2/1p6/p2K4/8/2q5/8/8 w - - 9 64";
			fens[96] = "8/5kq1/1p6/p2K4/8/8/8/8 b - - 8 63";
			fens[95] = "8/5kq1/1p6/p7/3K4/8/8/8 w - - 7 63";
			fens[94] = "5q2/5k2/1p6/p7/3K4/8/8/8 b - - 6 62";
			fens[93] = "5q2/5k2/1p6/p7/4K3/8/8/8 w - - 5 62";
			fens[92] = "7q/5k2/1p6/p7/4K3/8/8/8 b - - 4 61";
			fens[91] = "7q/5k2/1p6/p4K2/8/8/8/8 w - - 3 61";
			fens[90] = "4k2q/8/1p6/p4K2/8/8/8/8 b - - 2 60";
			fens[89] = "4k2q/8/1p4K1/p7/8/8/8/8 w - - 1 60";
			fens[88] = "4k3/8/1p4K1/p7/8/8/1q6/8 b - - 0 59";
			fens[87] = "4k3/8/1p4p1/p5K1/8/8/1q6/8 w - - 5 59";
			fens[86] = "5k2/8/1p4p1/p5K1/8/8/1q6/8 b - - 4 58";
			fens[85] = "5k2/8/1p4p1/p7/6K1/8/1q6/8 w - - 3 58";
			fens[84] = "5k2/8/1p4p1/pq6/6K1/8/8/8 b - - 2 57";
			fens[83] = "5k2/8/1p4p1/pq6/7K/8/8/8 w - - 1 57";
			fens[82] = "4qk2/8/1p4p1/p7/7K/8/8/8 b - - 0 56";
			fens[81] = "4qk2/8/1p4p1/p5K1/7p/8/8/8 w - - 4 56";
			fens[80] = "4q1k1/8/1p4p1/p5K1/7p/8/8/8 b - - 3 55";
			fens[79] = "4q1k1/8/1p4p1/p7/5K1p/8/8/8 w - - 2 55";
			fens[78] = "3q2k1/8/1p4p1/p7/5K1p/8/8/8 b - - 1 54";
			fens[77] = "3q2k1/8/1p4p1/p3K3/7p/8/8/8 w - - 0 54";
			fens[76] = "3q2k1/6p1/1p6/p3K3/7p/8/8/8 b - - 5 53";
			fens[75] = "3q2k1/6p1/1p6/p7/4K2p/8/8/8 w - - 4 53";
			fens[74] = "3q3k/6p1/1p6/p7/4K2p/8/8/8 b - - 3 52";
			fens[73] = "3q3k/6p1/1p6/p7/5K1p/8/8/8 w - - 2 52";
			fens[72] = "7k/4q1p1/1p6/p7/5K1p/8/8/8 b - - 1 51";
			fens[71] = "7k/4q1p1/1p6/p7/6Kp/8/8/8 w - - 0 51";
			fens[70] = "7k/4q1p1/pp6/8/6Kp/8/8/8 b - - 13 50";
			fens[69] = "7k/4q1p1/pp6/8/5K1p/8/8/8 w - - 12 50";
			fens[68] = "7k/3q2p1/pp6/8/5K1p/8/8/8 b - - 11 49";
			fens[67] = "7k/3q2p1/pp6/8/7p/4K3/8/8 w - - 10 49";
			fens[66] = "7k/6p1/pp6/5q2/7p/4K3/8/8 b - - 9 48";
			fens[65] = "7k/6p1/pp6/5q2/7p/5K2/8/8 w - - 8 48";
			fens[64] = "2q4k/6p1/pp6/8/7p/5K2/8/8 b - - 7 47";
			fens[63] = "2q4k/6p1/pp6/8/7p/8/6K1/8 w - - 6 47";
			fens[62] = "7k/6p1/pp6/8/2q4p/8/6K1/8 b - - 5 46";
			fens[61] = "7k/6p1/pp6/8/2q4p/5K2/8/8 w - - 4 46";
			fens[60] = "7k/6p1/pp6/2q5/7p/5K2/8/8 b - - 3 45";
			fens[59] = "7k/6p1/pp6/2q5/7p/8/4K3/8 w - - 2 45";
			fens[58] = "7k/6p1/pp6/8/7p/8/4K3/2q5 b - - 1 44";
			fens[57] = "7k/6p1/pp6/8/7p/3K4/8/2q5 w - - 0 44";
			fens[56] = "7k/6p1/pp6/8/7p/3K4/2p5/8 b - - 1 43";
			fens[55] = "7k/6p1/pp6/8/4K2p/8/2p5/8 w - - 0 43";
			fens[54] = "7k/6p1/pp6/8/4K2p/2p5/8/8 b - - 1 42";
			fens[53] = "7k/6p1/pp6/5K2/7p/2p5/8/8 w - - 0 42";
			fens[52] = "7k/6p1/pp6/5K2/2p4p/8/8/8 b - - 0 41";
			fens[51] = "7k/6p1/pp6/4Kp2/2p4p/8/8/8 w - - 0 41";
			fens[50] = "7k/6p1/pp6/2p1Kp2/7p/8/8/8 b - - 1 40";
			fens[49] = "7k/6p1/pp6/2pK1p2/7p/8/8/8 w - - 0 40";
			fens[48] = "7k/6p1/pp6/2pK1p1p/8/8/8/8 b - - 1 39";
			fens[47] = "7k/6p1/pp6/2p2p1p/3K4/8/8/8 w - - 0 39";
			fens[46] = "7k/6p1/ppp5/5p1p/3K4/8/8/8 b - - 1 38";
			fens[45] = "7k/6p1/ppp5/5p1p/8/3K4/8/8 w - - 0 38";
			fens[44] = "7k/6p1/ppp4p/5p2/8/3K4/8/8 b - - 1 37";
			fens[43] = "7k/6p1/ppp4p/5p2/8/8/3K4/8 w - f6 0 37";
			fens[42] = "7k/5pp1/ppp4p/8/8/8/3K4/8 b - - 0 36";
			fens[41] = "7k/5pp1/ppp4p/8/8/8/3bK3/8 w - - 0 36";
			fens[40] = "7k/5ppp/ppp5/8/8/8/3bK3/8 b - - 1 35";
			fens[39] = "7k/5ppp/ppp5/8/8/5K2/3b4/8 w - - 0 35";
			fens[38] = "7k/1p3ppp/p1p5/8/8/5K2/3b4/8 b - - 3 34";
			fens[37] = "7k/1p3ppp/p1p5/8/6K1/8/3b4/8 w - - 2 34";
			fens[36] = "7k/1p3ppp/p1p5/6b1/6K1/8/8/8 b - - 1 33";
			fens[35] = "7k/1p3ppp/p1p5/6b1/8/7K/8/8 w - - 0 33";
			fens[34] = "7k/1p3ppp/p1p5/6P1/8/4b2K/8/8 b - - 2 32";
			fens[33] = "7k/1p3ppp/p1p5/6P1/8/4b3/7K/8 w - - 1 32";
			fens[32] = "7k/1p3ppp/p1p5/2b3P1/8/8/7K/8 b - - 0 31";
			fens[31] = "7k/1p3ppp/p1p5/2b3P1/8/8/6Kr/8 w - - 0 31";
			fens[30] = "7k/1p3ppp/p1p5/2b3P1/7r/8/6KP/8 b - - 2 30";
			fens[29] = "7k/1p3ppp/p1p5/2b3P1/7r/8/7P/7K w - - 1 30";
			fens[28] = "7k/1p3ppp/p1p5/2b3P1/5r2/8/7P/7K b - - 0 29";
			fens[27] = "7k/1p3ppp/p1p5/2b5/5rP1/8/7P/7K w - - 0 29";
			fens[26] = "7k/1p3ppp/p1p5/2b5/r4BP1/8/7P/7K b - - 1 28";
			fens[25] = "7k/1p3ppp/p1p5/2b5/r5P1/8/3B3P/7K w - - 0 28";
			fens[24] = "7k/1p3ppp/p1p5/2b5/P3r1P1/8/3B3P/7K b - a3 0 27";
			fens[23] = "7k/1p3ppp/p1p5/2b5/4r1P1/8/P2B3P/7K w - - 0 27";
			fens[22] = "4r2k/1p3ppp/p1p5/2b5/4P1P1/8/P2B3P/7K b - g3 0 26";
			fens[21] = "4r2k/1p3ppp/p1p5/2b5/4P3/8/P2B2PP/7K w - - 1 26";
			fens[20] = "r6k/1p3ppp/p1p5/2b5/4P3/8/P2B2PP/7K b - - 0 25";
			fens[19] = "r6k/1p3ppp/p1p5/2b3B1/4P3/8/P2q2PP/7K w - - 0 25";
			fens[18] = "r6k/1p3ppp/p1p5/2b3B1/4P3/8/P1qR2PP/7K b - - 1 24";
			fens[17] = "r6k/1p3ppp/p1p5/2b3B1/4P3/8/P1q3PP/3R3K w - - 0 24";
			fens[16] = "r6k/1p3ppp/p1p5/2b3B1/4P3/2q5/P1P3PP/3R3K b - - 1 23";
			fens[15] = "r6k/1p3ppp/p1p5/2b3B1/4P3/2q5/P1P3PP/R6K w - - 0 23";
			fens[14] = "r6k/1p3ppp/p1p5/2b1q1B1/4P3/2N5/P1P3PP/R6K b - - 1 22";
			fens[13] = "r6k/1p3ppp/p1p5/2b1q1B1/4P3/8/P1P3PP/RN5K w - - 0 22";
			fens[12] = "r6k/1p3ppp/p1p5/2b1R1B1/4P3/8/PqP3PP/RN5K b - - 0 21";
			fens[11] = "r6k/1p3ppp/p1p5/2b1nRB1/4P3/8/PqP3PP/RN5K w - - 0 21";
			fens[10] = "r6k/1p3ppp/pqp5/2b1nRB1/4P3/8/PPP3PP/RN5K b - - 1 20";
			fens[9] = "r6k/1p3ppp/pqp5/2b1n1B1/4P3/8/PPP3PP/RN3R1K w - - 0 20";
			fens[8] = "r6k/1p1n1ppp/pqp5/2b1Q1B1/4P3/8/PPP3PP/RN3R1K b - - 0 19";
			fens[7] = "r6k/1p1n1ppp/pqp5/2b1r1B1/4P3/6Q1/PPP3PP/RN3R1K w - - 0 19";
			fens[6] = "r3r2k/1p1n1ppp/pqp5/2b1N1B1/4P3/6Q1/PPP3PP/RN3R1K b - - 0 18";
			fens[5] = "r3r2k/1p1n1ppp/pqp5/2b1p1B1/4P3/5NQ1/PPP3PP/RN3R1K w - - 1 18";
			fens[4] = "r3r2k/1pqn1ppp/p1p5/2b1p1B1/4P3/5NQ1/PPP3PP/RN3R1K b - - 0 17";
			fens[3] = "r3r2k/1pqn1ppp/p1p5/2b1p1B1/4n3/3P1NQ1/PPP3PP/RN3R1K w - - 0 17";
			fens[2] = "r3r2k/1pqn1ppp/p1p2n2/2b1p1B1/4P3/3P1NQ1/PPP3PP/RN3R1K b - - 5 16";
			fens[1] = "r3r2k/1pqn1ppp/p1p2n2/2b1p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K w - - 4 16";
			fens[0] = "r4r1k/1pqn1ppp/p1p2n2/2b1p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K b - - 3 15";
			
			result = ::test_do_move(name: "test26", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test26: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test27() return boolean is
			@noparse
			LOG::LogInfo(message: "test27: start");
			t0 = TIM::current_clock();
			
			initial_fen = "r4r1k/1pqn1ppp/p1p2n2/2b1p3/4P3/3P2Q1/PPPB2PP/RN2NR1K w - - 2 15";
			move_text = "d2g5 c5e7 h2h3 h7h6 g5f6 e7f6 f1f6 g7f6 g3e5 d7e5 b2b3 f8g8 d3d4 e5d7 b3b4 c7g3 c2c4 g3e1 h1h2 e1g3 h2g1 g3g2";
			fens[21] = "r5rk/1p1n1p2/p1p2p1p/8/1PPPP3/7P/P5q1/RN4K1 w - - 0 26";
			fens[20] = "r5rk/1p1n1p2/p1p2p1p/8/1PPPP3/6qP/P5P1/RN4K1 b - - 3 25";
			fens[19] = "r5rk/1p1n1p2/p1p2p1p/8/1PPPP3/6qP/P5PK/RN6 w - - 2 25";
			fens[18] = "r5rk/1p1n1p2/p1p2p1p/8/1PPPP3/7P/P5PK/RN2q3 b - - 1 24";
			fens[17] = "r5rk/1p1n1p2/p1p2p1p/8/1PPPP3/7P/P5P1/RN2q2K w - - 0 24";
			fens[16] = "r5rk/1p1n1p2/p1p2p1p/8/1PPPP3/6qP/P5P1/RN2N2K b - c3 0 23";
			fens[15] = "r5rk/1p1n1p2/p1p2p1p/8/1P1PP3/6qP/P1P3P1/RN2N2K w - - 1 23";
			fens[14] = "r5rk/1pqn1p2/p1p2p1p/8/1P1PP3/7P/P1P3P1/RN2N2K b - - 0 22";
			fens[13] = "r5rk/1pqn1p2/p1p2p1p/8/3PP3/1P5P/P1P3P1/RN2N2K w - - 1 22";
			fens[12] = "r5rk/1pq2p2/p1p2p1p/4n3/3PP3/1P5P/P1P3P1/RN2N2K b - - 0 21";
			fens[11] = "r5rk/1pq2p2/p1p2p1p/4n3/4P3/1P1P3P/P1P3P1/RN2N2K w - - 1 21";
			fens[10] = "r4r1k/1pq2p2/p1p2p1p/4n3/4P3/1P1P3P/P1P3P1/RN2N2K b - - 0 20";
			fens[9] = "r4r1k/1pq2p2/p1p2p1p/4n3/4P3/3P3P/PPP3P1/RN2N2K w - - 0 20";
			fens[8] = "r4r1k/1pqn1p2/p1p2p1p/4Q3/4P3/3P3P/PPP3P1/RN2N2K b - - 0 19";
			fens[7] = "r4r1k/1pqn1p2/p1p2p1p/4p3/4P3/3P2QP/PPP3P1/RN2N2K w - - 0 19";
			fens[6] = "r4r1k/1pqn1pp1/p1p2R1p/4p3/4P3/3P2QP/PPP3P1/RN2N2K b - - 0 18";
			fens[5] = "r4r1k/1pqn1pp1/p1p2b1p/4p3/4P3/3P2QP/PPP3P1/RN2NR1K w - - 0 18";
			fens[4] = "r4r1k/1pqnbpp1/p1p2B1p/4p3/4P3/3P2QP/PPP3P1/RN2NR1K b - - 0 17";
			fens[3] = "r4r1k/1pqnbpp1/p1p2n1p/4p1B1/4P3/3P2QP/PPP3P1/RN2NR1K w - - 0 17";
			fens[2] = "r4r1k/1pqnbppp/p1p2n2/4p1B1/4P3/3P2QP/PPP3P1/RN2NR1K b - - 0 16";
			fens[1] = "r4r1k/1pqnbppp/p1p2n2/4p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K w - - 4 16";
			fens[0] = "r4r1k/1pqn1ppp/p1p2n2/2b1p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K b - - 3 15";
			
			result = ::test_do_move(name: "test27", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test27: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test28() return boolean is
			@noparse
			LOG::LogInfo(message: "test28: start");
			t0 = TIM::current_clock();
			
			initial_fen = "r4r1k/1pqn1ppp/p1p2n2/2b1p3/4P3/3P2Q1/PPPB2PP/RN2NR1K w - - 2 15";
			move_text = "d2g5 c5e7 d3d4 f6e4 d4e5 e4g3 h1g1 g3f1 g1f1 e7g5 e1f3 d7e5 f3e5 c7e5 b1c3 e5c3 a1e1 c3e1 f1e1 a8e8 e1f1 g5f6 c2c4 f6b2 a2a4 e8e4 c4c5 e4a4 g2g4 a4g4 h2h3 g4h4 f1g2 h4h3 g2h3 b2d4 h3g4 d4c5 g4f5 c5e7 f5e5 h7h5 e5f5 e7g5 f5e4 g5d8 e4d4 h5h4 d4e3 f7f6 e3d2 c6c5 d2c1 h4h3";
			fens[53] = "3b1r1k/1p4p1/p4p2/2p5/8/7p/8/2K5 w - - 0 42";
			fens[52] = "3b1r1k/1p4p1/p4p2/2p5/7p/8/8/2K5 b - - 1 41";
			fens[51] = "3b1r1k/1p4p1/p4p2/2p5/7p/8/3K4/8 w - - 0 41";
			fens[50] = "3b1r1k/1p4p1/p1p2p2/8/7p/8/3K4/8 b - - 1 40";
			fens[49] = "3b1r1k/1p4p1/p1p2p2/8/7p/4K3/8/8 w - - 0 40";
			fens[48] = "3b1r1k/1p3pp1/p1p5/8/7p/4K3/8/8 b - - 1 39";
			fens[47] = "3b1r1k/1p3pp1/p1p5/8/3K3p/8/8/8 w - - 0 39";
			fens[46] = "3b1r1k/1p3pp1/p1p5/7p/3K4/8/8/8 b - - 5 38";
			fens[45] = "3b1r1k/1p3pp1/p1p5/7p/4K3/8/8/8 w - - 4 38";
			fens[44] = "5r1k/1p3pp1/p1p5/6bp/4K3/8/8/8 b - - 3 37";
			fens[43] = "5r1k/1p3pp1/p1p5/5Kbp/8/8/8/8 w - - 2 37";
			fens[42] = "5r1k/1p2bpp1/p1p5/5K1p/8/8/8/8 b - - 1 36";
			fens[41] = "5r1k/1p2bpp1/p1p5/4K2p/8/8/8/8 w - h6 0 36";
			fens[40] = "5r1k/1p2bppp/p1p5/4K3/8/8/8/8 b - - 3 35";
			fens[39] = "5r1k/1p2bppp/p1p5/5K2/8/8/8/8 w - - 2 35";
			fens[38] = "5r1k/1p3ppp/p1p5/2b2K2/8/8/8/8 b - - 1 34";
			fens[37] = "5r1k/1p3ppp/p1p5/2b5/6K1/8/8/8 w - - 0 34";
			fens[36] = "5r1k/1p3ppp/p1p5/2P5/3b2K1/8/8/8 b - - 2 33";
			fens[35] = "5r1k/1p3ppp/p1p5/2P5/3b4/7K/8/8 w - - 1 33";
			fens[34] = "5r1k/1p3ppp/p1p5/2P5/8/7K/1b6/8 b - - 0 32";
			fens[33] = "5r1k/1p3ppp/p1p5/2P5/8/7r/1b4K1/8 w - - 0 32";
			fens[32] = "5r1k/1p3ppp/p1p5/2P5/7r/7P/1b4K1/8 b - - 2 31";
			fens[31] = "5r1k/1p3ppp/p1p5/2P5/7r/7P/1b6/5K2 w - - 1 31";
			fens[30] = "5r1k/1p3ppp/p1p5/2P5/6r1/7P/1b6/5K2 b - - 0 30";
			fens[29] = "5r1k/1p3ppp/p1p5/2P5/6r1/8/1b5P/5K2 w - - 0 30";
			fens[28] = "5r1k/1p3ppp/p1p5/2P5/r5P1/8/1b5P/5K2 b - g3 0 29";
			fens[27] = "5r1k/1p3ppp/p1p5/2P5/r7/8/1b4PP/5K2 w - - 0 29";
			fens[26] = "5r1k/1p3ppp/p1p5/2P5/P3r3/8/1b4PP/5K2 b - - 0 28";
			fens[25] = "5r1k/1p3ppp/p1p5/8/P1P1r3/8/1b4PP/5K2 w - - 1 28";
			fens[24] = "4rr1k/1p3ppp/p1p5/8/P1P5/8/1b4PP/5K2 b - a3 0 27";
			fens[23] = "4rr1k/1p3ppp/p1p5/8/2P5/8/Pb4PP/5K2 w - - 0 27";
			fens[22] = "4rr1k/1p3ppp/p1p2b2/8/2P5/8/PP4PP/5K2 b - c3 0 26";
			fens[21] = "4rr1k/1p3ppp/p1p2b2/8/8/8/PPP3PP/5K2 w - - 3 26";
			fens[20] = "4rr1k/1p3ppp/p1p5/6b1/8/8/PPP3PP/5K2 b - - 2 25";
			fens[19] = "4rr1k/1p3ppp/p1p5/6b1/8/8/PPP3PP/4K3 w - - 1 25";
			fens[18] = "r4r1k/1p3ppp/p1p5/6b1/8/8/PPP3PP/4K3 b - - 0 24";
			fens[17] = "r4r1k/1p3ppp/p1p5/6b1/8/8/PPP3PP/4qK2 w - - 0 24";
			fens[16] = "r4r1k/1p3ppp/p1p5/6b1/8/2q5/PPP3PP/4RK2 b - - 1 23";
			fens[15] = "r4r1k/1p3ppp/p1p5/6b1/8/2q5/PPP3PP/R4K2 w - - 0 23";
			fens[14] = "r4r1k/1p3ppp/p1p5/4q1b1/8/2N5/PPP3PP/R4K2 b - - 1 22";
			fens[13] = "r4r1k/1p3ppp/p1p5/4q1b1/8/8/PPP3PP/RN3K2 w - - 0 22";
			fens[12] = "r4r1k/1pq2ppp/p1p5/4N1b1/8/8/PPP3PP/RN3K2 b - - 0 21";
			fens[11] = "r4r1k/1pq2ppp/p1p5/4n1b1/8/5N2/PPP3PP/RN3K2 w - - 0 21";
			fens[10] = "r4r1k/1pqn1ppp/p1p5/4P1b1/8/5N2/PPP3PP/RN3K2 b - - 1 20";
			fens[9] = "r4r1k/1pqn1ppp/p1p5/4P1b1/8/8/PPP3PP/RN2NK2 w - - 0 20";
			fens[8] = "r4r1k/1pqnbppp/p1p5/4P1B1/8/8/PPP3PP/RN2NK2 b - - 0 19";
			fens[7] = "r4r1k/1pqnbppp/p1p5/4P1B1/8/8/PPP3PP/RN2NnK1 w - - 0 19";
			fens[6] = "r4r1k/1pqnbppp/p1p5/4P1B1/8/6n1/PPP3PP/RN2NRK1 b - - 1 18";
			fens[5] = "r4r1k/1pqnbppp/p1p5/4P1B1/8/6n1/PPP3PP/RN2NR1K w - - 0 18";
			fens[4] = "r4r1k/1pqnbppp/p1p5/4P1B1/4n3/6Q1/PPP3PP/RN2NR1K b - - 0 17";
			fens[3] = "r4r1k/1pqnbppp/p1p5/4p1B1/3Pn3/6Q1/PPP3PP/RN2NR1K w - - 0 17";
			fens[2] = "r4r1k/1pqnbppp/p1p2n2/4p1B1/3PP3/6Q1/PPP3PP/RN2NR1K b - - 0 16";
			fens[1] = "r4r1k/1pqnbppp/p1p2n2/4p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K w - - 4 16";
			fens[0] = "r4r1k/1pqn1ppp/p1p2n2/2b1p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K b - - 3 15";
			
			result = ::test_do_move(name: "test28", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test28: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test29() return boolean is
			@noparse
			LOG::LogInfo(message: "test29: start");
			t0 = TIM::current_clock();
			
			initial_fen = "r4r1k/1pqn1ppp/p1p2n2/2b1p3/4P3/3P2Q1/PPPB2PP/RN2NR1K w - - 2 15";
			move_text = "g3h3 f6e4 d3e4 d7f6 e1d3 f6e4 d2e1 e4g5 h3g4 c7d8 d3c5 d8d5 c5b7 a8b8 b1c3 d5d4 g4g5 b8b7 g5c1 e5e4 c3e2 d4c4 f1f2 b7e7 e1c3 e4e3 f2f7 e7f7 c1e3 f7f1 a1f1 f8f1 e3g1 c4e2 g1f1 e2f1";
			fens[35] = "7k/6pp/p1p5/8/8/2B5/PPP3PP/5q1K w - - 0 33";
			fens[34] = "7k/6pp/p1p5/8/8/2B5/PPP1q1PP/5Q1K b - - 0 32";
			fens[33] = "7k/6pp/p1p5/8/8/2B5/PPP1q1PP/5rQK w - - 0 32";
			fens[32] = "7k/6pp/p1p5/8/2q5/2B5/PPP1N1PP/5rQK b - - 1 31";
			fens[31] = "7k/6pp/p1p5/8/2q5/2B1Q3/PPP1N1PP/5r1K w - - 0 31";
			fens[30] = "5r1k/6pp/p1p5/8/2q5/2B1Q3/PPP1N1PP/5R1K b - - 0 30";
			fens[29] = "5r1k/6pp/p1p5/8/2q5/2B1Q3/PPP1N1PP/R4r1K w - - 1 30";
			fens[28] = "5r1k/5rpp/p1p5/8/2q5/2B1Q3/PPP1N1PP/R6K b - - 0 29";
			fens[27] = "5r1k/5rpp/p1p5/8/2q5/2B1p3/PPP1N1PP/R1Q4K w - - 0 29";
			fens[26] = "5r1k/4rRpp/p1p5/8/2q5/2B1p3/PPP1N1PP/R1Q4K b - - 0 28";
			fens[25] = "5r1k/4rppp/p1p5/8/2q5/2B1p3/PPP1NRPP/R1Q4K w - - 0 28";
			fens[24] = "5r1k/4rppp/p1p5/8/2q1p3/2B5/PPP1NRPP/R1Q4K b - - 5 27";
			fens[23] = "5r1k/4rppp/p1p5/8/2q1p3/8/PPP1NRPP/R1Q1B2K w - - 4 27";
			fens[22] = "5r1k/1r3ppp/p1p5/8/2q1p3/8/PPP1NRPP/R1Q1B2K b - - 3 26";
			fens[21] = "5r1k/1r3ppp/p1p5/8/2q1p3/8/PPP1N1PP/R1Q1BR1K w - - 2 26";
			fens[20] = "5r1k/1r3ppp/p1p5/8/3qp3/8/PPP1N1PP/R1Q1BR1K b - - 1 25";
			fens[19] = "5r1k/1r3ppp/p1p5/8/3qp3/2N5/PPP3PP/R1Q1BR1K w - - 0 25";
			fens[18] = "5r1k/1r3ppp/p1p5/4p3/3q4/2N5/PPP3PP/R1Q1BR1K b - - 1 24";
			fens[17] = "5r1k/1r3ppp/p1p5/4p1Q1/3q4/2N5/PPP3PP/R3BR1K w - - 0 24";
			fens[16] = "1r3r1k/1N3ppp/p1p5/4p1Q1/3q4/2N5/PPP3PP/R3BR1K b - - 0 23";
			fens[15] = "1r3r1k/1N3ppp/p1p5/4p1n1/3q2Q1/2N5/PPP3PP/R3BR1K w - - 3 23";
			fens[14] = "1r3r1k/1N3ppp/p1p5/3qp1n1/6Q1/2N5/PPP3PP/R3BR1K b - - 2 22";
			fens[13] = "1r3r1k/1N3ppp/p1p5/3qp1n1/6Q1/8/PPP3PP/RN2BR1K w - - 1 22";
			fens[12] = "r4r1k/1N3ppp/p1p5/3qp1n1/6Q1/8/PPP3PP/RN2BR1K b - - 0 21";
			fens[11] = "r4r1k/1p3ppp/p1p5/2Nqp1n1/6Q1/8/PPP3PP/RN2BR1K w - - 1 21";
			fens[10] = "r2q1r1k/1p3ppp/p1p5/2N1p1n1/6Q1/8/PPP3PP/RN2BR1K b - - 0 20";
			fens[9] = "r2q1r1k/1p3ppp/p1p5/2b1p1n1/6Q1/3N4/PPP3PP/RN2BR1K w - - 4 20";
			fens[8] = "r4r1k/1pq2ppp/p1p5/2b1p1n1/6Q1/3N4/PPP3PP/RN2BR1K b - - 3 19";
			fens[7] = "r4r1k/1pq2ppp/p1p5/2b1p1n1/8/3N3Q/PPP3PP/RN2BR1K w - - 2 19";
			fens[6] = "r4r1k/1pq2ppp/p1p5/2b1p3/4n3/3N3Q/PPP3PP/RN2BR1K b - - 1 18";
			fens[5] = "r4r1k/1pq2ppp/p1p5/2b1p3/4n3/3N3Q/PPPB2PP/RN3R1K w - - 0 18";
			fens[4] = "r4r1k/1pq2ppp/p1p2n2/2b1p3/4P3/3N3Q/PPPB2PP/RN3R1K b - - 2 17";
			fens[3] = "r4r1k/1pq2ppp/p1p2n2/2b1p3/4P3/7Q/PPPB2PP/RN2NR1K w - - 1 17";
			fens[2] = "r4r1k/1pqn1ppp/p1p5/2b1p3/4P3/7Q/PPPB2PP/RN2NR1K b - - 0 16";
			fens[1] = "r4r1k/1pqn1ppp/p1p5/2b1p3/4n3/3P3Q/PPPB2PP/RN2NR1K w - - 0 16";
			fens[0] = "r4r1k/1pqn1ppp/p1p2n2/2b1p3/4P3/3P3Q/PPPB2PP/RN2NR1K b - - 3 15";
			
			result = ::test_do_move(name: "test29", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test29: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test3() return boolean is
			@noparse
			LOG::LogInfo(message: "test3: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 c7c5 f1b5 d8a5 d1h5 a5b5 g1f3 b5b2 c1b2 d7d6 b1c3 g8f6 f3g5 f6h5 g5f7 e8f7 c3d5 c8e6 d5c7 e6a2 e1g1 h5g3 h2g3 a7a5 a1a2 b8a6 a2a5 a6c7 a5a8 c7a8 f1a1 f7e6 a1a8 h7h6 a8e8 c5c4 e8e7 e6e7 b2f6 g7f6 e4e5 d6e5 d2d3 c4d3 c2d3 h8g8 g3g4 g8g4 d3d4 e5d4 f2f3 g4g2 g1f1 f8g7 f3f4 g7h8 f4f5 g2g5 f1e2 g5f5 e2d3 b7b5 d3d4 f5f1 d4d5 e7e8 d5d6 f1e1 d6c7 h6h5 c7b6 e1a1 b6b5 a1b1 b5c6 e8f7 c6d7 b1b8 d7c7 f6f5 c7b8 f7g8 b8c7 h8b2 c7d6 b2a1 d6e6 a1e5 e6f5 e5c7 f5g5 g8g7 g5h5";
			fens[92] = "8/2b3k1/8/7K/8/8/8/8 b - - 0 47";
			fens[91] = "8/2b3k1/8/6Kp/8/8/8/8 w - - 3 47";
			fens[90] = "6k1/2b5/8/6Kp/8/8/8/8 b - - 2 46";
			fens[89] = "6k1/2b5/8/5K1p/8/8/8/8 w - - 1 46";
			fens[88] = "6k1/8/8/4bK1p/8/8/8/8 b - - 0 45";
			fens[87] = "6k1/8/4K3/4bp1p/8/8/8/8 w - - 7 45";
			fens[86] = "6k1/8/4K3/5p1p/8/8/8/b7 b - - 6 44";
			fens[85] = "6k1/8/3K4/5p1p/8/8/8/b7 w - - 5 44";
			fens[84] = "6k1/8/3K4/5p1p/8/8/1b6/8 b - - 4 43";
			fens[83] = "6k1/2K5/8/5p1p/8/8/1b6/8 w - - 3 43";
			fens[82] = "6kb/2K5/8/5p1p/8/8/8/8 b - - 2 42";
			fens[81] = "1K4kb/8/8/5p1p/8/8/8/8 w - - 1 42";
			fens[80] = "1K5b/5k2/8/5p1p/8/8/8/8 b - - 0 41";
			fens[79] = "1r5b/2K2k2/8/5p1p/8/8/8/8 w - - 0 41";
			fens[78] = "1r5b/2K2k2/5p2/7p/8/8/8/8 b - - 6 40";
			fens[77] = "1r5b/3K1k2/5p2/7p/8/8/8/8 w - - 5 40";
			fens[76] = "7b/3K1k2/5p2/7p/8/8/8/1r6 b - - 4 39";
			fens[75] = "7b/5k2/2K2p2/7p/8/8/8/1r6 w - - 3 39";
			fens[74] = "4k2b/8/2K2p2/7p/8/8/8/1r6 b - - 2 38";
			fens[73] = "4k2b/8/5p2/1K5p/8/8/8/1r6 w - - 1 38";
			fens[72] = "4k2b/8/5p2/1K5p/8/8/8/r7 b - - 0 37";
			fens[71] = "4k2b/8/1K3p2/1p5p/8/8/8/r7 w - - 2 37";
			fens[70] = "4k2b/8/1K3p2/1p5p/8/8/8/4r3 b - - 1 36";
			fens[69] = "4k2b/2K5/5p2/1p5p/8/8/8/4r3 w - - 0 36";
			fens[68] = "4k2b/2K5/5p1p/1p6/8/8/8/4r3 b - - 6 35";
			fens[67] = "4k2b/8/3K1p1p/1p6/8/8/8/4r3 w - - 5 35";
			fens[66] = "4k2b/8/3K1p1p/1p6/8/8/8/5r2 b - - 4 34";
			fens[65] = "4k2b/8/5p1p/1p1K4/8/8/8/5r2 w - - 3 34";
			fens[64] = "7b/4k3/5p1p/1p1K4/8/8/8/5r2 b - - 2 33";
			fens[63] = "7b/4k3/5p1p/1p6/3K4/8/8/5r2 w - - 1 33";
			fens[62] = "7b/4k3/5p1p/1p3r2/3K4/8/8/8 b - - 0 32";
			fens[61] = "7b/4k3/5p1p/1p3r2/3p4/3K4/8/8 w - b6 0 32";
			fens[60] = "7b/1p2k3/5p1p/5r2/3p4/3K4/8/8 b - - 1 31";
			fens[59] = "7b/1p2k3/5p1p/5r2/3p4/8/4K3/8 w - - 0 31";
			fens[58] = "7b/1p2k3/5p1p/5Pr1/3p4/8/4K3/8 b - - 2 30";
			fens[57] = "7b/1p2k3/5p1p/5Pr1/3p4/8/8/5K2 w - - 1 30";
			fens[56] = "7b/1p2k3/5p1p/5P2/3p4/8/6r1/5K2 b - - 0 29";
			fens[55] = "7b/1p2k3/5p1p/8/3p1P2/8/6r1/5K2 w - - 1 29";
			fens[54] = "8/1p2k1b1/5p1p/8/3p1P2/8/6r1/5K2 b - - 0 28";
			fens[53] = "8/1p2k1b1/5p1p/8/3p4/5P2/6r1/5K2 w - - 2 28";
			fens[52] = "5b2/1p2k3/5p1p/8/3p4/5P2/6r1/5K2 b - - 1 27";
			fens[51] = "5b2/1p2k3/5p1p/8/3p4/5P2/6r1/6K1 w - - 0 27";
			fens[50] = "5b2/1p2k3/5p1p/8/3p2r1/5P2/6P1/6K1 b - - 0 26";
			fens[49] = "5b2/1p2k3/5p1p/8/3p2r1/8/5PP1/6K1 w - - 0 26";
			fens[48] = "5b2/1p2k3/5p1p/4p3/3P2r1/8/5PP1/6K1 b - - 0 25";
			fens[47] = "5b2/1p2k3/5p1p/4p3/6r1/3P4/5PP1/6K1 w - - 0 25";
			fens[46] = "5br1/1p2k3/5p1p/4p3/6P1/3P4/5PP1/6K1 b - - 0 24";
			fens[45] = "5br1/1p2k3/5p1p/4p3/8/3P2P1/5PP1/6K1 w - - 1 24";
			fens[44] = "5b1r/1p2k3/5p1p/4p3/8/3P2P1/5PP1/6K1 b - - 0 23";
			fens[43] = "5b1r/1p2k3/5p1p/4p3/8/3p2P1/2P2PP1/6K1 w - - 0 23";
			fens[42] = "5b1r/1p2k3/5p1p/4p3/2p5/3P2P1/2P2PP1/6K1 b - - 0 22";
			fens[41] = "5b1r/1p2k3/5p1p/4p3/2p5/6P1/2PP1PP1/6K1 w - - 0 22";
			fens[40] = "5b1r/1p2k3/3p1p1p/4P3/2p5/6P1/2PP1PP1/6K1 b - - 0 21";
			fens[39] = "5b1r/1p2k3/3p1p1p/8/2p1P3/6P1/2PP1PP1/6K1 w - - 0 21";
			fens[38] = "5b1r/1p2k1p1/3p1B1p/8/2p1P3/6P1/2PP1PP1/6K1 b - - 1 20";
			fens[37] = "5b1r/1p2k1p1/3p3p/8/2p1P3/6P1/1BPP1PP1/6K1 w - - 0 20";
			fens[36] = "5b1r/1p2R1p1/3pk2p/8/2p1P3/6P1/1BPP1PP1/6K1 b - - 0 19";
			fens[35] = "4Rb1r/1p2p1p1/3pk2p/8/2p1P3/6P1/1BPP1PP1/6K1 w - - 0 19";
			fens[34] = "4Rb1r/1p2p1p1/3pk2p/2p5/4P3/6P1/1BPP1PP1/6K1 b - - 1 18";
			fens[33] = "R4b1r/1p2p1p1/3pk2p/2p5/4P3/6P1/1BPP1PP1/6K1 w - - 0 18";
			fens[32] = "R4b1r/1p2p1pp/3pk3/2p5/4P3/6P1/1BPP1PP1/6K1 b - - 0 17";
			fens[31] = "n4b1r/1p2p1pp/3pk3/2p5/4P3/6P1/1BPP1PP1/R5K1 w - - 2 17";
			fens[30] = "n4b1r/1p2pkpp/3p4/2p5/4P3/6P1/1BPP1PP1/R5K1 b - - 1 16";
			fens[29] = "n4b1r/1p2pkpp/3p4/2p5/4P3/6P1/1BPP1PP1/5RK1 w - - 0 16";
			fens[28] = "R4b1r/1pn1pkpp/3p4/2p5/4P3/6P1/1BPP1PP1/5RK1 b - - 0 15";
			fens[27] = "r4b1r/1pn1pkpp/3p4/R1p5/4P3/6P1/1BPP1PP1/5RK1 w - - 0 15";
			fens[26] = "r4b1r/1pN1pkpp/n2p4/R1p5/4P3/6P1/1BPP1PP1/5RK1 b - - 0 14";
			fens[25] = "r4b1r/1pN1pkpp/n2p4/p1p5/4P3/6P1/RBPP1PP1/5RK1 w - - 1 14";
			fens[24] = "rn3b1r/1pN1pkpp/3p4/p1p5/4P3/6P1/RBPP1PP1/5RK1 b - - 0 13";
			fens[23] = "rn3b1r/1pN1pkpp/3p4/p1p5/4P3/6P1/bBPP1PP1/R4RK1 w - a6 0 13";
			fens[22] = "rn3b1r/ppN1pkpp/3p4/2p5/4P3/6P1/bBPP1PP1/R4RK1 b - - 0 12";
			fens[21] = "rn3b1r/ppN1pkpp/3p4/2p5/4P3/6n1/bBPP1PPP/R4RK1 w - - 2 12";
			fens[20] = "rn3b1r/ppN1pkpp/3p4/2p4n/4P3/8/bBPP1PPP/R4RK1 b - - 1 11";
			fens[19] = "rn3b1r/ppN1pkpp/3p4/2p4n/4P3/8/bBPP1PPP/R3K2R w KQ - 0 11";
			fens[18] = "rn3b1r/ppN1pkpp/3pb3/2p4n/4P3/8/PBPP1PPP/R3K2R b KQ - 3 10";
			fens[17] = "rn3b1r/pp2pkpp/3pb3/2pN3n/4P3/8/PBPP1PPP/R3K2R w KQ - 2 10";
			fens[16] = "rnb2b1r/pp2pkpp/3p4/2pN3n/4P3/8/PBPP1PPP/R3K2R b KQ - 1 9";
			fens[15] = "rnb2b1r/pp2pkpp/3p4/2p4n/4P3/2N5/PBPP1PPP/R3K2R w KQ - 0 9";
			fens[14] = "rnb1kb1r/pp2pNpp/3p4/2p4n/4P3/2N5/PBPP1PPP/R3K2R b KQkq - 0 8";
			fens[13] = "rnb1kb1r/pp2pppp/3p4/2p3Nn/4P3/2N5/PBPP1PPP/R3K2R w KQkq - 0 8";
			fens[12] = "rnb1kb1r/pp2pppp/3p1n2/2p3NQ/4P3/2N5/PBPP1PPP/R3K2R b KQkq - 3 7";
			fens[11] = "rnb1kb1r/pp2pppp/3p1n2/2p4Q/4P3/2N2N2/PBPP1PPP/R3K2R w KQkq - 2 7";
			fens[10] = "rnb1kbnr/pp2pppp/3p4/2p4Q/4P3/2N2N2/PBPP1PPP/R3K2R b KQkq - 1 6";
			fens[9] = "rnb1kbnr/pp2pppp/3p4/2p4Q/4P3/5N2/PBPP1PPP/RN2K2R w KQkq - 0 6";
			fens[8] = "rnb1kbnr/pp1ppppp/8/2p4Q/4P3/5N2/PBPP1PPP/RN2K2R b KQkq - 0 5";
			fens[7] = "rnb1kbnr/pp1ppppp/8/2p4Q/4P3/5N2/PqPP1PPP/RNB1K2R w KQkq - 0 5";
			fens[6] = "rnb1kbnr/pp1ppppp/8/1qp4Q/4P3/5N2/PPPP1PPP/RNB1K2R b KQkq - 1 4";
			fens[5] = "rnb1kbnr/pp1ppppp/8/1qp4Q/4P3/8/PPPP1PPP/RNB1K1NR w KQkq - 0 4";
			fens[4] = "rnb1kbnr/pp1ppppp/8/qBp4Q/4P3/8/PPPP1PPP/RNB1K1NR b KQkq - 3 3";
			fens[3] = "rnb1kbnr/pp1ppppp/8/qBp5/4P3/8/PPPP1PPP/RNBQK1NR w KQkq - 2 3";
			fens[2] = "rnbqkbnr/pp1ppppp/8/1Bp5/4P3/8/PPPP1PPP/RNBQK1NR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR w KQkq c6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test3", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test3: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test30() return boolean is
			@noparse
			LOG::LogInfo(message: "test30: start");
			t0 = TIM::current_clock();
			
			initial_fen = "r4r1k/1pqn1ppp/p1p2n2/2b1p3/4P3/3P2Q1/PPPB2PP/RN2NR1K w - - 2 15";
			move_text = "d2g5 c5a7 g5f6";
			fens[2] = "r4r1k/bpqn1ppp/p1p2B2/4p3/4P3/3P2Q1/PPP3PP/RN2NR1K b - - 0 16";
			fens[1] = "r4r1k/bpqn1ppp/p1p2n2/4p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K w - - 4 16";
			fens[0] = "r4r1k/1pqn1ppp/p1p2n2/2b1p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K b - - 3 15";
			
			result = ::test_do_move(name: "test30", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test30: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test31() return boolean is
			@noparse
			LOG::LogInfo(message: "test31: start");
			t0 = TIM::current_clock();
			
			initial_fen = "r4r1k/1pqn1ppp/p1p2n2/2b1p3/4P3/3P2Q1/PPPB2PP/RN2NR1K w - - 2 15";
			move_text = "d2g5 c7d8";
			fens[1] = "r2q1r1k/1p1n1ppp/p1p2n2/2b1p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K w - - 4 16";
			fens[0] = "r4r1k/1pqn1ppp/p1p2n2/2b1p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K b - - 3 15";
			
			result = ::test_do_move(name: "test31", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test31: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test32() return boolean is
			@noparse
			LOG::LogInfo(message: "test32: start");
			t0 = TIM::current_clock();
			
			initial_fen = "r4r1k/1pqn1ppp/p1p2n2/2b1p3/4P3/3P2Q1/PPPB2PP/RN2NR1K w - - 2 15";
			move_text = "d2g5 a6a5 b2b4 a5b4 g3h3 h7h6 g5f6 d7f6";
			fens[7] = "r4r1k/1pq2pp1/2p2n1p/2b1p3/1p2P3/3P3Q/P1P3PP/RN2NR1K w - - 0 19";
			fens[6] = "r4r1k/1pqn1pp1/2p2B1p/2b1p3/1p2P3/3P3Q/P1P3PP/RN2NR1K b - - 0 18";
			fens[5] = "r4r1k/1pqn1pp1/2p2n1p/2b1p1B1/1p2P3/3P3Q/P1P3PP/RN2NR1K w - - 0 18";
			fens[4] = "r4r1k/1pqn1ppp/2p2n2/2b1p1B1/1p2P3/3P3Q/P1P3PP/RN2NR1K b - - 1 17";
			fens[3] = "r4r1k/1pqn1ppp/2p2n2/2b1p1B1/1p2P3/3P2Q1/P1P3PP/RN2NR1K w - - 0 17";
			fens[2] = "r4r1k/1pqn1ppp/2p2n2/p1b1p1B1/1P2P3/3P2Q1/P1P3PP/RN2NR1K b - b3 0 16";
			fens[1] = "r4r1k/1pqn1ppp/2p2n2/p1b1p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K w - - 0 16";
			fens[0] = "r4r1k/1pqn1ppp/p1p2n2/2b1p1B1/4P3/3P2Q1/PPP3PP/RN2NR1K b - - 3 15";
			
			result = ::test_do_move(name: "test32", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test32: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test33() return boolean is
			@noparse
			LOG::LogInfo(message: "test33: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 b7b5 d2d4 a7a6 c2c3 e7e6 e4e5 f7f5 e5f6 g7f6 d4d5 e6d5 d1d5 c7c6 d5d6 f8d6 c3c4 d8a5 c1d2 a5d2 e1d2 d6h2 h1h2 b5c4 b1a3 e8d8 a3c4 h7h5 a1e1 c8b7 c4d6 b7c8 d6c8 d8c8 e1e8 c8b7 e8g8 h8g8 h2h5 g8g2 f1g2 b7c8 h5h8 c8c7 f2f4 c7b7 h8f8 d7d5 f8f6 b7b6 f6d6 b6b5 f4f5 d5d4 f5f6 b5b4 f6f7 b4a5 f7f8q a5b6 f8d8 b6b7 d6d7 b8d7 d8d7 b7b8 g2h3 a6a5 d7c8 b8a7 c8c7 a7a6 h3g2 a8g8 g2c6 g8g1 c7b7";
			fens[76] = "8/1Q6/k1B5/p7/3p4/8/PP1K4/6r1 b - - 1 39";
			fens[75] = "8/2Q5/k1B5/p7/3p4/8/PP1K4/6r1 w - - 0 39";
			fens[74] = "6r1/2Q5/k1B5/p7/3p4/8/PP1K4/6N1 b - - 0 38";
			fens[73] = "6r1/2Q5/k1p5/p7/3p4/8/PP1K2B1/6N1 w - - 6 38";
			fens[72] = "r7/2Q5/k1p5/p7/3p4/8/PP1K2B1/6N1 b - - 5 37";
			fens[71] = "r7/2Q5/k1p5/p7/3p4/7B/PP1K4/6N1 w - - 4 37";
			fens[70] = "r7/k1Q5/2p5/p7/3p4/7B/PP1K4/6N1 b - - 3 36";
			fens[69] = "r1Q5/k7/2p5/p7/3p4/7B/PP1K4/6N1 w - - 2 36";
			fens[68] = "rkQ5/8/2p5/p7/3p4/7B/PP1K4/6N1 b - - 1 35";
			fens[67] = "rk6/3Q4/2p5/p7/3p4/7B/PP1K4/6N1 w - - 0 35";
			fens[66] = "rk6/3Q4/p1p5/8/3p4/7B/PP1K4/6N1 b - - 2 34";
			fens[65] = "rk6/3Q4/p1p5/8/3p4/8/PP1K2B1/6N1 w - - 1 34";
			fens[64] = "r7/1k1Q4/p1p5/8/3p4/8/PP1K2B1/6N1 b - - 0 33";
			fens[63] = "r2Q4/1k1n4/p1p5/8/3p4/8/PP1K2B1/6N1 w - - 0 33";
			fens[62] = "rn1Q4/1k1R4/p1p5/8/3p4/8/PP1K2B1/6N1 b - - 4 32";
			fens[61] = "rn1Q4/1k6/p1pR4/8/3p4/8/PP1K2B1/6N1 w - - 3 32";
			fens[60] = "rn1Q4/8/pkpR4/8/3p4/8/PP1K2B1/6N1 b - - 2 31";
			fens[59] = "rn3Q2/8/pkpR4/8/3p4/8/PP1K2B1/6N1 w - - 1 31";
			fens[58] = "rn3Q2/8/p1pR4/k7/3p4/8/PP1K2B1/6N1 b - - 0 30";
			fens[57] = "rn6/5P2/p1pR4/k7/3p4/8/PP1K2B1/6N1 w - - 1 30";
			fens[56] = "rn6/5P2/p1pR4/8/1k1p4/8/PP1K2B1/6N1 b - - 0 29";
			fens[55] = "rn6/8/p1pR1P2/8/1k1p4/8/PP1K2B1/6N1 w - - 1 29";
			fens[54] = "rn6/8/p1pR1P2/1k6/3p4/8/PP1K2B1/6N1 b - - 0 28";
			fens[53] = "rn6/8/p1pR4/1k3P2/3p4/8/PP1K2B1/6N1 w - - 0 28";
			fens[52] = "rn6/8/p1pR4/1k1p1P2/8/8/PP1K2B1/6N1 b - - 0 27";
			fens[51] = "rn6/8/p1pR4/1k1p4/5P2/8/PP1K2B1/6N1 w - - 3 27";
			fens[50] = "rn6/8/pkpR4/3p4/5P2/8/PP1K2B1/6N1 b - - 2 26";
			fens[49] = "rn6/8/pkp2R2/3p4/5P2/8/PP1K2B1/6N1 w - - 1 26";
			fens[48] = "rn6/1k6/p1p2R2/3p4/5P2/8/PP1K2B1/6N1 b - - 0 25";
			fens[47] = "rn3R2/1k6/p1p2p2/3p4/5P2/8/PP1K2B1/6N1 w - d6 0 25";
			fens[46] = "rn3R2/1k1p4/p1p2p2/8/5P2/8/PP1K2B1/6N1 b - - 2 24";
			fens[45] = "rn5R/1k1p4/p1p2p2/8/5P2/8/PP1K2B1/6N1 w - - 1 24";
			fens[44] = "rn5R/2kp4/p1p2p2/8/5P2/8/PP1K2B1/6N1 b - f3 0 23";
			fens[43] = "rn5R/2kp4/p1p2p2/8/8/8/PP1K1PB1/6N1 w - - 3 23";
			fens[42] = "rnk4R/3p4/p1p2p2/8/8/8/PP1K1PB1/6N1 b - - 2 22";
			fens[41] = "rnk5/3p4/p1p2p2/7R/8/8/PP1K1PB1/6N1 w - - 1 22";
			fens[40] = "rn6/1k1p4/p1p2p2/7R/8/8/PP1K1PB1/6N1 b - - 0 21";
			fens[39] = "rn6/1k1p4/p1p2p2/7R/8/8/PP1K1Pr1/5BN1 w - - 0 21";
			fens[38] = "rn4r1/1k1p4/p1p2p2/7R/8/8/PP1K1PP1/5BN1 b - - 0 20";
			fens[37] = "rn4r1/1k1p4/p1p2p2/7p/8/8/PP1K1PPR/5BN1 w - - 0 20";
			fens[36] = "rn4Rr/1k1p4/p1p2p2/7p/8/8/PP1K1PPR/5BN1 b - - 0 19";
			fens[35] = "rn2R1nr/1k1p4/p1p2p2/7p/8/8/PP1K1PPR/5BN1 w - - 2 19";
			fens[34] = "rnk1R1nr/3p4/p1p2p2/7p/8/8/PP1K1PPR/5BN1 b - - 1 18";
			fens[33] = "rnk3nr/3p4/p1p2p2/7p/8/8/PP1K1PPR/4RBN1 w - - 0 18";
			fens[32] = "rnNk2nr/3p4/p1p2p2/7p/8/8/PP1K1PPR/4RBN1 b - - 0 17";
			fens[31] = "rnbk2nr/3p4/p1pN1p2/7p/8/8/PP1K1PPR/4RBN1 w - - 4 17";
			fens[30] = "rn1k2nr/1b1p4/p1pN1p2/7p/8/8/PP1K1PPR/4RBN1 b - - 3 16";
			fens[29] = "rn1k2nr/1b1p4/p1p2p2/7p/2N5/8/PP1K1PPR/4RBN1 w - - 2 16";
			fens[28] = "rnbk2nr/3p4/p1p2p2/7p/2N5/8/PP1K1PPR/4RBN1 b - - 1 15";
			fens[27] = "rnbk2nr/3p4/p1p2p2/7p/2N5/8/PP1K1PPR/R4BN1 w - h6 0 15";
			fens[26] = "rnbk2nr/3p3p/p1p2p2/8/2N5/8/PP1K1PPR/R4BN1 b - - 0 14";
			fens[25] = "rnbk2nr/3p3p/p1p2p2/8/2p5/N7/PP1K1PPR/R4BN1 w - - 2 14";
			fens[24] = "rnb1k1nr/3p3p/p1p2p2/8/2p5/N7/PP1K1PPR/R4BN1 b kq - 1 13";
			fens[23] = "rnb1k1nr/3p3p/p1p2p2/8/2p5/8/PP1K1PPR/RN3BN1 w kq - 0 13";
			fens[22] = "rnb1k1nr/3p3p/p1p2p2/1p6/2P5/8/PP1K1PPR/RN3BN1 b kq - 0 12";
			fens[21] = "rnb1k1nr/3p3p/p1p2p2/1p6/2P5/8/PP1K1PPb/RN3BNR w kq - 0 12";
			fens[20] = "rnb1k1nr/3p3p/p1pb1p2/1p6/2P5/8/PP1K1PPP/RN3BNR b kq - 0 11";
			fens[19] = "rnb1k1nr/3p3p/p1pb1p2/1p6/2P5/8/PP1q1PPP/RN2KBNR w KQkq - 0 11";
			fens[18] = "rnb1k1nr/3p3p/p1pb1p2/qp6/2P5/8/PP1B1PPP/RN2KBNR b KQkq - 2 10";
			fens[17] = "rnb1k1nr/3p3p/p1pb1p2/qp6/2P5/8/PP3PPP/RNB1KBNR w KQkq - 1 10";
			fens[16] = "rnbqk1nr/3p3p/p1pb1p2/1p6/2P5/8/PP3PPP/RNB1KBNR b KQkq - 0 9";
			fens[15] = "rnbqk1nr/3p3p/p1pb1p2/1p6/8/2P5/PP3PPP/RNB1KBNR w KQkq - 0 9";
			fens[14] = "rnbqkbnr/3p3p/p1pQ1p2/1p6/8/2P5/PP3PPP/RNB1KBNR b KQkq - 1 8";
			fens[13] = "rnbqkbnr/3p3p/p1p2p2/1p1Q4/8/2P5/PP3PPP/RNB1KBNR w KQkq - 0 8";
			fens[12] = "rnbqkbnr/2pp3p/p4p2/1p1Q4/8/2P5/PP3PPP/RNB1KBNR b KQkq - 0 7";
			fens[11] = "rnbqkbnr/2pp3p/p4p2/1p1p4/8/2P5/PP3PPP/RNBQKBNR w KQkq - 0 7";
			fens[10] = "rnbqkbnr/2pp3p/p3pp2/1p1P4/8/2P5/PP3PPP/RNBQKBNR b KQkq - 0 6";
			fens[9] = "rnbqkbnr/2pp3p/p3pp2/1p6/3P4/2P5/PP3PPP/RNBQKBNR w KQkq - 0 6";
			fens[8] = "rnbqkbnr/2pp2pp/p3pP2/1p6/3P4/2P5/PP3PPP/RNBQKBNR b KQkq - 0 5";
			fens[7] = "rnbqkbnr/2pp2pp/p3p3/1p2Pp2/3P4/2P5/PP3PPP/RNBQKBNR w KQkq f6 0 5";
			fens[6] = "rnbqkbnr/2pp1ppp/p3p3/1p2P3/3P4/2P5/PP3PPP/RNBQKBNR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/2pp1ppp/p3p3/1p6/3PP3/2P5/PP3PPP/RNBQKBNR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/2pppppp/p7/1p6/3PP3/2P5/PP3PPP/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/2pppppp/p7/1p6/3PP3/8/PPP2PPP/RNBQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/p1pppppp/8/1p6/3PP3/8/PPP2PPP/RNBQKBNR b KQkq d3 0 2";
			fens[1] = "rnbqkbnr/p1pppppp/8/1p6/4P3/8/PPPP1PPP/RNBQKBNR w KQkq b6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test33", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test33: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test34() return boolean is
			@noparse
			LOG::LogInfo(message: "test34: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 e7e5 b2b3 d7d5 c2c3";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3pp3/8/PPP5/3PPPPP/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/8/PP6/2PPPPPP/RNBQKBNR w KQkq d6 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/8/PP6/2PPPPPP/RNBQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/P7/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test34", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test34: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test35() return boolean is
			@noparse
			LOG::LogInfo(message: "test35: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 h7h6";
			fens[1] = "rnbqkbnr/ppppppp1/7p/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test35", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test35: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test36() return boolean is
			@noparse
			LOG::LogInfo(message: "test36: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 e7e5 e2e3 d7d5 d1g4 d8g5 f1b5 c8d7 g4d1 d7b5 e3e4";
			fens[10] = "rn2kbnr/ppp2ppp/8/1b1pp1q1/4P3/P7/1PPP1PPP/RNBQK1NR b KQkq - 0 6";
			fens[9] = "rn2kbnr/ppp2ppp/8/1b1pp1q1/8/P3P3/1PPP1PPP/RNBQK1NR w KQkq - 0 6";
			fens[8] = "rn2kbnr/pppb1ppp/8/1B1pp1q1/8/P3P3/1PPP1PPP/RNBQK1NR b KQkq - 5 5";
			fens[7] = "rn2kbnr/pppb1ppp/8/1B1pp1q1/6Q1/P3P3/1PPP1PPP/RNB1K1NR w KQkq - 4 5";
			fens[6] = "rnb1kbnr/ppp2ppp/8/1B1pp1q1/6Q1/P3P3/1PPP1PPP/RNB1K1NR b KQkq - 3 4";
			fens[5] = "rnb1kbnr/ppp2ppp/8/3pp1q1/6Q1/P3P3/1PPP1PPP/RNB1KBNR w KQkq - 2 4";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3pp3/6Q1/P3P3/1PPP1PPP/RNB1KBNR b KQkq - 1 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/8/P3P3/1PPP1PPP/RNBQKBNR w KQkq d6 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/8/P3P3/1PPP1PPP/RNBQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/P7/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test36", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test36: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test37() return boolean is
			@noparse
			LOG::LogInfo(message: "test37: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 b7b5 d2d4 g7g6 e4e5 d7d5 f2f4 h7h5 c2c4 c8a6";
			fens[9] = "rn1qkbnr/p1p1pp2/b5p1/1p1pP2p/2PP1P2/8/PP4PP/RNBQKBNR w KQkq - 1 6";
			fens[8] = "rnbqkbnr/p1p1pp2/6p1/1p1pP2p/2PP1P2/8/PP4PP/RNBQKBNR b KQkq c3 0 5";
			fens[7] = "rnbqkbnr/p1p1pp2/6p1/1p1pP2p/3P1P2/8/PPP3PP/RNBQKBNR w KQkq h6 0 5";
			fens[6] = "rnbqkbnr/p1p1pp1p/6p1/1p1pP3/3P1P2/8/PPP3PP/RNBQKBNR b KQkq f3 0 4";
			fens[5] = "rnbqkbnr/p1p1pp1p/6p1/1p1pP3/3P4/8/PPP2PPP/RNBQKBNR w KQkq d6 0 4";
			fens[4] = "rnbqkbnr/p1pppp1p/6p1/1p2P3/3P4/8/PPP2PPP/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/p1pppp1p/6p1/1p6/3PP3/8/PPP2PPP/RNBQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/p1pppppp/8/1p6/3PP3/8/PPP2PPP/RNBQKBNR b KQkq d3 0 2";
			fens[1] = "rnbqkbnr/p1pppppp/8/1p6/4P3/8/PPPP1PPP/RNBQKBNR w KQkq b6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test37", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test37: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test38() return boolean is
			@noparse
			LOG::LogInfo(message: "test38: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 e7e5 f2f3 d7d5 g2g3 f7f6 b2b3 c7c6 c2c3 c8e6 c3c4 f8d6 b1c3 d5c4 b3b4 c6c5 c3e4 c5b4 d2d4 b4a3 g3g4 c4c3 e4f2 c3c2 g1h3 c2d1q e1d1 e5d4 c1a3 d6a3 f2e4 e6b3 d1d2 d8a5 e4c3 a5c3";
			fens[35] = "rn2k1nr/pp4pp/5p2/8/3p2P1/bbq2P1N/3KP2P/R4B1R w kq - 0 19";
			fens[34] = "rn2k1nr/pp4pp/5p2/q7/3p2P1/bbN2P1N/3KP2P/R4B1R b kq - 5 18";
			fens[33] = "rn2k1nr/pp4pp/5p2/q7/3pN1P1/bb3P1N/3KP2P/R4B1R w kq - 4 18";
			fens[32] = "rn1qk1nr/pp4pp/5p2/8/3pN1P1/bb3P1N/3KP2P/R4B1R b kq - 3 17";
			fens[31] = "rn1qk1nr/pp4pp/5p2/8/3pN1P1/bb3P1N/4P2P/R2K1B1R w kq - 2 17";
			fens[30] = "rn1qk1nr/pp4pp/4bp2/8/3pN1P1/b4P1N/4P2P/R2K1B1R b kq - 1 16";
			fens[29] = "rn1qk1nr/pp4pp/4bp2/8/3p2P1/b4P1N/4PN1P/R2K1B1R w kq - 0 16";
			fens[28] = "rn1qk1nr/pp4pp/3bbp2/8/3p2P1/B4P1N/4PN1P/R2K1B1R b kq - 0 15";
			fens[27] = "rn1qk1nr/pp4pp/3bbp2/8/3p2P1/p4P1N/4PN1P/R1BK1B1R w kq - 0 15";
			fens[26] = "rn1qk1nr/pp4pp/3bbp2/4p3/3P2P1/p4P1N/4PN1P/R1BK1B1R b kq - 0 14";
			fens[25] = "rn1qk1nr/pp4pp/3bbp2/4p3/3P2P1/p4P1N/4PN1P/R1BqKB1R w KQkq - 0 14";
			fens[24] = "rn1qk1nr/pp4pp/3bbp2/4p3/3P2P1/p4P1N/2p1PN1P/R1BQKB1R b KQkq - 1 13";
			fens[23] = "rn1qk1nr/pp4pp/3bbp2/4p3/3P2P1/p4P2/2p1PN1P/R1BQKBNR w KQkq - 0 13";
			fens[22] = "rn1qk1nr/pp4pp/3bbp2/4p3/3P2P1/p1p2P2/4PN1P/R1BQKBNR b KQkq - 1 12";
			fens[21] = "rn1qk1nr/pp4pp/3bbp2/4p3/3PN1P1/p1p2P2/4P2P/R1BQKBNR w KQkq - 0 12";
			fens[20] = "rn1qk1nr/pp4pp/3bbp2/4p3/2pPN1P1/p4P2/4P2P/R1BQKBNR b KQkq - 0 11";
			fens[19] = "rn1qk1nr/pp4pp/3bbp2/4p3/2pPN3/p4PP1/4P2P/R1BQKBNR w KQkq - 0 11";
			fens[18] = "rn1qk1nr/pp4pp/3bbp2/4p3/1ppPN3/P4PP1/4P2P/R1BQKBNR b KQkq d3 0 10";
			fens[17] = "rn1qk1nr/pp4pp/3bbp2/4p3/1pp1N3/P4PP1/3PP2P/R1BQKBNR w KQkq - 0 10";
			fens[16] = "rn1qk1nr/pp4pp/3bbp2/2p1p3/1Pp1N3/P4PP1/3PP2P/R1BQKBNR b KQkq - 1 9";
			fens[15] = "rn1qk1nr/pp4pp/3bbp2/2p1p3/1Pp5/P1N2PP1/3PP2P/R1BQKBNR w KQkq - 0 9";
			fens[14] = "rn1qk1nr/pp4pp/2pbbp2/4p3/1Pp5/P1N2PP1/3PP2P/R1BQKBNR b KQkq - 0 8";
			fens[13] = "rn1qk1nr/pp4pp/2pbbp2/4p3/2p5/PPN2PP1/3PP2P/R1BQKBNR w KQkq - 0 8";
			fens[12] = "rn1qk1nr/pp4pp/2pbbp2/3pp3/2P5/PPN2PP1/3PP2P/R1BQKBNR b KQkq - 2 7";
			fens[11] = "rn1qk1nr/pp4pp/2pbbp2/3pp3/2P5/PP3PP1/3PP2P/RNBQKBNR w KQkq - 1 7";
			fens[10] = "rn1qkbnr/pp4pp/2p1bp2/3pp3/2P5/PP3PP1/3PP2P/RNBQKBNR b KQkq - 0 6";
			fens[9] = "rn1qkbnr/pp4pp/2p1bp2/3pp3/8/PPP2PP1/3PP2P/RNBQKBNR w KQkq - 1 6";
			fens[8] = "rnbqkbnr/pp4pp/2p2p2/3pp3/8/PPP2PP1/3PP2P/RNBQKBNR b KQkq - 0 5";
			fens[7] = "rnbqkbnr/pp4pp/2p2p2/3pp3/8/PP3PP1/2PPP2P/RNBQKBNR w KQkq - 0 5";
			fens[6] = "rnbqkbnr/ppp3pp/5p2/3pp3/8/PP3PP1/2PPP2P/RNBQKBNR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/ppp3pp/5p2/3pp3/8/P4PP1/1PPPP2P/RNBQKBNR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3pp3/8/P4PP1/1PPPP2P/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/8/P4P2/1PPPP1PP/RNBQKBNR w KQkq d6 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/8/P4P2/1PPPP1PP/RNBQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/P7/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test38", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test38: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test39() return boolean is
			@noparse
			LOG::LogInfo(message: "test39: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 e7e5 a1a2 d7d5";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/8/P7/RPPPPPPP/1NBQKBNR w Kkq d6 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/8/P7/RPPPPPPP/1NBQKBNR b Kkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/P7/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test39", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test39: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test4() return boolean is
			@noparse
			LOG::LogInfo(message: "test4: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 h7h5";
			fens[1] = "rnbqkbnr/ppppppp1/8/7p/4P3/8/PPPP1PPP/RNBQKBNR w KQkq h6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test4", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test4: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test40() return boolean is
			@noparse
			LOG::LogInfo(message: "test40: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b2b4 e7e5 f2f3 d7d5 h2h3 f7f5 d2d3 e5e4 c2c3 e4d3 c1e3 d3e2 g2g3 e2d1q e1d1";
			fens[14] = "rnbqkbnr/ppp3pp/8/3p1p2/1P6/2P1BPPP/P7/RN1K1BNR b kq - 0 8";
			fens[13] = "rnbqkbnr/ppp3pp/8/3p1p2/1P6/2P1BPPP/P7/RN1qKBNR w KQkq - 0 8";
			fens[12] = "rnbqkbnr/ppp3pp/8/3p1p2/1P6/2P1BPPP/P3p3/RN1QKBNR b KQkq - 0 7";
			fens[11] = "rnbqkbnr/ppp3pp/8/3p1p2/1P6/2P1BP1P/P3p1P1/RN1QKBNR w KQkq - 0 7";
			fens[10] = "rnbqkbnr/ppp3pp/8/3p1p2/1P6/2PpBP1P/P3P1P1/RN1QKBNR b KQkq - 1 6";
			fens[9] = "rnbqkbnr/ppp3pp/8/3p1p2/1P6/2Pp1P1P/P3P1P1/RNBQKBNR w KQkq - 0 6";
			fens[8] = "rnbqkbnr/ppp3pp/8/3p1p2/1P2p3/2PP1P1P/P3P1P1/RNBQKBNR b KQkq - 0 5";
			fens[7] = "rnbqkbnr/ppp3pp/8/3p1p2/1P2p3/3P1P1P/P1P1P1P1/RNBQKBNR w KQkq - 0 5";
			fens[6] = "rnbqkbnr/ppp3pp/8/3ppp2/1P6/3P1P1P/P1P1P1P1/RNBQKBNR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/ppp3pp/8/3ppp2/1P6/5P1P/P1PPP1P1/RNBQKBNR w KQkq f6 0 4";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3pp3/1P6/5P1P/P1PPP1P1/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/1P6/5P2/P1PPP1PP/RNBQKBNR w KQkq d6 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/1P6/5P2/P1PPP1PP/RNBQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/1P6/8/P1PPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/1P6/8/P1PPPPPP/RNBQKBNR b KQkq b3 0 1";
			
			result = ::test_do_move(name: "test40", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test40: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test41() return boolean is
			@noparse
			LOG::LogInfo(message: "test41: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e3 e7e5 e1e2 d7d5";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/8/4P3/PPPPKPPP/RNBQ1BNR w kq d6 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/8/4P3/PPPPKPPP/RNBQ1BNR b kq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/4P3/PPPP1PPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/4P3/PPPP1PPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test41", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test41: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test42() return boolean is
			@noparse
			LOG::LogInfo(message: "test42: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkb1r/ppp1pppp/5n2/3p4/3P1B2/5N2/PPP1PPPP/RN1QKB1R b KQkq - 0 1";
			move_text = "g7g5 f4g5";
			fens[1] = "rnbqkb1r/ppp1pp1p/5n2/3p2B1/3P4/5N2/PPP1PPPP/RN1QKB1R b KQkq - 0 2";
			fens[0] = "rnbqkb1r/ppp1pp1p/5n2/3p2p1/3P1B2/5N2/PPP1PPPP/RN1QKB1R w KQkq g6 0 2";
			
			result = ::test_do_move(name: "test42", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test42: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test43() return boolean is
			@noparse
			LOG::LogInfo(message: "test43: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkb1r/ppp1pppp/5n2/3p4/3P1B2/5N2/PPP1PPPP/RN1QKB1R b KQkq - 0 1";
			move_text = "e7e6 d1c1 e6e5 g2g4 e5f4 e1d2 d8e7 f3e5 e7e5 d2e1 e5d4 c2c3 f4f3 c1d2 d4d2 e1d2 f3e2 b2b4 f6e4 d2c1 e2e1q c1b2 e1c3 b1c3 e4c3 f1h3 d5d4 a1g1 d4d3 b2c3 d3d2 b4b5 d2d1q g1d1 b8c6 c3d3 c6b4 d3e3 b4a2 d1d3 a2c1 d3d8 e8d8 e3e4 b7b6 e4e3 c7c6 h1g1 c6b5 g1g2 b5b4 g4g5 b4b3 g2g1 b3b2 g1e1 b2b1q e3f4 b1b4 f4f3 b4e1 f3f4 e1c3 h3f1 c1d3 f4g3 d3e5 g3h4 c3c4 h4h5 c4g4";
			fens[70] = "r1bk1b1r/p4ppp/1p6/4n1PK/6q1/8/5P1P/5B2 w - - 10 37";
			fens[69] = "r1bk1b1r/p4ppp/1p6/4n1PK/2q5/8/5P1P/5B2 b - - 9 36";
			fens[68] = "r1bk1b1r/p4ppp/1p6/4n1P1/2q4K/8/5P1P/5B2 w - - 8 36";
			fens[67] = "r1bk1b1r/p4ppp/1p6/4n1P1/7K/2q5/5P1P/5B2 b - - 7 35";
			fens[66] = "r1bk1b1r/p4ppp/1p6/4n1P1/8/2q3K1/5P1P/5B2 w - - 6 35";
			fens[65] = "r1bk1b1r/p4ppp/1p6/6P1/8/2qn2K1/5P1P/5B2 b - - 5 34";
			fens[64] = "r1bk1b1r/p4ppp/1p6/6P1/5K2/2qn4/5P1P/5B2 w - - 4 34";
			fens[63] = "r1bk1b1r/p4ppp/1p6/6P1/5K2/2q5/5P1P/2n2B2 b - - 3 33";
			fens[62] = "r1bk1b1r/p4ppp/1p6/6P1/5K2/2q4B/5P1P/2n5 w - - 2 33";
			fens[61] = "r1bk1b1r/p4ppp/1p6/6P1/5K2/7B/5P1P/2n1q3 b - - 1 32";
			fens[60] = "r1bk1b1r/p4ppp/1p6/6P1/8/5K1B/5P1P/2n1q3 w - - 0 32";
			fens[59] = "r1bk1b1r/p4ppp/1p6/6P1/1q6/5K1B/5P1P/2n1R3 b - - 3 31";
			fens[58] = "r1bk1b1r/p4ppp/1p6/6P1/1q3K2/7B/5P1P/2n1R3 w - - 2 31";
			fens[57] = "r1bk1b1r/p4ppp/1p6/6P1/5K2/7B/5P1P/1qn1R3 b - - 1 30";
			fens[56] = "r1bk1b1r/p4ppp/1p6/6P1/8/4K2B/5P1P/1qn1R3 w - - 0 30";
			fens[55] = "r1bk1b1r/p4ppp/1p6/6P1/8/4K2B/1p3P1P/2n1R3 b - - 1 29";
			fens[54] = "r1bk1b1r/p4ppp/1p6/6P1/8/4K2B/1p3P1P/2n3R1 w - - 0 29";
			fens[53] = "r1bk1b1r/p4ppp/1p6/6P1/8/1p2K2B/5P1P/2n3R1 b - - 1 28";
			fens[52] = "r1bk1b1r/p4ppp/1p6/6P1/8/1p2K2B/5PRP/2n5 w - - 0 28";
			fens[51] = "r1bk1b1r/p4ppp/1p6/6P1/1p6/4K2B/5PRP/2n5 b - - 0 27";
			fens[50] = "r1bk1b1r/p4ppp/1p6/8/1p4P1/4K2B/5PRP/2n5 w - - 0 27";
			fens[49] = "r1bk1b1r/p4ppp/1p6/1p6/6P1/4K2B/5PRP/2n5 b - - 1 26";
			fens[48] = "r1bk1b1r/p4ppp/1p6/1p6/6P1/4K2B/5P1P/2n3R1 w - - 0 26";
			fens[47] = "r1bk1b1r/p4ppp/1pp5/1P6/6P1/4K2B/5P1P/2n3R1 b - - 1 25";
			fens[46] = "r1bk1b1r/p4ppp/1pp5/1P6/6P1/4K2B/5P1P/2n4R w - - 0 25";
			fens[45] = "r1bk1b1r/p1p2ppp/1p6/1P6/6P1/4K2B/5P1P/2n4R b - - 1 24";
			fens[44] = "r1bk1b1r/p1p2ppp/1p6/1P6/4K1P1/7B/5P1P/2n4R w - - 0 24";
			fens[43] = "r1bk1b1r/ppp2ppp/8/1P6/4K1P1/7B/5P1P/2n4R b - - 1 23";
			fens[42] = "r1bk1b1r/ppp2ppp/8/1P6/6P1/4K2B/5P1P/2n4R w - - 0 23";
			fens[41] = "r1bRkb1r/ppp2ppp/8/1P6/6P1/4K2B/5P1P/2n4R b kq - 3 22";
			fens[40] = "r1b1kb1r/ppp2ppp/8/1P6/6P1/3RK2B/5P1P/2n4R w kq - 2 22";
			fens[39] = "r1b1kb1r/ppp2ppp/8/1P6/6P1/3RK2B/n4P1P/7R b kq - 1 21";
			fens[38] = "r1b1kb1r/ppp2ppp/8/1P6/6P1/4K2B/n4P1P/3R3R w kq - 0 21";
			fens[37] = "r1b1kb1r/ppp2ppp/8/1P6/1n4P1/4K2B/P4P1P/3R3R b kq - 4 20";
			fens[36] = "r1b1kb1r/ppp2ppp/8/1P6/1n4P1/3K3B/P4P1P/3R3R w kq - 3 20";
			fens[35] = "r1b1kb1r/ppp2ppp/2n5/1P6/6P1/3K3B/P4P1P/3R3R b kq - 2 19";
			fens[34] = "r1b1kb1r/ppp2ppp/2n5/1P6/6P1/2K4B/P4P1P/3R3R w kq - 1 19";
			fens[33] = "rnb1kb1r/ppp2ppp/8/1P6/6P1/2K4B/P4P1P/3R3R b kq - 0 18";
			fens[32] = "rnb1kb1r/ppp2ppp/8/1P6/6P1/2K4B/P4P1P/3q2RR w kq - 0 18";
			fens[31] = "rnb1kb1r/ppp2ppp/8/1P6/6P1/2K4B/P2p1P1P/6RR b kq - 0 17";
			fens[30] = "rnb1kb1r/ppp2ppp/8/8/1P4P1/2K4B/P2p1P1P/6RR w kq - 0 17";
			fens[29] = "rnb1kb1r/ppp2ppp/8/8/1P4P1/2Kp3B/P4P1P/6RR b kq - 0 16";
			fens[28] = "rnb1kb1r/ppp2ppp/8/8/1P4P1/2np3B/PK3P1P/6RR w kq - 0 16";
			fens[27] = "rnb1kb1r/ppp2ppp/8/8/1P1p2P1/2n4B/PK3P1P/6RR b kq - 1 15";
			fens[26] = "rnb1kb1r/ppp2ppp/8/8/1P1p2P1/2n4B/PK3P1P/R6R w kq - 0 15";
			fens[25] = "rnb1kb1r/ppp2ppp/8/3p4/1P4P1/2n4B/PK3P1P/R6R b kq - 1 14";
			fens[24] = "rnb1kb1r/ppp2ppp/8/3p4/1P4P1/2n5/PK3P1P/R4B1R w kq - 0 14";
			fens[23] = "rnb1kb1r/ppp2ppp/8/3p4/1P2n1P1/2N5/PK3P1P/R4B1R b kq - 0 13";
			fens[22] = "rnb1kb1r/ppp2ppp/8/3p4/1P2n1P1/2q5/PK3P1P/RN3B1R w kq - 0 13";
			fens[21] = "rnb1kb1r/ppp2ppp/8/3p4/1P2n1P1/2P5/PK3P1P/RN2qB1R b kq - 1 12";
			fens[20] = "rnb1kb1r/ppp2ppp/8/3p4/1P2n1P1/2P5/P4P1P/RNK1qB1R w kq - 0 12";
			fens[19] = "rnb1kb1r/ppp2ppp/8/3p4/1P2n1P1/2P5/P3pP1P/RNK2B1R b kq - 2 11";
			fens[18] = "rnb1kb1r/ppp2ppp/8/3p4/1P2n1P1/2P5/P2KpP1P/RN3B1R w kq - 1 11";
			fens[17] = "rnb1kb1r/ppp2ppp/5n2/3p4/1P4P1/2P5/P2KpP1P/RN3B1R b kq b3 0 10";
			fens[16] = "rnb1kb1r/ppp2ppp/5n2/3p4/6P1/2P5/PP1KpP1P/RN3B1R w kq - 0 10";
			fens[15] = "rnb1kb1r/ppp2ppp/5n2/3p4/6P1/2P2p2/PP1KPP1P/RN3B1R b kq - 0 9";
			fens[14] = "rnb1kb1r/ppp2ppp/5n2/3p4/6P1/2P2p2/PP1qPP1P/RN2KB1R w kq - 0 9";
			fens[13] = "rnb1kb1r/ppp2ppp/5n2/3p4/3q2P1/2P2p2/PP1QPP1P/RN2KB1R b kq - 1 8";
			fens[12] = "rnb1kb1r/ppp2ppp/5n2/3p4/3q2P1/2P2p2/PP2PP1P/RNQ1KB1R w kq - 0 8";
			fens[11] = "rnb1kb1r/ppp2ppp/5n2/3p4/3q1pP1/2P5/PP2PP1P/RNQ1KB1R b kq - 0 7";
			fens[10] = "rnb1kb1r/ppp2ppp/5n2/3p4/3q1pP1/8/PPP1PP1P/RNQ1KB1R w kq - 0 7";
			fens[9] = "rnb1kb1r/ppp2ppp/5n2/3pq3/3P1pP1/8/PPP1PP1P/RNQ1KB1R b kq - 1 6";
			fens[8] = "rnb1kb1r/ppp2ppp/5n2/3pq3/3P1pP1/8/PPPKPP1P/RNQ2B1R w kq - 0 6";
			fens[7] = "rnb1kb1r/ppp1qppp/5n2/3pN3/3P1pP1/8/PPPKPP1P/RNQ2B1R b kq - 3 5";
			fens[6] = "rnb1kb1r/ppp1qppp/5n2/3p4/3P1pP1/5N2/PPPKPP1P/RNQ2B1R w kq - 2 5";
			fens[5] = "rnbqkb1r/ppp2ppp/5n2/3p4/3P1pP1/5N2/PPPKPP1P/RNQ2B1R b kq - 1 4";
			fens[4] = "rnbqkb1r/ppp2ppp/5n2/3p4/3P1pP1/5N2/PPP1PP1P/RNQ1KB1R w KQkq - 0 4";
			fens[3] = "rnbqkb1r/ppp2ppp/5n2/3pp3/3P1BP1/5N2/PPP1PP1P/RNQ1KB1R b KQkq g3 0 3";
			fens[2] = "rnbqkb1r/ppp2ppp/5n2/3pp3/3P1B2/5N2/PPP1PPPP/RNQ1KB1R w KQkq - 0 3";
			fens[1] = "rnbqkb1r/ppp2ppp/4pn2/3p4/3P1B2/5N2/PPP1PPPP/RNQ1KB1R b KQkq - 1 2";
			fens[0] = "rnbqkb1r/ppp2ppp/4pn2/3p4/3P1B2/5N2/PPP1PPPP/RN1QKB1R w KQkq - 0 2";
			
			result = ::test_do_move(name: "test43", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test43: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test44() return boolean is
			@noparse
			LOG::LogInfo(message: "test44: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pp2pppp/2p5/3P4/3P4/8/PPP2PPP/RNBQKBNR b KQkq - 0 1";
			move_text = "e7e5 d5d6 d8d6 b1d2 d6d4 g1h3 e5e4 d2b3 d4d1 e1d1 e4e3 f1a6 e3f2 h3g5 f2f1q a6f1 c8g4 g5f3 g4f3 f1e2 f3g2 e2g4 g2h1 d1e1 c6c5 a1b1 c5c4 b3a5 c4c3 g4c8 c3b2 c1g5 f7f6 e1f1 f6g5 b1c1 b2c1q f1e2 c1e3 e2e3 f8c5 e3e2 g5g4 c8d7 e8d7 h2h3 g4h3 a2a4 h3h2 c2c3 h1g2 e2e1 h2h1q e1d2 h1h6 d2c2 g2e4 c2b2 h6d2 b2a1 d2c1 a1a2 c1a3";
			fens[62] = "rn4nr/pp1k2pp/8/N1b5/P3b3/q1P5/K7/8 w - - 10 33";
			fens[61] = "rn4nr/pp1k2pp/8/N1b5/P3b3/2P5/K7/2q5 b - - 9 32";
			fens[60] = "rn4nr/pp1k2pp/8/N1b5/P3b3/2P5/8/K1q5 w - - 8 32";
			fens[59] = "rn4nr/pp1k2pp/8/N1b5/P3b3/2P5/3q4/K7 b - - 7 31";
			fens[58] = "rn4nr/pp1k2pp/8/N1b5/P3b3/2P5/1K1q4/8 w - - 6 31";
			fens[57] = "rn4nr/pp1k2pp/7q/N1b5/P3b3/2P5/1K6/8 b - - 5 30";
			fens[56] = "rn4nr/pp1k2pp/7q/N1b5/P3b3/2P5/2K5/8 w - - 4 30";
			fens[55] = "rn4nr/pp1k2pp/7q/N1b5/P7/2P5/2K3b1/8 b - - 3 29";
			fens[54] = "rn4nr/pp1k2pp/7q/N1b5/P7/2P5/3K2b1/8 w - - 2 29";
			fens[53] = "rn4nr/pp1k2pp/8/N1b5/P7/2P5/3K2b1/7q b - - 1 28";
			fens[52] = "rn4nr/pp1k2pp/8/N1b5/P7/2P5/6b1/4K2q w - - 0 28";
			fens[51] = "rn4nr/pp1k2pp/8/N1b5/P7/2P5/6bp/4K3 b - - 2 27";
			fens[50] = "rn4nr/pp1k2pp/8/N1b5/P7/2P5/4K1bp/8 w - - 1 27";
			fens[49] = "rn4nr/pp1k2pp/8/N1b5/P7/2P5/4K2p/7b b - - 0 26";
			fens[48] = "rn4nr/pp1k2pp/8/N1b5/P7/8/2P1K2p/7b w - - 0 26";
			fens[47] = "rn4nr/pp1k2pp/8/N1b5/P7/7p/2P1K3/7b b - a3 0 25";
			fens[46] = "rn4nr/pp1k2pp/8/N1b5/8/7p/P1P1K3/7b w - - 0 25";
			fens[45] = "rn4nr/pp1k2pp/8/N1b5/6p1/7P/P1P1K3/7b b - - 0 24";
			fens[44] = "rn4nr/pp1k2pp/8/N1b5/6p1/8/P1P1K2P/7b w - - 0 24";
			fens[43] = "rn2k1nr/pp1B2pp/8/N1b5/6p1/8/P1P1K2P/7b b kq - 1 23";
			fens[42] = "rnB1k1nr/pp4pp/8/N1b5/6p1/8/P1P1K2P/7b w kq - 0 23";
			fens[41] = "rnB1k1nr/pp4pp/8/N1b3p1/8/8/P1P1K2P/7b b kq - 2 22";
			fens[40] = "rnB1k1nr/pp4pp/8/N1b3p1/8/4K3/P1P4P/7b w kq - 1 22";
			fens[39] = "rnB1kbnr/pp4pp/8/N5p1/8/4K3/P1P4P/7b b kq - 0 21";
			fens[38] = "rnB1kbnr/pp4pp/8/N5p1/8/4q3/P1P1K2P/7b w kq - 2 21";
			fens[37] = "rnB1kbnr/pp4pp/8/N5p1/8/8/P1P1K2P/2q4b b kq - 1 20";
			fens[36] = "rnB1kbnr/pp4pp/8/N5p1/8/8/P1P4P/2q2K1b w kq - 0 20";
			fens[35] = "rnB1kbnr/pp4pp/8/N5p1/8/8/PpP4P/2R2K1b b kq - 1 19";
			fens[34] = "rnB1kbnr/pp4pp/8/N5p1/8/8/PpP4P/1R3K1b w kq - 0 19";
			fens[33] = "rnB1kbnr/pp4pp/5p2/N5B1/8/8/PpP4P/1R3K1b b kq - 1 18";
			fens[32] = "rnB1kbnr/pp4pp/5p2/N5B1/8/8/PpP4P/1R2K2b w kq - 0 18";
			fens[31] = "rnB1kbnr/pp3ppp/8/N5B1/8/8/PpP4P/1R2K2b b kq - 1 17";
			fens[30] = "rnB1kbnr/pp3ppp/8/N7/8/8/PpP4P/1RB1K2b w kq - 0 17";
			fens[29] = "rnB1kbnr/pp3ppp/8/N7/8/2p5/PPP4P/1RB1K2b b kq - 1 16";
			fens[28] = "rn2kbnr/pp3ppp/8/N7/6B1/2p5/PPP4P/1RB1K2b w kq - 0 16";
			fens[27] = "rn2kbnr/pp3ppp/8/N7/2p3B1/8/PPP4P/1RB1K2b b kq - 1 15";
			fens[26] = "rn2kbnr/pp3ppp/8/8/2p3B1/1N6/PPP4P/1RB1K2b w kq - 0 15";
			fens[25] = "rn2kbnr/pp3ppp/8/2p5/6B1/1N6/PPP4P/1RB1K2b b kq - 1 14";
			fens[24] = "rn2kbnr/pp3ppp/8/2p5/6B1/1N6/PPP4P/R1B1K2b w kq - 0 14";
			fens[23] = "rn2kbnr/pp3ppp/2p5/8/6B1/1N6/PPP4P/R1B1K2b b kq - 1 13";
			fens[22] = "rn2kbnr/pp3ppp/2p5/8/6B1/1N6/PPP4P/R1BK3b w kq - 0 13";
			fens[21] = "rn2kbnr/pp3ppp/2p5/8/6B1/1N6/PPP3bP/R1BK3R b kq - 1 12";
			fens[20] = "rn2kbnr/pp3ppp/2p5/8/8/1N6/PPP1B1bP/R1BK3R w kq - 0 12";
			fens[19] = "rn2kbnr/pp3ppp/2p5/8/8/1N3b2/PPP1B1PP/R1BK3R b kq - 1 11";
			fens[18] = "rn2kbnr/pp3ppp/2p5/8/8/1N3b2/PPP3PP/R1BK1B1R w kq - 0 11";
			fens[17] = "rn2kbnr/pp3ppp/2p5/8/6b1/1N3N2/PPP3PP/R1BK1B1R b kq - 2 10";
			fens[16] = "rn2kbnr/pp3ppp/2p5/6N1/6b1/1N6/PPP3PP/R1BK1B1R w kq - 1 10";
			fens[15] = "rnb1kbnr/pp3ppp/2p5/6N1/8/1N6/PPP3PP/R1BK1B1R b kq - 0 9";
			fens[14] = "rnb1kbnr/pp3ppp/B1p5/6N1/8/1N6/PPP3PP/R1BK1q1R w kq - 0 9";
			fens[13] = "rnb1kbnr/pp3ppp/B1p5/6N1/8/1N6/PPP2pPP/R1BK3R b kq - 1 8";
			fens[12] = "rnb1kbnr/pp3ppp/B1p5/8/8/1N5N/PPP2pPP/R1BK3R w kq - 0 8";
			fens[11] = "rnb1kbnr/pp3ppp/B1p5/8/8/1N2p2N/PPP2PPP/R1BK3R b kq - 1 7";
			fens[10] = "rnb1kbnr/pp3ppp/2p5/8/8/1N2p2N/PPP2PPP/R1BK1B1R w kq - 0 7";
			fens[9] = "rnb1kbnr/pp3ppp/2p5/8/4p3/1N5N/PPP2PPP/R1BK1B1R b kq - 0 6";
			fens[8] = "rnb1kbnr/pp3ppp/2p5/8/4p3/1N5N/PPP2PPP/R1BqKB1R w KQkq - 0 6";
			fens[7] = "rnb1kbnr/pp3ppp/2p5/8/3qp3/1N5N/PPP2PPP/R1BQKB1R b KQkq - 1 5";
			fens[6] = "rnb1kbnr/pp3ppp/2p5/8/3qp3/7N/PPPN1PPP/R1BQKB1R w KQkq - 0 5";
			fens[5] = "rnb1kbnr/pp3ppp/2p5/4p3/3q4/7N/PPPN1PPP/R1BQKB1R b KQkq - 1 4";
			fens[4] = "rnb1kbnr/pp3ppp/2p5/4p3/3q4/8/PPPN1PPP/R1BQKBNR w KQkq - 0 4";
			fens[3] = "rnb1kbnr/pp3ppp/2pq4/4p3/3P4/8/PPPN1PPP/R1BQKBNR b KQkq - 1 3";
			fens[2] = "rnb1kbnr/pp3ppp/2pq4/4p3/3P4/8/PPP2PPP/RNBQKBNR w KQkq - 0 3";
			fens[1] = "rnbqkbnr/pp3ppp/2pP4/4p3/3P4/8/PPP2PPP/RNBQKBNR b KQkq - 0 2";
			fens[0] = "rnbqkbnr/pp3ppp/2p5/3Pp3/3P4/8/PPP2PPP/RNBQKBNR w KQkq e6 0 2";
			
			result = ::test_do_move(name: "test44", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test44: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test45() return boolean is
			@noparse
			LOG::LogInfo(message: "test45: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 a7a5 d2d4 b7b5 c2c3 d7d5";
			fens[5] = "rnbqkbnr/2p1pppp/8/pp1p4/3PP3/2P5/PP3PPP/RNBQKBNR w KQkq d6 0 4";
			fens[4] = "rnbqkbnr/2pppppp/8/pp6/3PP3/2P5/PP3PPP/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/2pppppp/8/pp6/3PP3/8/PPP2PPP/RNBQKBNR w KQkq b6 0 3";
			fens[2] = "rnbqkbnr/1ppppppp/8/p7/3PP3/8/PPP2PPP/RNBQKBNR b KQkq d3 0 2";
			fens[1] = "rnbqkbnr/1ppppppp/8/p7/4P3/8/PPPP1PPP/RNBQKBNR w KQkq a6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test45", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test45: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test46() return boolean is
			@noparse
			LOG::LogInfo(message: "test46: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 e7e5 g1h3 d7d5 g2g3";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3pp3/4P3/6PN/PPPP1P1P/RNBQKB1R b KQkq - 0 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/4P3/7N/PPPP1PPP/RNBQKB1R w KQkq d6 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/4P3/7N/PPPP1PPP/RNBQKB1R b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test46", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test46: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test47() return boolean is
			@noparse
			LOG::LogInfo(message: "test47: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 d7d5 b2b3 e7e5 b3b4";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3pp3/1P6/P7/2PPPPPP/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/8/PP6/2PPPPPP/RNBQKBNR w KQkq e6 0 3";
			fens[2] = "rnbqkbnr/ppp1pppp/8/3p4/8/PP6/2PPPPPP/RNBQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/ppp1pppp/8/3p4/8/P7/1PPPPPPP/RNBQKBNR w KQkq d6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test47", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test47: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test48() return boolean is
			@noparse
			LOG::LogInfo(message: "test48: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 g7g6 d2d4 c7c6 d1g4 f8h6 g4g6 a7a6 c1g5 d8c7 g6g8 h6f8 g8f7 e8f7 e4e5 f7e8 e5e6 h7h5 e6d7 c8d7 d4d5 d7f5 d5c6 h8g8 c6b7 c7a5 e1d1 a5e1 d1e1 e8d7 b7a8q g8g7 a8b8 a6a5 f1a6 d7e6 b8b6 e6d5 b6b5 d5d6 g1f3 e7e6 e1f1 g7g8 b1c3 f5e4 a1d1 e4d5 b5b6 d6d7 c3d5 g8g6 b6c7 d7e8 c7c8 e8f7 d5b6 g6h6 d1d7 f7g8 g5h6 a5a4 c8e8 h5h4 e8f7 g8h8 f7h7";
			fens[66] = "5b1k/3R3Q/BN2p2B/8/p6p/5N2/PPP2PPP/5K1R b - - 3 34";
			fens[65] = "5b1k/3R1Q2/BN2p2B/8/p6p/5N2/PPP2PPP/5K1R w - - 2 34";
			fens[64] = "5bk1/3R1Q2/BN2p2B/8/p6p/5N2/PPP2PPP/5K1R b - - 1 33";
			fens[63] = "4Qbk1/3R4/BN2p2B/8/p6p/5N2/PPP2PPP/5K1R w - - 0 33";
			fens[62] = "4Qbk1/3R4/BN2p2B/7p/p7/5N2/PPP2PPP/5K1R b - - 1 32";
			fens[61] = "2Q2bk1/3R4/BN2p2B/7p/p7/5N2/PPP2PPP/5K1R w - - 0 32";
			fens[60] = "2Q2bk1/3R4/BN2p2B/p6p/8/5N2/PPP2PPP/5K1R b - - 0 31";
			fens[59] = "2Q2bk1/3R4/BN2p2r/p5Bp/8/5N2/PPP2PPP/5K1R w - - 9 31";
			fens[58] = "2Q2b2/3R1k2/BN2p2r/p5Bp/8/5N2/PPP2PPP/5K1R b - - 8 30";
			fens[57] = "2Q2b2/5k2/BN2p2r/p5Bp/8/5N2/PPP2PPP/3R1K1R w - - 7 30";
			fens[56] = "2Q2b2/5k2/BN2p1r1/p5Bp/8/5N2/PPP2PPP/3R1K1R b - - 6 29";
			fens[55] = "2Q2b2/5k2/B3p1r1/p2N2Bp/8/5N2/PPP2PPP/3R1K1R w - - 5 29";
			fens[54] = "2Q1kb2/8/B3p1r1/p2N2Bp/8/5N2/PPP2PPP/3R1K1R b - - 4 28";
			fens[53] = "4kb2/2Q5/B3p1r1/p2N2Bp/8/5N2/PPP2PPP/3R1K1R w - - 3 28";
			fens[52] = "5b2/2Qk4/B3p1r1/p2N2Bp/8/5N2/PPP2PPP/3R1K1R b - - 2 27";
			fens[51] = "5b2/3k4/BQ2p1r1/p2N2Bp/8/5N2/PPP2PPP/3R1K1R w - - 1 27";
			fens[50] = "5br1/3k4/BQ2p3/p2N2Bp/8/5N2/PPP2PPP/3R1K1R b - - 0 26";
			fens[49] = "5br1/3k4/BQ2p3/p2b2Bp/8/2N2N2/PPP2PPP/3R1K1R w - - 8 26";
			fens[48] = "5br1/8/BQ1kp3/p2b2Bp/8/2N2N2/PPP2PPP/3R1K1R b - - 7 25";
			fens[47] = "5br1/8/B2kp3/pQ1b2Bp/8/2N2N2/PPP2PPP/3R1K1R w - - 6 25";
			fens[46] = "5br1/8/B2kp3/pQ4Bp/4b3/2N2N2/PPP2PPP/3R1K1R b - - 5 24";
			fens[45] = "5br1/8/B2kp3/pQ4Bp/4b3/2N2N2/PPP2PPP/R4K1R w - - 4 24";
			fens[44] = "5br1/8/B2kp3/pQ3bBp/8/2N2N2/PPP2PPP/R4K1R b - - 3 23";
			fens[43] = "5br1/8/B2kp3/pQ3bBp/8/5N2/PPP2PPP/RN3K1R w - - 2 23";
			fens[42] = "5b2/6r1/B2kp3/pQ3bBp/8/5N2/PPP2PPP/RN3K1R b - - 1 22";
			fens[41] = "5b2/6r1/B2kp3/pQ3bBp/8/5N2/PPP2PPP/RN2K2R w - - 0 22";
			fens[40] = "5b2/4p1r1/B2k4/pQ3bBp/8/5N2/PPP2PPP/RN2K2R b - - 7 21";
			fens[39] = "5b2/4p1r1/B2k4/pQ3bBp/8/8/PPP2PPP/RN2K1NR w - - 6 21";
			fens[38] = "5b2/4p1r1/B7/pQ1k1bBp/8/8/PPP2PPP/RN2K1NR b - - 5 20";
			fens[37] = "5b2/4p1r1/BQ6/p2k1bBp/8/8/PPP2PPP/RN2K1NR w - - 4 20";
			fens[36] = "5b2/4p1r1/BQ2k3/p4bBp/8/8/PPP2PPP/RN2K1NR b - - 3 19";
			fens[35] = "1Q3b2/4p1r1/B3k3/p4bBp/8/8/PPP2PPP/RN2K1NR w - - 2 19";
			fens[34] = "1Q3b2/3kp1r1/B7/p4bBp/8/8/PPP2PPP/RN2K1NR b - - 1 18";
			fens[33] = "1Q3b2/3kp1r1/8/p4bBp/8/8/PPP2PPP/RN2KBNR w - - 0 18";
			fens[32] = "1Q3b2/3kp1r1/p7/5bBp/8/8/PPP2PPP/RN2KBNR b - - 0 17";
			fens[31] = "Qn3b2/3kp1r1/p7/5bBp/8/8/PPP2PPP/RN2KBNR w - - 1 17";
			fens[30] = "Qn3br1/3kp3/p7/5bBp/8/8/PPP2PPP/RN2KBNR b - - 0 16";
			fens[29] = "rn3br1/1P1kp3/p7/5bBp/8/8/PPP2PPP/RN2KBNR w - - 1 16";
			fens[28] = "rn2kbr1/1P2p3/p7/5bBp/8/8/PPP2PPP/RN2KBNR b - - 0 15";
			fens[27] = "rn2kbr1/1P2p3/p7/5bBp/8/8/PPP2PPP/RN1KqBNR w - - 3 15";
			fens[26] = "rn2kbr1/1P2p3/p7/q4bBp/8/8/PPP2PPP/RN1K1BNR b - - 2 14";
			fens[25] = "rn2kbr1/1P2p3/p7/q4bBp/8/8/PPP2PPP/RN2KBNR w KQ - 1 14";
			fens[24] = "rn2kbr1/1Pq1p3/p7/5bBp/8/8/PPP2PPP/RN2KBNR b KQ - 0 13";
			fens[23] = "rn2kbr1/1pq1p3/p1P5/5bBp/8/8/PPP2PPP/RN2KBNR w KQ - 1 13";
			fens[22] = "rn2kb1r/1pq1p3/p1P5/5bBp/8/8/PPP2PPP/RN2KBNR b KQ - 0 12";
			fens[21] = "rn2kb1r/1pq1p3/p1p5/3P1bBp/8/8/PPP2PPP/RN2KBNR w KQ - 1 12";
			fens[20] = "rn2kb1r/1pqbp3/p1p5/3P2Bp/8/8/PPP2PPP/RN2KBNR b KQ - 0 11";
			fens[19] = "rn2kb1r/1pqbp3/p1p5/6Bp/3P4/8/PPP2PPP/RN2KBNR w KQ - 0 11";
			fens[18] = "rnb1kb1r/1pqPp3/p1p5/6Bp/3P4/8/PPP2PPP/RN2KBNR b KQ - 0 10";
			fens[17] = "rnb1kb1r/1pqpp3/p1p1P3/6Bp/3P4/8/PPP2PPP/RN2KBNR w KQ h6 0 10";
			fens[16] = "rnb1kb1r/1pqpp2p/p1p1P3/6B1/3P4/8/PPP2PPP/RN2KBNR b KQ - 0 9";
			fens[15] = "rnb1kb1r/1pqpp2p/p1p5/4P1B1/3P4/8/PPP2PPP/RN2KBNR w KQ - 1 9";
			fens[14] = "rnb2b1r/1pqppk1p/p1p5/4P1B1/3P4/8/PPP2PPP/RN2KBNR b KQ - 0 8";
			fens[13] = "rnb2b1r/1pqppk1p/p1p5/6B1/3PP3/8/PPP2PPP/RN2KBNR w KQ - 0 8";
			fens[12] = "rnb1kb1r/1pqppQ1p/p1p5/6B1/3PP3/8/PPP2PPP/RN2KBNR b KQkq - 0 7";
			fens[11] = "rnb1kbQr/1pqppp1p/p1p5/6B1/3PP3/8/PPP2PPP/RN2KBNR w KQkq - 1 7";
			fens[10] = "rnb1k1Qr/1pqppp1p/p1p4b/6B1/3PP3/8/PPP2PPP/RN2KBNR b KQkq - 0 6";
			fens[9] = "rnb1k1nr/1pqppp1p/p1p3Qb/6B1/3PP3/8/PPP2PPP/RN2KBNR w KQkq - 2 6";
			fens[8] = "rnbqk1nr/1p1ppp1p/p1p3Qb/6B1/3PP3/8/PPP2PPP/RN2KBNR b KQkq - 1 5";
			fens[7] = "rnbqk1nr/1p1ppp1p/p1p3Qb/8/3PP3/8/PPP2PPP/RNB1KBNR w KQkq - 0 5";
			fens[6] = "rnbqk1nr/pp1ppp1p/2p3Qb/8/3PP3/8/PPP2PPP/RNB1KBNR b KQkq - 0 4";
			fens[5] = "rnbqk1nr/pp1ppp1p/2p3pb/8/3PP1Q1/8/PPP2PPP/RNB1KBNR w KQkq - 2 4";
			fens[4] = "rnbqkbnr/pp1ppp1p/2p3p1/8/3PP1Q1/8/PPP2PPP/RNB1KBNR b KQkq - 1 3";
			fens[3] = "rnbqkbnr/pp1ppp1p/2p3p1/8/3PP3/8/PPP2PPP/RNBQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/pppppp1p/6p1/8/3PP3/8/PPP2PPP/RNBQKBNR b KQkq d3 0 2";
			fens[1] = "rnbqkbnr/pppppp1p/6p1/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test48", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test48: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test49() return boolean is
			@noparse
			LOG::LogInfo(message: "test49: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "d2d4 d7d5 c2c4 d5c4 d1a4 d8d7 a4c6 d7c6 b2b4 c4c3 e2e3 c3c2 g2g4 c2b1q e1e2 b1c1 g1h3 c1c2 e2e1 c6c3";
			fens[19] = "rnb1kbnr/ppp1pppp/8/8/1P1P2P1/2q1P2N/P1q2P1P/R3KB1R w kq - 4 11";
			fens[18] = "rnb1kbnr/ppp1pppp/2q5/8/1P1P2P1/4P2N/P1q2P1P/R3KB1R b kq - 3 10";
			fens[17] = "rnb1kbnr/ppp1pppp/2q5/8/1P1P2P1/4P2N/P1q1KP1P/R4B1R w kq - 2 10";
			fens[16] = "rnb1kbnr/ppp1pppp/2q5/8/1P1P2P1/4P2N/P3KP1P/R1q2B1R b kq - 1 9";
			fens[15] = "rnb1kbnr/ppp1pppp/2q5/8/1P1P2P1/4P3/P3KP1P/R1q2BNR w kq - 0 9";
			fens[14] = "rnb1kbnr/ppp1pppp/2q5/8/1P1P2P1/4P3/P3KP1P/RqB2BNR b kq - 1 8";
			fens[13] = "rnb1kbnr/ppp1pppp/2q5/8/1P1P2P1/4P3/P4P1P/RqB1KBNR w KQkq - 0 8";
			fens[12] = "rnb1kbnr/ppp1pppp/2q5/8/1P1P2P1/4P3/P1p2P1P/RNB1KBNR b KQkq g3 0 7";
			fens[11] = "rnb1kbnr/ppp1pppp/2q5/8/1P1P4/4P3/P1p2PPP/RNB1KBNR w KQkq - 0 7";
			fens[10] = "rnb1kbnr/ppp1pppp/2q5/8/1P1P4/2p1P3/P4PPP/RNB1KBNR b KQkq - 0 6";
			fens[9] = "rnb1kbnr/ppp1pppp/2q5/8/1P1P4/2p5/P3PPPP/RNB1KBNR w KQkq - 0 6";
			fens[8] = "rnb1kbnr/ppp1pppp/2q5/8/1PpP4/8/P3PPPP/RNB1KBNR b KQkq b3 0 5";
			fens[7] = "rnb1kbnr/ppp1pppp/2q5/8/2pP4/8/PP2PPPP/RNB1KBNR w KQkq - 0 5";
			fens[6] = "rnb1kbnr/pppqpppp/2Q5/8/2pP4/8/PP2PPPP/RNB1KBNR b KQkq - 3 4";
			fens[5] = "rnb1kbnr/pppqpppp/8/8/Q1pP4/8/PP2PPPP/RNB1KBNR w KQkq - 2 4";
			fens[4] = "rnbqkbnr/ppp1pppp/8/8/Q1pP4/8/PP2PPPP/RNB1KBNR b KQkq - 1 3";
			fens[3] = "rnbqkbnr/ppp1pppp/8/8/2pP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/ppp1pppp/8/3p4/2PP4/8/PP2PPPP/RNBQKBNR b KQkq c3 0 2";
			fens[1] = "rnbqkbnr/ppp1pppp/8/3p4/3P4/8/PPP1PPPP/RNBQKBNR w KQkq d6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq d3 0 1";
			
			result = ::test_do_move(name: "test49", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test49: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test5() return boolean is
			@noparse
			LOG::LogInfo(message: "test5: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 e7e5 g1h3 d7d5 f1d3 d5e4 b2b4 e4d3 h1f1 d3c2 f2f3 c2d1q e1d1 e5e4 d2d3 e4f3 d1e1 f3g2 f1g1 c7c6 c1a3 c6c5 g1g2 c5b4 g2d2 b4b3 a3e7 b3b2 d2c2 b2a1q c2c1 a1a2 h3g5 d8e7 g5e6 e7e6 e1f1 a2e2 f1g1 e6g6 g1h1 e2g2";
			fens[41] = "rnb1kbnr/pp3ppp/6q1/8/8/3P4/6qP/1NR4K w kq - 6 22";
			fens[40] = "rnb1kbnr/pp3ppp/6q1/8/8/3P4/4q2P/1NR4K b kq - 5 21";
			fens[39] = "rnb1kbnr/pp3ppp/6q1/8/8/3P4/4q2P/1NR3K1 w kq - 4 21";
			fens[38] = "rnb1kbnr/pp3ppp/4q3/8/8/3P4/4q2P/1NR3K1 b kq - 3 20";
			fens[37] = "rnb1kbnr/pp3ppp/4q3/8/8/3P4/4q2P/1NR2K2 w kq - 2 20";
			fens[36] = "rnb1kbnr/pp3ppp/4q3/8/8/3P4/q6P/1NR2K2 b kq - 1 19";
			fens[35] = "rnb1kbnr/pp3ppp/4q3/8/8/3P4/q6P/1NR1K3 w kq - 0 19";
			fens[34] = "rnb1kbnr/pp2qppp/4N3/8/8/3P4/q6P/1NR1K3 b kq - 1 18";
			fens[33] = "rnb1kbnr/pp2qppp/8/6N1/8/3P4/q6P/1NR1K3 w kq - 0 18";
			fens[32] = "rnbqkbnr/pp2Bppp/8/6N1/8/3P4/q6P/1NR1K3 b kq - 1 17";
			fens[31] = "rnbqkbnr/pp2Bppp/8/8/8/3P3N/q6P/1NR1K3 w kq - 0 17";
			fens[30] = "rnbqkbnr/pp2Bppp/8/8/8/3P3N/P6P/qNR1K3 b kq - 1 16";
			fens[29] = "rnbqkbnr/pp2Bppp/8/8/8/3P3N/P1R4P/qN2K3 w kq - 0 16";
			fens[28] = "rnbqkbnr/pp2Bppp/8/8/8/3P3N/PpR4P/RN2K3 b kq - 1 15";
			fens[27] = "rnbqkbnr/pp2Bppp/8/8/8/3P3N/Pp1R3P/RN2K3 w kq - 0 15";
			fens[26] = "rnbqkbnr/pp2Bppp/8/8/8/1p1P3N/P2R3P/RN2K3 b kq - 1 14";
			fens[25] = "rnbqkbnr/pp3ppp/8/8/8/Bp1P3N/P2R3P/RN2K3 w kq - 0 14";
			fens[24] = "rnbqkbnr/pp3ppp/8/8/1p6/B2P3N/P2R3P/RN2K3 b kq - 1 13";
			fens[23] = "rnbqkbnr/pp3ppp/8/8/1p6/B2P3N/P5RP/RN2K3 w kq - 0 13";
			fens[22] = "rnbqkbnr/pp3ppp/8/2p5/1P6/B2P3N/P5RP/RN2K3 b kq - 0 12";
			fens[21] = "rnbqkbnr/pp3ppp/8/2p5/1P6/B2P3N/P5pP/RN2K1R1 w kq - 0 12";
			fens[20] = "rnbqkbnr/pp3ppp/2p5/8/1P6/B2P3N/P5pP/RN2K1R1 b kq - 1 11";
			fens[19] = "rnbqkbnr/pp3ppp/2p5/8/1P6/3P3N/P5pP/RNB1K1R1 w kq - 0 11";
			fens[18] = "rnbqkbnr/ppp2ppp/8/8/1P6/3P3N/P5pP/RNB1K1R1 b kq - 1 10";
			fens[17] = "rnbqkbnr/ppp2ppp/8/8/1P6/3P3N/P5pP/RNB1KR2 w kq - 0 10";
			fens[16] = "rnbqkbnr/ppp2ppp/8/8/1P6/3P1p1N/P5PP/RNB1KR2 b kq - 1 9";
			fens[15] = "rnbqkbnr/ppp2ppp/8/8/1P6/3P1p1N/P5PP/RNBK1R2 w kq - 0 9";
			fens[14] = "rnbqkbnr/ppp2ppp/8/8/1P2p3/3P1P1N/P5PP/RNBK1R2 b kq - 0 8";
			fens[13] = "rnbqkbnr/ppp2ppp/8/8/1P2p3/5P1N/P2P2PP/RNBK1R2 w kq - 0 8";
			fens[12] = "rnbqkbnr/ppp2ppp/8/4p3/1P6/5P1N/P2P2PP/RNBK1R2 b kq - 0 7";
			fens[11] = "rnbqkbnr/ppp2ppp/8/4p3/1P6/5P1N/P2P2PP/RNBqKR2 w Qkq - 0 7";
			fens[10] = "rnbqkbnr/ppp2ppp/8/4p3/1P6/5P1N/P1pP2PP/RNBQKR2 b Qkq - 0 6";
			fens[9] = "rnbqkbnr/ppp2ppp/8/4p3/1P6/7N/P1pP1PPP/RNBQKR2 w Qkq - 0 6";
			fens[8] = "rnbqkbnr/ppp2ppp/8/4p3/1P6/3p3N/P1PP1PPP/RNBQKR2 b Qkq - 1 5";
			fens[7] = "rnbqkbnr/ppp2ppp/8/4p3/1P6/3p3N/P1PP1PPP/RNBQK2R w KQkq - 0 5";
			fens[6] = "rnbqkbnr/ppp2ppp/8/4p3/1P2p3/3B3N/P1PP1PPP/RNBQK2R b KQkq b3 0 4";
			fens[5] = "rnbqkbnr/ppp2ppp/8/4p3/4p3/3B3N/PPPP1PPP/RNBQK2R w KQkq - 0 4";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3pp3/4P3/3B3N/PPPP1PPP/RNBQK2R b KQkq - 1 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/4P3/7N/PPPP1PPP/RNBQKB1R w KQkq d6 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/4P3/7N/PPPP1PPP/RNBQKB1R b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test5", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test5: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test50() return boolean is
			@noparse
			LOG::LogInfo(message: "test50: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 b7b5 d2d4 g7g6 c2c4 f8g7 c4b5 h7h5 d4d5 f7f5 e4f5 g8h6 f5g6 e8g8 d1h5 f8e8 h5h6 g7e5 h6h7 g8f8 h7f7";
			fens[20] = "rnbqrk2/p1pppQ2/6P1/1P1Pb3/8/8/PP3PPP/RNB1KBNR b KQ - 4 11";
			fens[19] = "rnbqrk2/p1ppp2Q/6P1/1P1Pb3/8/8/PP3PPP/RNB1KBNR w KQ - 3 11";
			fens[18] = "rnbqr1k1/p1ppp2Q/6P1/1P1Pb3/8/8/PP3PPP/RNB1KBNR b KQ - 2 10";
			fens[17] = "rnbqr1k1/p1ppp3/6PQ/1P1Pb3/8/8/PP3PPP/RNB1KBNR w KQ - 1 10";
			fens[16] = "rnbqr1k1/p1ppp1b1/6PQ/1P1P4/8/8/PP3PPP/RNB1KBNR b KQ - 0 9";
			fens[15] = "rnbqr1k1/p1ppp1b1/6Pn/1P1P3Q/8/8/PP3PPP/RNB1KBNR w KQ - 1 9";
			fens[14] = "rnbq1rk1/p1ppp1b1/6Pn/1P1P3Q/8/8/PP3PPP/RNB1KBNR b KQ - 0 8";
			fens[13] = "rnbq1rk1/p1ppp1b1/6Pn/1P1P3p/8/8/PP3PPP/RNBQKBNR w KQ - 1 8";
			fens[12] = "rnbqk2r/p1ppp1b1/6Pn/1P1P3p/8/8/PP3PPP/RNBQKBNR b KQkq - 0 7";
			fens[11] = "rnbqk2r/p1ppp1b1/6pn/1P1P1P1p/8/8/PP3PPP/RNBQKBNR w KQkq - 1 7";
			fens[10] = "rnbqk1nr/p1ppp1b1/6p1/1P1P1P1p/8/8/PP3PPP/RNBQKBNR b KQkq - 0 6";
			fens[9] = "rnbqk1nr/p1ppp1b1/6p1/1P1P1p1p/4P3/8/PP3PPP/RNBQKBNR w KQkq f6 0 6";
			fens[8] = "rnbqk1nr/p1ppppb1/6p1/1P1P3p/4P3/8/PP3PPP/RNBQKBNR b KQkq - 0 5";
			fens[7] = "rnbqk1nr/p1ppppb1/6p1/1P5p/3PP3/8/PP3PPP/RNBQKBNR w KQkq h6 0 5";
			fens[6] = "rnbqk1nr/p1ppppbp/6p1/1P6/3PP3/8/PP3PPP/RNBQKBNR b KQkq - 0 4";
			fens[5] = "rnbqk1nr/p1ppppbp/6p1/1p6/2PPP3/8/PP3PPP/RNBQKBNR w KQkq - 1 4";
			fens[4] = "rnbqkbnr/p1pppp1p/6p1/1p6/2PPP3/8/PP3PPP/RNBQKBNR b KQkq c3 0 3";
			fens[3] = "rnbqkbnr/p1pppp1p/6p1/1p6/3PP3/8/PPP2PPP/RNBQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/p1pppppp/8/1p6/3PP3/8/PPP2PPP/RNBQKBNR b KQkq d3 0 2";
			fens[1] = "rnbqkbnr/p1pppppp/8/1p6/4P3/8/PPPP1PPP/RNBQKBNR w KQkq b6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test50", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test50: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test51() return boolean is
			@noparse
			LOG::LogInfo(message: "test51: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b1c3 e7e5 d2d3 d7d6 c1e3";
			fens[4] = "rnbqkbnr/ppp2ppp/3p4/4p3/8/2NPB3/PPP1PPPP/R2QKBNR b KQkq - 1 3";
			fens[3] = "rnbqkbnr/ppp2ppp/3p4/4p3/8/2NP4/PPP1PPPP/R1BQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/8/2NP4/PPP1PPPP/R1BQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/2N5/PPPPPPPP/R1BQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/2N5/PPPPPPPP/R1BQKBNR b KQkq - 1 1";
			
			result = ::test_do_move(name: "test51", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test51: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test52() return boolean is
			@noparse
			LOG::LogInfo(message: "test52: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "h2h4 a7a5 f2f4 a5a4 d2d3 a4a3 b1a3 b7b5 a3b5 c7c5 h1h2 c5c4 d3c4 d7d5 d1d5 e7e5 d5d8 e8d8 f4e5 f7f5 e5f6 g7g5 c1g5 h7h5 c4c5 b8a6 b5a7 a6b4 a7c8 b4d3 c2d3 g8h6 g5h6 f8d6 c8d6 a8a3 b2a3 h8h7 h6c1 h7h6 c1h6 d8c7 a1d1 c7c6 h6c1 c6d5 d3d4 d5c6 c1g5 c6d5 g2g4 d5c6 g4h5 c6d5 d6f7 d5c4 h2h3 c4b5 h3h2 b5a4 e1d2 a4a5 h2g2 a5a4 f7e5 a4a5 d1c1 a5a4 c1a1 a4a5 e5g4 a5a4 a1b1 a4a5 g4e3 a5a4 b1d1 a4a5 d4d5 a5a4 d1a1 a4a5 d5d6 a5a4 a1b1 a4a5 b1b3 a5a4 b3d3 a4a5 h5h6 a5a4 e3c2 a4a5 d3c3 a5a4 d2e3 a4a5 g2g4 a5b5 c2d4 b5a4 e3f3 a4a5 f3f4 a5a4 c3f3 a4a5 f3f2 a5a4 h6h7 a4a5 h7h8q a5a4 h4h5 a4a5 g4g2 a5a4 h8b8 a4a5 g2g4 a5a4 d4e6 a4a5 b8a8 a5b5 e2e3";
			fens[126] = "Q7/8/3PNP2/1kP3BP/5KR1/P3P3/P4R2/5BN1 b - - 0 64";
			fens[125] = "Q7/8/3PNP2/1kP3BP/5KR1/P7/P3PR2/5BN1 w - - 11 64";
			fens[124] = "Q7/8/3PNP2/k1P3BP/5KR1/P7/P3PR2/5BN1 b - - 10 63";
			fens[123] = "1Q6/8/3PNP2/k1P3BP/5KR1/P7/P3PR2/5BN1 w - - 9 63";
			fens[122] = "1Q6/8/3PNP2/2P3BP/k4KR1/P7/P3PR2/5BN1 b - - 8 62";
			fens[121] = "1Q6/8/3P1P2/2P3BP/k2N1KR1/P7/P3PR2/5BN1 w - - 7 62";
			fens[120] = "1Q6/8/3P1P2/k1P3BP/3N1KR1/P7/P3PR2/5BN1 b - - 6 61";
			fens[119] = "1Q6/8/3P1P2/k1P3BP/3N1K2/P7/P3PRR1/5BN1 w - - 5 61";
			fens[118] = "1Q6/8/3P1P2/2P3BP/k2N1K2/P7/P3PRR1/5BN1 b - - 4 60";
			fens[117] = "7Q/8/3P1P2/2P3BP/k2N1K2/P7/P3PRR1/5BN1 w - - 3 60";
			fens[116] = "7Q/8/3P1P2/k1P3BP/3N1K2/P7/P3PRR1/5BN1 b - - 2 59";
			fens[115] = "7Q/8/3P1P2/k1P3BP/3N1KR1/P7/P3PR2/5BN1 w - - 1 59";
			fens[114] = "7Q/8/3P1P2/2P3BP/k2N1KR1/P7/P3PR2/5BN1 b - - 0 58";
			fens[113] = "7Q/8/3P1P2/2P3B1/k2N1KRP/P7/P3PR2/5BN1 w - - 1 58";
			fens[112] = "7Q/8/3P1P2/k1P3B1/3N1KRP/P7/P3PR2/5BN1 b - - 0 57";
			fens[111] = "8/7P/3P1P2/k1P3B1/3N1KRP/P7/P3PR2/5BN1 w - - 1 57";
			fens[110] = "8/7P/3P1P2/2P3B1/k2N1KRP/P7/P3PR2/5BN1 b - - 0 56";
			fens[109] = "8/8/3P1P1P/2P3B1/k2N1KRP/P7/P3PR2/5BN1 w - - 19 56";
			fens[108] = "8/8/3P1P1P/k1P3B1/3N1KRP/P7/P3PR2/5BN1 b - - 18 55";
			fens[107] = "8/8/3P1P1P/k1P3B1/3N1KRP/P4R2/P3P3/5BN1 w - - 17 55";
			fens[106] = "8/8/3P1P1P/2P3B1/k2N1KRP/P4R2/P3P3/5BN1 b - - 16 54";
			fens[105] = "8/8/3P1P1P/2P3B1/k2N1KRP/P1R5/P3P3/5BN1 w - - 15 54";
			fens[104] = "8/8/3P1P1P/k1P3B1/3N1KRP/P1R5/P3P3/5BN1 b - - 14 53";
			fens[103] = "8/8/3P1P1P/k1P3B1/3N2RP/P1R2K2/P3P3/5BN1 w - - 13 53";
			fens[102] = "8/8/3P1P1P/2P3B1/k2N2RP/P1R2K2/P3P3/5BN1 b - - 12 52";
			fens[101] = "8/8/3P1P1P/2P3B1/k2N2RP/P1R1K3/P3P3/5BN1 w - - 11 52";
			fens[100] = "8/8/3P1P1P/1kP3B1/3N2RP/P1R1K3/P3P3/5BN1 b - - 10 51";
			fens[99] = "8/8/3P1P1P/1kP3B1/6RP/P1R1K3/P1N1P3/5BN1 w - - 9 51";
			fens[98] = "8/8/3P1P1P/k1P3B1/6RP/P1R1K3/P1N1P3/5BN1 b - - 8 50";
			fens[97] = "8/8/3P1P1P/k1P3B1/7P/P1R1K3/P1N1P1R1/5BN1 w - - 7 50";
			fens[96] = "8/8/3P1P1P/2P3B1/k6P/P1R1K3/P1N1P1R1/5BN1 b - - 6 49";
			fens[95] = "8/8/3P1P1P/2P3B1/k6P/P1R5/P1NKP1R1/5BN1 w - - 5 49";
			fens[94] = "8/8/3P1P1P/k1P3B1/7P/P1R5/P1NKP1R1/5BN1 b - - 4 48";
			fens[93] = "8/8/3P1P1P/k1P3B1/7P/P2R4/P1NKP1R1/5BN1 w - - 3 48";
			fens[92] = "8/8/3P1P1P/2P3B1/k6P/P2R4/P1NKP1R1/5BN1 b - - 2 47";
			fens[91] = "8/8/3P1P1P/2P3B1/k6P/P2RN3/P2KP1R1/5BN1 w - - 1 47";
			fens[90] = "8/8/3P1P1P/k1P3B1/7P/P2RN3/P2KP1R1/5BN1 b - - 0 46";
			fens[89] = "8/8/3P1P2/k1P3BP/7P/P2RN3/P2KP1R1/5BN1 w - - 7 46";
			fens[88] = "8/8/3P1P2/2P3BP/k6P/P2RN3/P2KP1R1/5BN1 b - - 6 45";
			fens[87] = "8/8/3P1P2/2P3BP/k6P/PR2N3/P2KP1R1/5BN1 w - - 5 45";
			fens[86] = "8/8/3P1P2/k1P3BP/7P/PR2N3/P2KP1R1/5BN1 b - - 4 44";
			fens[85] = "8/8/3P1P2/k1P3BP/7P/P3N3/P2KP1R1/1R3BN1 w - - 3 44";
			fens[84] = "8/8/3P1P2/2P3BP/k6P/P3N3/P2KP1R1/1R3BN1 b - - 2 43";
			fens[83] = "8/8/3P1P2/2P3BP/k6P/P3N3/P2KP1R1/R4BN1 w - - 1 43";
			fens[82] = "8/8/3P1P2/k1P3BP/7P/P3N3/P2KP1R1/R4BN1 b - - 0 42";
			fens[81] = "8/8/5P2/k1PP2BP/7P/P3N3/P2KP1R1/R4BN1 w - - 3 42";
			fens[80] = "8/8/5P2/2PP2BP/k6P/P3N3/P2KP1R1/R4BN1 b - - 2 41";
			fens[79] = "8/8/5P2/2PP2BP/k6P/P3N3/P2KP1R1/3R1BN1 w - - 1 41";
			fens[78] = "8/8/5P2/k1PP2BP/7P/P3N3/P2KP1R1/3R1BN1 b - - 0 40";
			fens[77] = "8/8/5P2/k1P3BP/3P3P/P3N3/P2KP1R1/3R1BN1 w - - 25 40";
			fens[76] = "8/8/5P2/2P3BP/k2P3P/P3N3/P2KP1R1/3R1BN1 b - - 24 39";
			fens[75] = "8/8/5P2/2P3BP/k2P3P/P3N3/P2KP1R1/1R3BN1 w - - 23 39";
			fens[74] = "8/8/5P2/k1P3BP/3P3P/P3N3/P2KP1R1/1R3BN1 b - - 22 38";
			fens[73] = "8/8/5P2/k1P3BP/3P2NP/P7/P2KP1R1/1R3BN1 w - - 21 38";
			fens[72] = "8/8/5P2/2P3BP/k2P2NP/P7/P2KP1R1/1R3BN1 b - - 20 37";
			fens[71] = "8/8/5P2/2P3BP/k2P2NP/P7/P2KP1R1/R4BN1 w - - 19 37";
			fens[70] = "8/8/5P2/k1P3BP/3P2NP/P7/P2KP1R1/R4BN1 b - - 18 36";
			fens[69] = "8/8/5P2/k1P1N1BP/3P3P/P7/P2KP1R1/R4BN1 w - - 17 36";
			fens[68] = "8/8/5P2/2P1N1BP/k2P3P/P7/P2KP1R1/R4BN1 b - - 16 35";
			fens[67] = "8/8/5P2/2P1N1BP/k2P3P/P7/P2KP1R1/2R2BN1 w - - 15 35";
			fens[66] = "8/8/5P2/k1P1N1BP/3P3P/P7/P2KP1R1/2R2BN1 b - - 14 34";
			fens[65] = "8/8/5P2/k1P1N1BP/3P3P/P7/P2KP1R1/3R1BN1 w - - 13 34";
			fens[64] = "8/8/5P2/2P1N1BP/k2P3P/P7/P2KP1R1/3R1BN1 b - - 12 33";
			fens[63] = "8/5N2/5P2/2P3BP/k2P3P/P7/P2KP1R1/3R1BN1 w - - 11 33";
			fens[62] = "8/5N2/5P2/k1P3BP/3P3P/P7/P2KP1R1/3R1BN1 b - - 10 32";
			fens[61] = "8/5N2/5P2/k1P3BP/3P3P/P7/P2KP2R/3R1BN1 w - - 9 32";
			fens[60] = "8/5N2/5P2/2P3BP/k2P3P/P7/P2KP2R/3R1BN1 b - - 8 31";
			fens[59] = "8/5N2/5P2/2P3BP/k2P3P/P7/P3P2R/3RKBN1 w - - 7 31";
			fens[58] = "8/5N2/5P2/1kP3BP/3P3P/P7/P3P2R/3RKBN1 b - - 6 30";
			fens[57] = "8/5N2/5P2/1kP3BP/3P3P/P6R/P3P3/3RKBN1 w - - 5 30";
			fens[56] = "8/5N2/5P2/2P3BP/2kP3P/P6R/P3P3/3RKBN1 b - - 4 29";
			fens[55] = "8/5N2/5P2/2P3BP/2kP3P/P7/P3P2R/3RKBN1 w - - 3 29";
			fens[54] = "8/5N2/5P2/2Pk2BP/3P3P/P7/P3P2R/3RKBN1 b - - 2 28";
			fens[53] = "8/8/3N1P2/2Pk2BP/3P3P/P7/P3P2R/3RKBN1 w - - 1 28";
			fens[52] = "8/8/2kN1P2/2P3BP/3P3P/P7/P3P2R/3RKBN1 b - - 0 27";
			fens[51] = "8/8/2kN1P2/2P3Bp/3P2PP/P7/P3P2R/3RKBN1 w - - 1 27";
			fens[50] = "8/8/3N1P2/2Pk2Bp/3P2PP/P7/P3P2R/3RKBN1 b - g3 0 26";
			fens[49] = "8/8/3N1P2/2Pk2Bp/3P3P/P7/P3P1PR/3RKBN1 w - - 3 26";
			fens[48] = "8/8/2kN1P2/2P3Bp/3P3P/P7/P3P1PR/3RKBN1 b - - 2 25";
			fens[47] = "8/8/2kN1P2/2P4p/3P3P/P7/P3P1PR/2BRKBN1 w - - 1 25";
			fens[46] = "8/8/3N1P2/2Pk3p/3P3P/P7/P3P1PR/2BRKBN1 b - - 0 24";
			fens[45] = "8/8/3N1P2/2Pk3p/7P/P2P4/P3P1PR/2BRKBN1 w - - 5 24";
			fens[44] = "8/8/2kN1P2/2P4p/7P/P2P4/P3P1PR/2BRKBN1 b - - 4 23";
			fens[43] = "8/8/2kN1P1B/2P4p/7P/P2P4/P3P1PR/3RKBN1 w - - 3 23";
			fens[42] = "8/2k5/3N1P1B/2P4p/7P/P2P4/P3P1PR/3RKBN1 b - - 2 22";
			fens[41] = "8/2k5/3N1P1B/2P4p/7P/P2P4/P3P1PR/R3KBN1 w Q - 1 22";
			fens[40] = "3k4/8/3N1P1B/2P4p/7P/P2P4/P3P1PR/R3KBN1 b Q - 0 21";
			fens[39] = "3k4/8/3N1P1r/2P4p/7P/P2P4/P3P1PR/R1B1KBN1 w Q - 3 21";
			fens[38] = "3k4/7r/3N1P2/2P4p/7P/P2P4/P3P1PR/R1B1KBN1 b Q - 2 20";
			fens[37] = "3k4/7r/3N1P1B/2P4p/7P/P2P4/P3P1PR/R3KBN1 w Q - 1 20";
			fens[36] = "3k3r/8/3N1P1B/2P4p/7P/P2P4/P3P1PR/R3KBN1 b Q - 0 19";
			fens[35] = "3k3r/8/3N1P1B/2P4p/7P/r2P4/PP2P1PR/R3KBN1 w Q - 1 19";
			fens[34] = "r2k3r/8/3N1P1B/2P4p/7P/3P4/PP2P1PR/R3KBN1 b Q - 0 18";
			fens[33] = "r1Nk3r/8/3b1P1B/2P4p/7P/3P4/PP2P1PR/R3KBN1 w Q - 1 18";
			fens[32] = "r1Nk1b1r/8/5P1B/2P4p/7P/3P4/PP2P1PR/R3KBN1 b Q - 0 17";
			fens[31] = "r1Nk1b1r/8/5P1n/2P3Bp/7P/3P4/PP2P1PR/R3KBN1 w Q - 1 17";
			fens[30] = "r1Nk1bnr/8/5P2/2P3Bp/7P/3P4/PP2P1PR/R3KBN1 b Q - 0 16";
			fens[29] = "r1Nk1bnr/8/5P2/2P3Bp/7P/3n4/PPP1P1PR/R3KBN1 w Q - 1 16";
			fens[28] = "r1Nk1bnr/8/5P2/2P3Bp/1n5P/8/PPP1P1PR/R3KBN1 b Q - 0 15";
			fens[27] = "r1bk1bnr/N7/5P2/2P3Bp/1n5P/8/PPP1P1PR/R3KBN1 w Q - 3 15";
			fens[26] = "r1bk1bnr/N7/n4P2/2P3Bp/7P/8/PPP1P1PR/R3KBN1 b Q - 2 14";
			fens[25] = "r1bk1bnr/8/n4P2/1NP3Bp/7P/8/PPP1P1PR/R3KBN1 w Q - 1 14";
			fens[24] = "rnbk1bnr/8/5P2/1NP3Bp/7P/8/PPP1P1PR/R3KBN1 b Q - 0 13";
			fens[23] = "rnbk1bnr/8/5P2/1N4Bp/2P4P/8/PPP1P1PR/R3KBN1 w Q h6 0 13";
			fens[22] = "rnbk1bnr/7p/5P2/1N4B1/2P4P/8/PPP1P1PR/R3KBN1 b Q - 0 12";
			fens[21] = "rnbk1bnr/7p/5P2/1N4p1/2P4P/8/PPP1P1PR/R1B1KBN1 w Q g6 0 12";
			fens[20] = "rnbk1bnr/6pp/5P2/1N6/2P4P/8/PPP1P1PR/R1B1KBN1 b Q - 0 11";
			fens[19] = "rnbk1bnr/6pp/8/1N2Pp2/2P4P/8/PPP1P1PR/R1B1KBN1 w Q f6 0 11";
			fens[18] = "rnbk1bnr/5ppp/8/1N2P3/2P4P/8/PPP1P1PR/R1B1KBN1 b Q - 0 10";
			fens[17] = "rnbk1bnr/5ppp/8/1N2p3/2P2P1P/8/PPP1P1PR/R1B1KBN1 w Q - 0 10";
			fens[16] = "rnbQkbnr/5ppp/8/1N2p3/2P2P1P/8/PPP1P1PR/R1B1KBN1 b Qkq - 0 9";
			fens[15] = "rnbqkbnr/5ppp/8/1N1Qp3/2P2P1P/8/PPP1P1PR/R1B1KBN1 w Qkq e6 0 9";
			fens[14] = "rnbqkbnr/4pppp/8/1N1Q4/2P2P1P/8/PPP1P1PR/R1B1KBN1 b Qkq - 0 8";
			fens[13] = "rnbqkbnr/4pppp/8/1N1p4/2P2P1P/8/PPP1P1PR/R1BQKBN1 w Qkq d6 0 8";
			fens[12] = "rnbqkbnr/3ppppp/8/1N6/2P2P1P/8/PPP1P1PR/R1BQKBN1 b Qkq - 0 7";
			fens[11] = "rnbqkbnr/3ppppp/8/1N6/2p2P1P/3P4/PPP1P1PR/R1BQKBN1 w Qkq - 0 7";
			fens[10] = "rnbqkbnr/3ppppp/8/1Np5/5P1P/3P4/PPP1P1PR/R1BQKBN1 b Qkq - 1 6";
			fens[9] = "rnbqkbnr/3ppppp/8/1Np5/5P1P/3P4/PPP1P1P1/R1BQKBNR w KQkq c6 0 6";
			fens[8] = "rnbqkbnr/2pppppp/8/1N6/5P1P/3P4/PPP1P1P1/R1BQKBNR b KQkq - 0 5";
			fens[7] = "rnbqkbnr/2pppppp/8/1p6/5P1P/N2P4/PPP1P1P1/R1BQKBNR w KQkq b6 0 5";
			fens[6] = "rnbqkbnr/1ppppppp/8/8/5P1P/N2P4/PPP1P1P1/R1BQKBNR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/1ppppppp/8/8/5P1P/p2P4/PPP1P1P1/RNBQKBNR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/1ppppppp/8/8/p4P1P/3P4/PPP1P1P1/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/1ppppppp/8/8/p4P1P/8/PPPPP1P1/RNBQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/1ppppppp/8/p7/5P1P/8/PPPPP1P1/RNBQKBNR b KQkq f3 0 2";
			fens[1] = "rnbqkbnr/1ppppppp/8/p7/7P/8/PPPPPPP1/RNBQKBNR w KQkq a6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/7P/8/PPPPPPP1/RNBQKBNR b KQkq h3 0 1";
			
			result = ::test_do_move(name: "test52", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test52: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test53() return boolean is
			@noparse
			LOG::LogInfo(message: "test53: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "g1h3 a7a5 d2d4 a5a4 f2f4 a4a3 b1a3 b7b5 a3b5 c7c5 d4c5 d7d5 c5d6 e7e5 f4e5 f7f5 e5f6 g7g5 h3g5 h7h5 g2g4 h5h4 h1g1 h4h3 f1h3 b8a6 a1b1 a6b4 g1h1 b4d3 d1d3 g8h6 d3f3 h6f5 f3a8 f5e3 a8c8 e3d1 c8d8 e8d8 e1d1 f8h6 b2b4 h6g7 f6g7 h8h4 g7g8q d8d7 g8c4 h4h5 g4h5 d7d8 c1b2 d8e8 h3f5 e8d8 c4d5 d8e8 f5e6 e8d8 a2a4 d8e8 h5h6 e8d8 e6g8 d8d7 d5f7 d7c6 g5h3 c6b6 b5d4 b6a6 f7e8 a6b6 e8e6 b6a6 d4f5 a6b6 e6e3 b6a6 h3f4 a6b7 h2h4 b7a6 f5g3 a6b7 f4h5 b7a6 a4a5 a6b5 e3c1 b5a4 c1g5 a4b4 g5e7 b4a4 g8c4 a4b4 e7f8 b4a4 b2a1 a4a3 a1f6 a3a4 f6d8 a4a3 c4b5 a3a2 h5f6 a2a3 d1c1 a3a2 h1e1 a2a3 f6e8 a3a2 b5a6 a2a3 b1b6 a3a2 f8h8 a2a3 d8g5 a3a2 h8g8 a2a1 g3h1";
			fens[126] = "4N1Q1/8/BR1P3P/P5B1/7P/8/2P1P3/k1K1R2N b - - 33 64";
			fens[125] = "4N1Q1/8/BR1P3P/P5B1/7P/6N1/2P1P3/k1K1R3 w - - 32 64";
			fens[124] = "4N1Q1/8/BR1P3P/P5B1/7P/6N1/k1P1P3/2K1R3 b - - 31 63";
			fens[123] = "4N2Q/8/BR1P3P/P5B1/7P/6N1/k1P1P3/2K1R3 w - - 30 63";
			fens[122] = "4N2Q/8/BR1P3P/P5B1/7P/k5N1/2P1P3/2K1R3 b - - 29 62";
			fens[121] = "3BN2Q/8/BR1P3P/P7/7P/k5N1/2P1P3/2K1R3 w - - 28 62";
			fens[120] = "3BN2Q/8/BR1P3P/P7/7P/6N1/k1P1P3/2K1R3 b - - 27 61";
			fens[119] = "3BNQ2/8/BR1P3P/P7/7P/6N1/k1P1P3/2K1R3 w - - 26 61";
			fens[118] = "3BNQ2/8/BR1P3P/P7/7P/k5N1/2P1P3/2K1R3 b - - 25 60";
			fens[117] = "3BNQ2/8/B2P3P/P7/7P/k5N1/2P1P3/1RK1R3 w - - 24 60";
			fens[116] = "3BNQ2/8/B2P3P/P7/7P/6N1/k1P1P3/1RK1R3 b - - 23 59";
			fens[115] = "3BNQ2/8/3P3P/PB6/7P/6N1/k1P1P3/1RK1R3 w - - 22 59";
			fens[114] = "3BNQ2/8/3P3P/PB6/7P/k5N1/2P1P3/1RK1R3 b - - 21 58";
			fens[113] = "3B1Q2/8/3P1N1P/PB6/7P/k5N1/2P1P3/1RK1R3 w - - 20 58";
			fens[112] = "3B1Q2/8/3P1N1P/PB6/7P/6N1/k1P1P3/1RK1R3 b - - 19 57";
			fens[111] = "3B1Q2/8/3P1N1P/PB6/7P/6N1/k1P1P3/1RK4R w - - 18 57";
			fens[110] = "3B1Q2/8/3P1N1P/PB6/7P/k5N1/2P1P3/1RK4R b - - 17 56";
			fens[109] = "3B1Q2/8/3P1N1P/PB6/7P/k5N1/2P1P3/1R1K3R w - - 16 56";
			fens[108] = "3B1Q2/8/3P1N1P/PB6/7P/6N1/k1P1P3/1R1K3R b - - 15 55";
			fens[107] = "3B1Q2/8/3P3P/PB5N/7P/6N1/k1P1P3/1R1K3R w - - 14 55";
			fens[106] = "3B1Q2/8/3P3P/PB5N/7P/k5N1/2P1P3/1R1K3R b - - 13 54";
			fens[105] = "3B1Q2/8/3P3P/P6N/2B4P/k5N1/2P1P3/1R1K3R w - - 12 54";
			fens[104] = "3B1Q2/8/3P3P/P6N/k1B4P/6N1/2P1P3/1R1K3R b - - 11 53";
			fens[103] = "5Q2/8/3P1B1P/P6N/k1B4P/6N1/2P1P3/1R1K3R w - - 10 53";
			fens[102] = "5Q2/8/3P1B1P/P6N/2B4P/k5N1/2P1P3/1R1K3R b - - 9 52";
			fens[101] = "5Q2/8/3P3P/P6N/2B4P/k5N1/2P1P3/BR1K3R w - - 8 52";
			fens[100] = "5Q2/8/3P3P/P6N/k1B4P/6N1/2P1P3/BR1K3R b - - 7 51";
			fens[99] = "5Q2/8/3P3P/P6N/k1B4P/6N1/1BP1P3/1R1K3R w - - 6 51";
			fens[98] = "5Q2/8/3P3P/P6N/1kB4P/6N1/1BP1P3/1R1K3R b - - 5 50";
			fens[97] = "8/4Q3/3P3P/P6N/1kB4P/6N1/1BP1P3/1R1K3R w - - 4 50";
			fens[96] = "8/4Q3/3P3P/P6N/k1B4P/6N1/1BP1P3/1R1K3R b - - 3 49";
			fens[95] = "6B1/4Q3/3P3P/P6N/k6P/6N1/1BP1P3/1R1K3R w - - 2 49";
			fens[94] = "6B1/4Q3/3P3P/P6N/1k5P/6N1/1BP1P3/1R1K3R b - - 1 48";
			fens[93] = "6B1/8/3P3P/P5QN/1k5P/6N1/1BP1P3/1R1K3R w - - 0 48";
			fens[92] = "6B1/8/3P3P/P5QN/kP5P/6N1/1BP1P3/1R1K3R b - - 4 47";
			fens[91] = "6B1/8/3P3P/P6N/kP5P/6N1/1BP1P3/1RQK3R w - - 3 47";
			fens[90] = "6B1/8/3P3P/Pk5N/1P5P/6N1/1BP1P3/1RQK3R b - - 2 46";
			fens[89] = "6B1/8/3P3P/Pk5N/1P5P/4Q1N1/1BP1P3/1R1K3R w - - 1 46";
			fens[88] = "6B1/8/k2P3P/P6N/1P5P/4Q1N1/1BP1P3/1R1K3R b - - 0 45";
			fens[87] = "6B1/8/k2P3P/7N/PP5P/4Q1N1/1BP1P3/1R1K3R w - - 5 45";
			fens[86] = "6B1/1k6/3P3P/7N/PP5P/4Q1N1/1BP1P3/1R1K3R b - - 4 44";
			fens[85] = "6B1/1k6/3P3P/8/PP3N1P/4Q1N1/1BP1P3/1R1K3R w - - 3 44";
			fens[84] = "6B1/8/k2P3P/8/PP3N1P/4Q1N1/1BP1P3/1R1K3R b - - 2 43";
			fens[83] = "6B1/8/k2P3P/5N2/PP3N1P/4Q3/1BP1P3/1R1K3R w - - 1 43";
			fens[82] = "6B1/1k6/3P3P/5N2/PP3N1P/4Q3/1BP1P3/1R1K3R b - h3 0 42";
			fens[81] = "6B1/1k6/3P3P/5N2/PP3N2/4Q3/1BP1P2P/1R1K3R w - - 19 42";
			fens[80] = "6B1/8/k2P3P/5N2/PP3N2/4Q3/1BP1P2P/1R1K3R b - - 18 41";
			fens[79] = "6B1/8/k2P3P/5N2/PP6/4Q2N/1BP1P2P/1R1K3R w - - 17 41";
			fens[78] = "6B1/8/1k1P3P/5N2/PP6/4Q2N/1BP1P2P/1R1K3R b - - 16 40";
			fens[77] = "6B1/8/1k1PQ2P/5N2/PP6/7N/1BP1P2P/1R1K3R w - - 15 40";
			fens[76] = "6B1/8/k2PQ2P/5N2/PP6/7N/1BP1P2P/1R1K3R b - - 14 39";
			fens[75] = "6B1/8/k2PQ2P/8/PP1N4/7N/1BP1P2P/1R1K3R w - - 13 39";
			fens[74] = "6B1/8/1k1PQ2P/8/PP1N4/7N/1BP1P2P/1R1K3R b - - 12 38";
			fens[73] = "4Q1B1/8/1k1P3P/8/PP1N4/7N/1BP1P2P/1R1K3R w - - 11 38";
			fens[72] = "4Q1B1/8/k2P3P/8/PP1N4/7N/1BP1P2P/1R1K3R b - - 10 37";
			fens[71] = "6B1/5Q2/k2P3P/8/PP1N4/7N/1BP1P2P/1R1K3R w - - 9 37";
			fens[70] = "6B1/5Q2/1k1P3P/8/PP1N4/7N/1BP1P2P/1R1K3R b - - 8 36";
			fens[69] = "6B1/5Q2/1k1P3P/1N6/PP6/7N/1BP1P2P/1R1K3R w - - 7 36";
			fens[68] = "6B1/5Q2/2kP3P/1N6/PP6/7N/1BP1P2P/1R1K3R b - - 6 35";
			fens[67] = "6B1/5Q2/2kP3P/1N4N1/PP6/8/1BP1P2P/1R1K3R w - - 5 35";
			fens[66] = "6B1/3k1Q2/3P3P/1N4N1/PP6/8/1BP1P2P/1R1K3R b - - 4 34";
			fens[65] = "6B1/3k4/3P3P/1N1Q2N1/PP6/8/1BP1P2P/1R1K3R w - - 3 34";
			fens[64] = "3k2B1/8/3P3P/1N1Q2N1/PP6/8/1BP1P2P/1R1K3R b - - 2 33";
			fens[63] = "3k4/8/3PB2P/1N1Q2N1/PP6/8/1BP1P2P/1R1K3R w - - 1 33";
			fens[62] = "4k3/8/3PB2P/1N1Q2N1/PP6/8/1BP1P2P/1R1K3R b - - 0 32";
			fens[61] = "4k3/8/3PB3/1N1Q2NP/PP6/8/1BP1P2P/1R1K3R w - - 1 32";
			fens[60] = "3k4/8/3PB3/1N1Q2NP/PP6/8/1BP1P2P/1R1K3R b - a3 0 31";
			fens[59] = "3k4/8/3PB3/1N1Q2NP/1P6/8/PBP1P2P/1R1K3R w - - 9 31";
			fens[58] = "4k3/8/3PB3/1N1Q2NP/1P6/8/PBP1P2P/1R1K3R b - - 8 30";
			fens[57] = "4k3/8/3P4/1N1Q1BNP/1P6/8/PBP1P2P/1R1K3R w - - 7 30";
			fens[56] = "3k4/8/3P4/1N1Q1BNP/1P6/8/PBP1P2P/1R1K3R b - - 6 29";
			fens[55] = "3k4/8/3P4/1N3BNP/1PQ5/8/PBP1P2P/1R1K3R w - - 5 29";
			fens[54] = "4k3/8/3P4/1N3BNP/1PQ5/8/PBP1P2P/1R1K3R b - - 4 28";
			fens[53] = "4k3/8/3P4/1N4NP/1PQ5/7B/PBP1P2P/1R1K3R w - - 3 28";
			fens[52] = "3k4/8/3P4/1N4NP/1PQ5/7B/PBP1P2P/1R1K3R b - - 2 27";
			fens[51] = "3k4/8/3P4/1N4NP/1PQ5/7B/P1P1P2P/1RBK3R w - - 1 27";
			fens[50] = "8/3k4/3P4/1N4NP/1PQ5/7B/P1P1P2P/1RBK3R b - - 0 26";
			fens[49] = "8/3k4/3P4/1N4Nr/1PQ3P1/7B/P1P1P2P/1RBK3R w - - 3 26";
			fens[48] = "8/3k4/3P4/1N4N1/1PQ3Pr/7B/P1P1P2P/1RBK3R b - - 2 25";
			fens[47] = "6Q1/3k4/3P4/1N4N1/1P4Pr/7B/P1P1P2P/1RBK3R w - - 1 25";
			fens[46] = "3k2Q1/8/3P4/1N4N1/1P4Pr/7B/P1P1P2P/1RBK3R b - - 0 24";
			fens[45] = "3k4/6P1/3P4/1N4N1/1P4Pr/7B/P1P1P2P/1RBK3R w - - 1 24";
			fens[44] = "3k3r/6P1/3P4/1N4N1/1P4P1/7B/P1P1P2P/1RBK3R b - - 0 23";
			fens[43] = "3k3r/6b1/3P1P2/1N4N1/1P4P1/7B/P1P1P2P/1RBK3R w - - 1 23";
			fens[42] = "3k3r/8/3P1P1b/1N4N1/1P4P1/7B/P1P1P2P/1RBK3R b - b3 0 22";
			fens[41] = "3k3r/8/3P1P1b/1N4N1/6P1/7B/PPP1P2P/1RBK3R w - - 1 22";
			fens[40] = "3k1b1r/8/3P1P2/1N4N1/6P1/7B/PPP1P2P/1RBK3R b - - 0 21";
			fens[39] = "3k1b1r/8/3P1P2/1N4N1/6P1/7B/PPP1P2P/1RBnK2R w - - 0 21";
			fens[38] = "3Qkb1r/8/3P1P2/1N4N1/6P1/7B/PPP1P2P/1RBnK2R b k - 0 20";
			fens[37] = "2Qqkb1r/8/3P1P2/1N4N1/6P1/7B/PPP1P2P/1RBnK2R w k - 1 20";
			fens[36] = "2Qqkb1r/8/3P1P2/1N4N1/6P1/4n2B/PPP1P2P/1RB1K2R b k - 0 19";
			fens[35] = "Q1bqkb1r/8/3P1P2/1N4N1/6P1/4n2B/PPP1P2P/1RB1K2R w k - 1 19";
			fens[34] = "Q1bqkb1r/8/3P1P2/1N3nN1/6P1/7B/PPP1P2P/1RB1K2R b k - 0 18";
			fens[33] = "r1bqkb1r/8/3P1P2/1N3nN1/6P1/5Q1B/PPP1P2P/1RB1K2R w kq - 3 18";
			fens[32] = "r1bqkb1r/8/3P1P1n/1N4N1/6P1/5Q1B/PPP1P2P/1RB1K2R b kq - 2 17";
			fens[31] = "r1bqkb1r/8/3P1P1n/1N4N1/6P1/3Q3B/PPP1P2P/1RB1K2R w kq - 1 17";
			fens[30] = "r1bqkbnr/8/3P1P2/1N4N1/6P1/3Q3B/PPP1P2P/1RB1K2R b kq - 0 16";
			fens[29] = "r1bqkbnr/8/3P1P2/1N4N1/6P1/3n3B/PPP1P2P/1RBQK2R w kq - 5 16";
			fens[28] = "r1bqkbnr/8/3P1P2/1N4N1/1n4P1/7B/PPP1P2P/1RBQK2R b kq - 4 15";
			fens[27] = "r1bqkbnr/8/3P1P2/1N4N1/1n4P1/7B/PPP1P2P/1RBQK1R1 w kq - 3 15";
			fens[26] = "r1bqkbnr/8/n2P1P2/1N4N1/6P1/7B/PPP1P2P/1RBQK1R1 b kq - 2 14";
			fens[25] = "r1bqkbnr/8/n2P1P2/1N4N1/6P1/7B/PPP1P2P/R1BQK1R1 w Qkq - 1 14";
			fens[24] = "rnbqkbnr/8/3P1P2/1N4N1/6P1/7B/PPP1P2P/R1BQK1R1 b Qkq - 0 13";
			fens[23] = "rnbqkbnr/8/3P1P2/1N4N1/6P1/7p/PPP1P2P/R1BQKBR1 w Qkq - 0 13";
			fens[22] = "rnbqkbnr/8/3P1P2/1N4N1/6Pp/8/PPP1P2P/R1BQKBR1 b Qkq - 1 12";
			fens[21] = "rnbqkbnr/8/3P1P2/1N4N1/6Pp/8/PPP1P2P/R1BQKB1R w KQkq - 0 12";
			fens[20] = "rnbqkbnr/8/3P1P2/1N4Np/6P1/8/PPP1P2P/R1BQKB1R b KQkq g3 0 11";
			fens[19] = "rnbqkbnr/8/3P1P2/1N4Np/8/8/PPP1P1PP/R1BQKB1R w KQkq h6 0 11";
			fens[18] = "rnbqkbnr/7p/3P1P2/1N4N1/8/8/PPP1P1PP/R1BQKB1R b KQkq - 0 10";
			fens[17] = "rnbqkbnr/7p/3P1P2/1N4p1/8/7N/PPP1P1PP/R1BQKB1R w KQkq g6 0 10";
			fens[16] = "rnbqkbnr/6pp/3P1P2/1N6/8/7N/PPP1P1PP/R1BQKB1R b KQkq - 0 9";
			fens[15] = "rnbqkbnr/6pp/3P4/1N2Pp2/8/7N/PPP1P1PP/R1BQKB1R w KQkq f6 0 9";
			fens[14] = "rnbqkbnr/5ppp/3P4/1N2P3/8/7N/PPP1P1PP/R1BQKB1R b KQkq - 0 8";
			fens[13] = "rnbqkbnr/5ppp/3P4/1N2p3/5P2/7N/PPP1P1PP/R1BQKB1R w KQkq e6 0 8";
			fens[12] = "rnbqkbnr/4pppp/3P4/1N6/5P2/7N/PPP1P1PP/R1BQKB1R b KQkq - 0 7";
			fens[11] = "rnbqkbnr/4pppp/8/1NPp4/5P2/7N/PPP1P1PP/R1BQKB1R w KQkq d6 0 7";
			fens[10] = "rnbqkbnr/3ppppp/8/1NP5/5P2/7N/PPP1P1PP/R1BQKB1R b KQkq - 0 6";
			fens[9] = "rnbqkbnr/3ppppp/8/1Np5/3P1P2/7N/PPP1P1PP/R1BQKB1R w KQkq c6 0 6";
			fens[8] = "rnbqkbnr/2pppppp/8/1N6/3P1P2/7N/PPP1P1PP/R1BQKB1R b KQkq - 0 5";
			fens[7] = "rnbqkbnr/2pppppp/8/1p6/3P1P2/N6N/PPP1P1PP/R1BQKB1R w KQkq b6 0 5";
			fens[6] = "rnbqkbnr/1ppppppp/8/8/3P1P2/N6N/PPP1P1PP/R1BQKB1R b KQkq - 0 4";
			fens[5] = "rnbqkbnr/1ppppppp/8/8/3P1P2/p6N/PPP1P1PP/RNBQKB1R w KQkq - 0 4";
			fens[4] = "rnbqkbnr/1ppppppp/8/8/p2P1P2/7N/PPP1P1PP/RNBQKB1R b KQkq f3 0 3";
			fens[3] = "rnbqkbnr/1ppppppp/8/8/p2P4/7N/PPP1PPPP/RNBQKB1R w KQkq - 0 3";
			fens[2] = "rnbqkbnr/1ppppppp/8/p7/3P4/7N/PPP1PPPP/RNBQKB1R b KQkq d3 0 2";
			fens[1] = "rnbqkbnr/1ppppppp/8/p7/8/7N/PPPPPPPP/RNBQKB1R w KQkq a6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/7N/PPPPPPPP/RNBQKB1R b KQkq - 1 1";
			
			result = ::test_do_move(name: "test53", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test53: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test54() return boolean is
			@noparse
			LOG::LogInfo(message: "test54: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "c2c4 a7a5 b1a3 a5a4 d1a4 b7b5 a4a8 b5b4 a8b8 b4b3 b8c8 c7c5 c8d8 e8d8 a2b3 d7d5 c4d5 c5c4 b3c4 e7e5 d5e6";
			fens[20] = "3k1bnr/5ppp/4P3/8/2P5/N7/1P1PPPPP/R1B1KBNR b KQ - 0 11";
			fens[19] = "3k1bnr/5ppp/8/3Pp3/2P5/N7/1P1PPPPP/R1B1KBNR w KQ e6 0 11";
			fens[18] = "3k1bnr/4pppp/8/3P4/2P5/N7/1P1PPPPP/R1B1KBNR b KQ - 0 10";
			fens[17] = "3k1bnr/4pppp/8/3P4/2p5/NP6/1P1PPPPP/R1B1KBNR w KQ - 0 10";
			fens[16] = "3k1bnr/4pppp/8/2pP4/8/NP6/1P1PPPPP/R1B1KBNR b KQ - 0 9";
			fens[15] = "3k1bnr/4pppp/8/2pp4/2P5/NP6/1P1PPPPP/R1B1KBNR w KQ d6 0 9";
			fens[14] = "3k1bnr/3ppppp/8/2p5/2P5/NP6/1P1PPPPP/R1B1KBNR b KQ - 0 8";
			fens[13] = "3k1bnr/3ppppp/8/2p5/2P5/Np6/PP1PPPPP/R1B1KBNR w KQ - 0 8";
			fens[12] = "3Qkbnr/3ppppp/8/2p5/2P5/Np6/PP1PPPPP/R1B1KBNR b KQk - 0 7";
			fens[11] = "2Qqkbnr/3ppppp/8/2p5/2P5/Np6/PP1PPPPP/R1B1KBNR w KQk c6 0 7";
			fens[10] = "2Qqkbnr/2pppppp/8/8/2P5/Np6/PP1PPPPP/R1B1KBNR b KQk - 0 6";
			fens[9] = "1Qbqkbnr/2pppppp/8/8/2P5/Np6/PP1PPPPP/R1B1KBNR w KQk - 0 6";
			fens[8] = "1Qbqkbnr/2pppppp/8/8/1pP5/N7/PP1PPPPP/R1B1KBNR b KQk - 0 5";
			fens[7] = "Qnbqkbnr/2pppppp/8/8/1pP5/N7/PP1PPPPP/R1B1KBNR w KQk - 0 5";
			fens[6] = "Qnbqkbnr/2pppppp/8/1p6/2P5/N7/PP1PPPPP/R1B1KBNR b KQk - 0 4";
			fens[5] = "rnbqkbnr/2pppppp/8/1p6/Q1P5/N7/PP1PPPPP/R1B1KBNR w KQkq b6 0 4";
			fens[4] = "rnbqkbnr/1ppppppp/8/8/Q1P5/N7/PP1PPPPP/R1B1KBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/1ppppppp/8/8/p1P5/N7/PP1PPPPP/R1BQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/1ppppppp/8/p7/2P5/N7/PP1PPPPP/R1BQKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/1ppppppp/8/p7/2P5/8/PP1PPPPP/RNBQKBNR w KQkq a6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/2P5/8/PP1PPPPP/RNBQKBNR b KQkq c3 0 1";
			
			result = ::test_do_move(name: "test54", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test54: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test55() return boolean is
			@noparse
			LOG::LogInfo(message: "test55: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a4 a7a5 h2h4 b7b5 a4b5 a5a4 a1a4 c7c5 a4a8 c5c4 a8b8 c4c3 b8c8 d7d5 c8d8 e8d8 b1c3 d5d4 g1h3 d4d3 e2d3 e7e5 c3e4 f7f5 h3f4 g7g5 e4g5 e5e4 d3e4 h7h5 d1h5 g8f6 h5h8 f6g4 h8f8 d8c7 e4f5 g4h2 h1h2 c7b6 f8a8 b6c5 a8c8 c5b4 g5f7 b4a4 f7h8 a4b4 b5b6 b4a4 c8d7 a4b4 d7d4 b4a5 f1c4 a5a4 e1e2 a4b4 f4g6 b4a4 h2h1 a4b4 d4c3 b4a4 h1h2";
			fens[64] = "7N/8/1P4N1/5P2/k1B4P/2Q5/1PPPKPPR/2B5 b - - 16 33";
			fens[63] = "7N/8/1P4N1/5P2/k1B4P/2Q5/1PPPKPP1/2B4R w - - 15 33";
			fens[62] = "7N/8/1P4N1/5P2/1kB4P/2Q5/1PPPKPP1/2B4R b - - 14 32";
			fens[61] = "7N/8/1P4N1/5P2/1kBQ3P/8/1PPPKPP1/2B4R w - - 13 32";
			fens[60] = "7N/8/1P4N1/5P2/k1BQ3P/8/1PPPKPP1/2B4R b - - 12 31";
			fens[59] = "7N/8/1P4N1/5P2/k1BQ3P/8/1PPPKPPR/2B5 w - - 11 31";
			fens[58] = "7N/8/1P4N1/5P2/1kBQ3P/8/1PPPKPPR/2B5 b - - 10 30";
			fens[57] = "7N/8/1P6/5P2/1kBQ1N1P/8/1PPPKPPR/2B5 w - - 9 30";
			fens[56] = "7N/8/1P6/5P2/k1BQ1N1P/8/1PPPKPPR/2B5 b - - 8 29";
			fens[55] = "7N/8/1P6/5P2/k1BQ1N1P/8/1PPP1PPR/2B1K3 w - - 7 29";
			fens[54] = "7N/8/1P6/k4P2/2BQ1N1P/8/1PPP1PPR/2B1K3 b - - 6 28";
			fens[53] = "7N/8/1P6/k4P2/3Q1N1P/8/1PPP1PPR/2B1KB2 w - - 5 28";
			fens[52] = "7N/8/1P6/5P2/1k1Q1N1P/8/1PPP1PPR/2B1KB2 b - - 4 27";
			fens[51] = "7N/3Q4/1P6/5P2/1k3N1P/8/1PPP1PPR/2B1KB2 w - - 3 27";
			fens[50] = "7N/3Q4/1P6/5P2/k4N1P/8/1PPP1PPR/2B1KB2 b - - 2 26";
			fens[49] = "2Q4N/8/1P6/5P2/k4N1P/8/1PPP1PPR/2B1KB2 w - - 1 26";
			fens[48] = "2Q4N/8/1P6/5P2/1k3N1P/8/1PPP1PPR/2B1KB2 b - - 0 25";
			fens[47] = "2Q4N/8/8/1P3P2/1k3N1P/8/1PPP1PPR/2B1KB2 w - - 9 25";
			fens[46] = "2Q4N/8/8/1P3P2/k4N1P/8/1PPP1PPR/2B1KB2 b - - 8 24";
			fens[45] = "2Q5/5N2/8/1P3P2/k4N1P/8/1PPP1PPR/2B1KB2 w - - 7 24";
			fens[44] = "2Q5/5N2/8/1P3P2/1k3N1P/8/1PPP1PPR/2B1KB2 b - - 6 23";
			fens[43] = "2Q5/8/8/1P3PN1/1k3N1P/8/1PPP1PPR/2B1KB2 w - - 5 23";
			fens[42] = "2Q5/8/8/1Pk2PN1/5N1P/8/1PPP1PPR/2B1KB2 b - - 4 22";
			fens[41] = "Q7/8/8/1Pk2PN1/5N1P/8/1PPP1PPR/2B1KB2 w - - 3 22";
			fens[40] = "Q7/8/1k6/1P3PN1/5N1P/8/1PPP1PPR/2B1KB2 b - - 2 21";
			fens[39] = "5Q2/8/1k6/1P3PN1/5N1P/8/1PPP1PPR/2B1KB2 w - - 1 21";
			fens[38] = "5Q2/2k5/8/1P3PN1/5N1P/8/1PPP1PPR/2B1KB2 b - - 0 20";
			fens[37] = "5Q2/2k5/8/1P3PN1/5N1P/8/1PPP1PPn/2B1KB1R w K - 1 20";
			fens[36] = "5Q2/2k5/8/1P3PN1/5NnP/8/1PPP1PP1/2B1KB1R b K - 0 19";
			fens[35] = "5Q2/2k5/8/1P3pN1/4PNnP/8/1PPP1PP1/2B1KB1R w K - 1 19";
			fens[34] = "3k1Q2/8/8/1P3pN1/4PNnP/8/1PPP1PP1/2B1KB1R b K - 0 18";
			fens[33] = "3k1b1Q/8/8/1P3pN1/4PNnP/8/1PPP1PP1/2B1KB1R w K - 1 18";
			fens[32] = "3k1b1Q/8/5n2/1P3pN1/4PN1P/8/1PPP1PP1/2B1KB1R b K - 0 17";
			fens[31] = "3k1b1r/8/5n2/1P3pNQ/4PN1P/8/1PPP1PP1/2B1KB1R w K - 1 17";
			fens[30] = "3k1bnr/8/8/1P3pNQ/4PN1P/8/1PPP1PP1/2B1KB1R b K - 0 16";
			fens[29] = "3k1bnr/8/8/1P3pNp/4PN1P/8/1PPP1PP1/2BQKB1R w K h6 0 16";
			fens[28] = "3k1bnr/7p/8/1P3pN1/4PN1P/8/1PPP1PP1/2BQKB1R b K - 0 15";
			fens[27] = "3k1bnr/7p/8/1P3pN1/4pN1P/3P4/1PPP1PP1/2BQKB1R w K - 0 15";
			fens[26] = "3k1bnr/7p/8/1P2ppN1/5N1P/3P4/1PPP1PP1/2BQKB1R b K - 0 14";
			fens[25] = "3k1bnr/7p/8/1P2ppp1/4NN1P/3P4/1PPP1PP1/2BQKB1R w K g6 0 14";
			fens[24] = "3k1bnr/6pp/8/1P2pp2/4NN1P/3P4/1PPP1PP1/2BQKB1R b K - 1 13";
			fens[23] = "3k1bnr/6pp/8/1P2pp2/4N2P/3P3N/1PPP1PP1/2BQKB1R w K f6 0 13";
			fens[22] = "3k1bnr/5ppp/8/1P2p3/4N2P/3P3N/1PPP1PP1/2BQKB1R b K - 1 12";
			fens[21] = "3k1bnr/5ppp/8/1P2p3/7P/2NP3N/1PPP1PP1/2BQKB1R w K e6 0 12";
			fens[20] = "3k1bnr/4pppp/8/1P6/7P/2NP3N/1PPP1PP1/2BQKB1R b K - 0 11";
			fens[19] = "3k1bnr/4pppp/8/1P6/7P/2Np3N/1PPPPPP1/2BQKB1R w K - 0 11";
			fens[18] = "3k1bnr/4pppp/8/1P6/3p3P/2N4N/1PPPPPP1/2BQKB1R b K - 1 10";
			fens[17] = "3k1bnr/4pppp/8/1P6/3p3P/2N5/1PPPPPP1/2BQKBNR w K - 0 10";
			fens[16] = "3k1bnr/4pppp/8/1P1p4/7P/2N5/1PPPPPP1/2BQKBNR b K - 0 9";
			fens[15] = "3k1bnr/4pppp/8/1P1p4/7P/2p5/1PPPPPP1/1NBQKBNR w K - 0 9";
			fens[14] = "3Rkbnr/4pppp/8/1P1p4/7P/2p5/1PPPPPP1/1NBQKBNR b Kk - 0 8";
			fens[13] = "2Rqkbnr/4pppp/8/1P1p4/7P/2p5/1PPPPPP1/1NBQKBNR w Kk d6 0 8";
			fens[12] = "2Rqkbnr/3ppppp/8/1P6/7P/2p5/1PPPPPP1/1NBQKBNR b Kk - 0 7";
			fens[11] = "1Rbqkbnr/3ppppp/8/1P6/7P/2p5/1PPPPPP1/1NBQKBNR w Kk - 0 7";
			fens[10] = "1Rbqkbnr/3ppppp/8/1P6/2p4P/8/1PPPPPP1/1NBQKBNR b Kk - 0 6";
			fens[9] = "Rnbqkbnr/3ppppp/8/1P6/2p4P/8/1PPPPPP1/1NBQKBNR w Kk - 0 6";
			fens[8] = "Rnbqkbnr/3ppppp/8/1Pp5/7P/8/1PPPPPP1/1NBQKBNR b Kk - 0 5";
			fens[7] = "rnbqkbnr/3ppppp/8/1Pp5/R6P/8/1PPPPPP1/1NBQKBNR w Kkq c6 0 5";
			fens[6] = "rnbqkbnr/2pppppp/8/1P6/R6P/8/1PPPPPP1/1NBQKBNR b Kkq - 0 4";
			fens[5] = "rnbqkbnr/2pppppp/8/1P6/p6P/8/1PPPPPP1/RNBQKBNR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/2pppppp/8/pP6/7P/8/1PPPPPP1/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/2pppppp/8/pp6/P6P/8/1PPPPPP1/RNBQKBNR w KQkq b6 0 3";
			fens[2] = "rnbqkbnr/1ppppppp/8/p7/P6P/8/1PPPPPP1/RNBQKBNR b KQkq h3 0 2";
			fens[1] = "rnbqkbnr/1ppppppp/8/p7/P7/8/1PPPPPPP/RNBQKBNR w KQkq a6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/P7/8/1PPPPPPP/RNBQKBNR b KQkq a3 0 1";
			
			result = ::test_do_move(name: "test55", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test55: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test56() return boolean is
			@noparse
			LOG::LogInfo(message: "test56: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "g2g3 a7a5 c2c4 a5a4 d1a4 b7b5 a4a8 b5b4 a8b8 b4b3 b8c8 c7c5 c8d8 e8d8 a2b3 d7d5 c4d5 c5c4 b3c4 e7e5 d5e6 f7f5 e2e3 f5f4 e3f4 g7g5 f4g5 h7h5 g5h6 g8f6 f2f4 f6e4 h6h7 e4f2 e1f2 f8a3 b2a3 h8e8 h7h8q e8f8 h8f8 d8c7 f8g8 c7b6 f2g2 b6a5 g1h3 a5a4 d2d4 a4b3 g8f8 b3c2 h1g1 c2d1 b1c3 d1e1 f1d3";
			fens[56] = "5Q2/8/4P3/8/2PP1P2/P1NB2PN/6KP/R1B1k1R1 b - - 8 29";
			fens[55] = "5Q2/8/4P3/8/2PP1P2/P1N3PN/6KP/R1B1kBR1 w - - 7 29";
			fens[54] = "5Q2/8/4P3/8/2PP1P2/P1N3PN/6KP/R1Bk1BR1 b - - 6 28";
			fens[53] = "5Q2/8/4P3/8/2PP1P2/P5PN/6KP/RNBk1BR1 w - - 5 28";
			fens[52] = "5Q2/8/4P3/8/2PP1P2/P5PN/2k3KP/RNB2BR1 b - - 4 27";
			fens[51] = "5Q2/8/4P3/8/2PP1P2/P5PN/2k3KP/RNB2B1R w - - 3 27";
			fens[50] = "5Q2/8/4P3/8/2PP1P2/Pk4PN/6KP/RNB2B1R b - - 2 26";
			fens[49] = "6Q1/8/4P3/8/2PP1P2/Pk4PN/6KP/RNB2B1R w - - 1 26";
			fens[48] = "6Q1/8/4P3/8/k1PP1P2/P5PN/6KP/RNB2B1R b - d3 0 25";
			fens[47] = "6Q1/8/4P3/8/k1P2P2/P5PN/3P2KP/RNB2B1R w - - 7 25";
			fens[46] = "6Q1/8/4P3/k7/2P2P2/P5PN/3P2KP/RNB2B1R b - - 6 24";
			fens[45] = "6Q1/8/4P3/k7/2P2P2/P5P1/3P2KP/RNB2BNR w - - 5 24";
			fens[44] = "6Q1/8/1k2P3/8/2P2P2/P5P1/3P2KP/RNB2BNR b - - 4 23";
			fens[43] = "6Q1/8/1k2P3/8/2P2P2/P5P1/3P1K1P/RNB2BNR w - - 3 23";
			fens[42] = "6Q1/2k5/4P3/8/2P2P2/P5P1/3P1K1P/RNB2BNR b - - 2 22";
			fens[41] = "5Q2/2k5/4P3/8/2P2P2/P5P1/3P1K1P/RNB2BNR w - - 1 22";
			fens[40] = "3k1Q2/8/4P3/8/2P2P2/P5P1/3P1K1P/RNB2BNR b - - 0 21";
			fens[39] = "3k1r1Q/8/4P3/8/2P2P2/P5P1/3P1K1P/RNB2BNR w - - 1 21";
			fens[38] = "3kr2Q/8/4P3/8/2P2P2/P5P1/3P1K1P/RNB2BNR b - - 0 20";
			fens[37] = "3kr3/7P/4P3/8/2P2P2/P5P1/3P1K1P/RNB2BNR w - - 1 20";
			fens[36] = "3k3r/7P/4P3/8/2P2P2/P5P1/3P1K1P/RNB2BNR b - - 0 19";
			fens[35] = "3k3r/7P/4P3/8/2P2P2/b5P1/1P1P1K1P/RNB2BNR w - - 1 19";
			fens[34] = "3k1b1r/7P/4P3/8/2P2P2/6P1/1P1P1K1P/RNB2BNR b - - 0 18";
			fens[33] = "3k1b1r/7P/4P3/8/2P2P2/6P1/1P1P1n1P/RNB1KBNR w KQ - 1 18";
			fens[32] = "3k1b1r/7P/4P3/8/2P1nP2/6P1/1P1P3P/RNB1KBNR b KQ - 0 17";
			fens[31] = "3k1b1r/8/4P2P/8/2P1nP2/6P1/1P1P3P/RNB1KBNR w KQ - 1 17";
			fens[30] = "3k1b1r/8/4Pn1P/8/2P2P2/6P1/1P1P3P/RNB1KBNR b KQ f3 0 16";
			fens[29] = "3k1b1r/8/4Pn1P/8/2P5/6P1/1P1P1P1P/RNB1KBNR w KQ - 1 16";
			fens[28] = "3k1bnr/8/4P2P/8/2P5/6P1/1P1P1P1P/RNB1KBNR b KQ - 0 15";
			fens[27] = "3k1bnr/8/4P3/6Pp/2P5/6P1/1P1P1P1P/RNB1KBNR w KQ h6 0 15";
			fens[26] = "3k1bnr/7p/4P3/6P1/2P5/6P1/1P1P1P1P/RNB1KBNR b KQ - 0 14";
			fens[25] = "3k1bnr/7p/4P3/6p1/2P2P2/6P1/1P1P1P1P/RNB1KBNR w KQ g6 0 14";
			fens[24] = "3k1bnr/6pp/4P3/8/2P2P2/6P1/1P1P1P1P/RNB1KBNR b KQ - 0 13";
			fens[23] = "3k1bnr/6pp/4P3/8/2P2p2/4P1P1/1P1P1P1P/RNB1KBNR w KQ - 0 13";
			fens[22] = "3k1bnr/6pp/4P3/5p2/2P5/4P1P1/1P1P1P1P/RNB1KBNR b KQ - 0 12";
			fens[21] = "3k1bnr/6pp/4P3/5p2/2P5/6P1/1P1PPP1P/RNB1KBNR w KQ f6 0 12";
			fens[20] = "3k1bnr/5ppp/4P3/8/2P5/6P1/1P1PPP1P/RNB1KBNR b KQ - 0 11";
			fens[19] = "3k1bnr/5ppp/8/3Pp3/2P5/6P1/1P1PPP1P/RNB1KBNR w KQ e6 0 11";
			fens[18] = "3k1bnr/4pppp/8/3P4/2P5/6P1/1P1PPP1P/RNB1KBNR b KQ - 0 10";
			fens[17] = "3k1bnr/4pppp/8/3P4/2p5/1P4P1/1P1PPP1P/RNB1KBNR w KQ - 0 10";
			fens[16] = "3k1bnr/4pppp/8/2pP4/8/1P4P1/1P1PPP1P/RNB1KBNR b KQ - 0 9";
			fens[15] = "3k1bnr/4pppp/8/2pp4/2P5/1P4P1/1P1PPP1P/RNB1KBNR w KQ d6 0 9";
			fens[14] = "3k1bnr/3ppppp/8/2p5/2P5/1P4P1/1P1PPP1P/RNB1KBNR b KQ - 0 8";
			fens[13] = "3k1bnr/3ppppp/8/2p5/2P5/1p4P1/PP1PPP1P/RNB1KBNR w KQ - 0 8";
			fens[12] = "3Qkbnr/3ppppp/8/2p5/2P5/1p4P1/PP1PPP1P/RNB1KBNR b KQk - 0 7";
			fens[11] = "2Qqkbnr/3ppppp/8/2p5/2P5/1p4P1/PP1PPP1P/RNB1KBNR w KQk c6 0 7";
			fens[10] = "2Qqkbnr/2pppppp/8/8/2P5/1p4P1/PP1PPP1P/RNB1KBNR b KQk - 0 6";
			fens[9] = "1Qbqkbnr/2pppppp/8/8/2P5/1p4P1/PP1PPP1P/RNB1KBNR w KQk - 0 6";
			fens[8] = "1Qbqkbnr/2pppppp/8/8/1pP5/6P1/PP1PPP1P/RNB1KBNR b KQk - 0 5";
			fens[7] = "Qnbqkbnr/2pppppp/8/8/1pP5/6P1/PP1PPP1P/RNB1KBNR w KQk - 0 5";
			fens[6] = "Qnbqkbnr/2pppppp/8/1p6/2P5/6P1/PP1PPP1P/RNB1KBNR b KQk - 0 4";
			fens[5] = "rnbqkbnr/2pppppp/8/1p6/Q1P5/6P1/PP1PPP1P/RNB1KBNR w KQkq b6 0 4";
			fens[4] = "rnbqkbnr/1ppppppp/8/8/Q1P5/6P1/PP1PPP1P/RNB1KBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/1ppppppp/8/8/p1P5/6P1/PP1PPP1P/RNBQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/1ppppppp/8/p7/2P5/6P1/PP1PPP1P/RNBQKBNR b KQkq c3 0 2";
			fens[1] = "rnbqkbnr/1ppppppp/8/p7/8/6P1/PPPPPP1P/RNBQKBNR w KQkq a6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/6P1/PPPPPP1P/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test56", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test56: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test57() return boolean is
			@noparse
			LOG::LogInfo(message: "test57: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 e7e6 b2b3 f8a3 c2c3 a3c1 d2d3 g7g5 e2e3 c1e3 f2f3 e3g1 g2g3 g1h2 b3b4 h2g3 e1d2 g3d6 c3c4 d6b4 b1c3 b4c3 d2c1 c3a1 d3d4 a1d4 f3f4 g5f4 c4c5 d4c5 f1e2 g8e7 e2f1 h7h6 f1e2 c5a3 c1b1 a3b2 e2f1 b8a6 f1e2 h8h7 e2f1 e7d5 f1e2 b2g7 e2f1 h6h5 f1e2 h7h6 e2f1 d5e7 f1e2 a6b8 e2f1 b8c6 f1e2 a7a5 e2f1 d7d6 f1e2 c6b8 e2f1 g7a1 f1e2 b8d7 e2f1 a1h8 f1e2 d7e5 e2f1 e7c6 f1e2 c6a7 e2f1 a7c6 f1e2 f7f5 e2f1 h5h4 f1e2 d8g5 e2f1 g5g7 f1e2 e5d3 e2f1 e8d8 f1e2 g7e7 e2f1 e7d7 f1e2 h8g7 e2f1 c6a7 f1e2 e6e5 e2f1 d3c1 f1e2 c1e2 h1e1 h6g6 e1f1 c7c5 f1e1 g6h6 e1f1 g7f6 f1e1 d7b5 d1b3 b5b3 b1a1 b3a3 a1b1 h4h3 e1c1 e2c1 b1c2 a3a2 c2d1 a5a4 d1e1 d6d5 e1d1 h3h2 d1e1 h2h1q";
			fens[129] = "r1bk4/np6/5b1r/2pppp2/p4p2/8/q7/2n1K2q w - - 0 66";
			fens[128] = "r1bk4/np6/5b1r/2pppp2/p4p2/8/q6p/2n1K3 b - - 1 65";
			fens[127] = "r1bk4/np6/5b1r/2pppp2/p4p2/8/q6p/2nK4 w - - 0 65";
			fens[126] = "r1bk4/np6/5b1r/2pppp2/p4p2/7p/q7/2nK4 b - - 1 64";
			fens[125] = "r1bk4/np6/5b1r/2pppp2/p4p2/7p/q7/2n1K3 w - - 0 64";
			fens[124] = "r1bk4/np6/3p1b1r/2p1pp2/p4p2/7p/q7/2n1K3 b - - 1 63";
			fens[123] = "r1bk4/np6/3p1b1r/2p1pp2/p4p2/7p/q7/2nK4 w - - 0 63";
			fens[122] = "r1bk4/np6/3p1b1r/p1p1pp2/5p2/7p/q7/2nK4 b - - 3 62";
			fens[121] = "r1bk4/np6/3p1b1r/p1p1pp2/5p2/7p/q1K5/2n5 w - - 2 62";
			fens[120] = "r1bk4/np6/3p1b1r/p1p1pp2/5p2/q6p/2K5/2n5 b - - 1 61";
			fens[119] = "r1bk4/np6/3p1b1r/p1p1pp2/5p2/q6p/8/1Kn5 w - - 0 61";
			fens[118] = "r1bk4/np6/3p1b1r/p1p1pp2/5p2/q6p/4n3/1KR5 b - - 1 60";
			fens[117] = "r1bk4/np6/3p1b1r/p1p1pp2/5p2/q6p/4n3/1K2R3 w - - 0 60";
			fens[116] = "r1bk4/np6/3p1b1r/p1p1pp2/5p1p/q7/4n3/1K2R3 b - - 3 59";
			fens[115] = "r1bk4/np6/3p1b1r/p1p1pp2/5p1p/q7/4n3/K3R3 w - - 2 59";
			fens[114] = "r1bk4/np6/3p1b1r/p1p1pp2/5p1p/1q6/4n3/K3R3 b - - 1 58";
			fens[113] = "r1bk4/np6/3p1b1r/p1p1pp2/5p1p/1q6/4n3/1K2R3 w - - 0 58";
			fens[112] = "r1bk4/np6/3p1b1r/pqp1pp2/5p1p/1Q6/4n3/1K2R3 b - - 7 57";
			fens[111] = "r1bk4/np6/3p1b1r/pqp1pp2/5p1p/8/4n3/1K1QR3 w - - 6 57";
			fens[110] = "r1bk4/np1q4/3p1b1r/p1p1pp2/5p1p/8/4n3/1K1QR3 b - - 5 56";
			fens[109] = "r1bk4/np1q4/3p1b1r/p1p1pp2/5p1p/8/4n3/1K1Q1R2 w - - 4 56";
			fens[108] = "r1bk4/np1q2b1/3p3r/p1p1pp2/5p1p/8/4n3/1K1Q1R2 b - - 3 55";
			fens[107] = "r1bk4/np1q2b1/3p3r/p1p1pp2/5p1p/8/4n3/1K1QR3 w - - 2 55";
			fens[106] = "r1bk4/np1q2b1/3p2r1/p1p1pp2/5p1p/8/4n3/1K1QR3 b - - 1 54";
			fens[105] = "r1bk4/np1q2b1/3p2r1/p1p1pp2/5p1p/8/4n3/1K1Q1R2 w - c6 0 54";
			fens[104] = "r1bk4/nppq2b1/3p2r1/p3pp2/5p1p/8/4n3/1K1Q1R2 b - - 3 53";
			fens[103] = "r1bk4/nppq2b1/3p2r1/p3pp2/5p1p/8/4n3/1K1QR3 w - - 2 53";
			fens[102] = "r1bk4/nppq2b1/3p3r/p3pp2/5p1p/8/4n3/1K1QR3 b - - 1 52";
			fens[101] = "r1bk4/nppq2b1/3p3r/p3pp2/5p1p/8/4n3/1K1Q3R w - - 0 52";
			fens[100] = "r1bk4/nppq2b1/3p3r/p3pp2/5p1p/8/4B3/1KnQ3R b - - 3 51";
			fens[99] = "r1bk4/nppq2b1/3p3r/p3pp2/5p1p/8/8/1KnQ1B1R w - - 2 51";
			fens[98] = "r1bk4/nppq2b1/3p3r/p3pp2/5p1p/3n4/8/1K1Q1B1R b - - 1 50";
			fens[97] = "r1bk4/nppq2b1/3p3r/p3pp2/5p1p/3n4/4B3/1K1Q3R w - - 0 50";
			fens[96] = "r1bk4/nppq2b1/3pp2r/p4p2/5p1p/3n4/4B3/1K1Q3R b - - 17 49";
			fens[95] = "r1bk4/nppq2b1/3pp2r/p4p2/5p1p/3n4/8/1K1Q1B1R w - - 16 49";
			fens[94] = "r1bk4/1ppq2b1/2npp2r/p4p2/5p1p/3n4/8/1K1Q1B1R b - - 15 48";
			fens[93] = "r1bk4/1ppq2b1/2npp2r/p4p2/5p1p/3n4/4B3/1K1Q3R w - - 14 48";
			fens[92] = "r1bk3b/1ppq4/2npp2r/p4p2/5p1p/3n4/4B3/1K1Q3R b - - 13 47";
			fens[91] = "r1bk3b/1ppq4/2npp2r/p4p2/5p1p/3n4/8/1K1Q1B1R w - - 12 47";
			fens[90] = "r1bk3b/1pp1q3/2npp2r/p4p2/5p1p/3n4/8/1K1Q1B1R b - - 11 46";
			fens[89] = "r1bk3b/1pp1q3/2npp2r/p4p2/5p1p/3n4/4B3/1K1Q3R w - - 10 46";
			fens[88] = "r1bk3b/1pp3q1/2npp2r/p4p2/5p1p/3n4/4B3/1K1Q3R b - - 9 45";
			fens[87] = "r1bk3b/1pp3q1/2npp2r/p4p2/5p1p/3n4/8/1K1Q1B1R w - - 8 45";
			fens[86] = "r1b1k2b/1pp3q1/2npp2r/p4p2/5p1p/3n4/8/1K1Q1B1R b q - 7 44";
			fens[85] = "r1b1k2b/1pp3q1/2npp2r/p4p2/5p1p/3n4/4B3/1K1Q3R w q - 6 44";
			fens[84] = "r1b1k2b/1pp3q1/2npp2r/p3np2/5p1p/8/4B3/1K1Q3R b q - 5 43";
			fens[83] = "r1b1k2b/1pp3q1/2npp2r/p3np2/5p1p/8/8/1K1Q1B1R w q - 4 43";
			fens[82] = "r1b1k2b/1pp5/2npp2r/p3npq1/5p1p/8/8/1K1Q1B1R b q - 3 42";
			fens[81] = "r1b1k2b/1pp5/2npp2r/p3npq1/5p1p/8/4B3/1K1Q3R w q - 2 42";
			fens[80] = "r1bqk2b/1pp5/2npp2r/p3np2/5p1p/8/4B3/1K1Q3R b q - 1 41";
			fens[79] = "r1bqk2b/1pp5/2npp2r/p3np2/5p1p/8/8/1K1Q1B1R w q - 0 41";
			fens[78] = "r1bqk2b/1pp5/2npp2r/p3np1p/5p2/8/8/1K1Q1B1R b q - 1 40";
			fens[77] = "r1bqk2b/1pp5/2npp2r/p3np1p/5p2/8/4B3/1K1Q3R w q f6 0 40";
			fens[76] = "r1bqk2b/1pp2p2/2npp2r/p3n2p/5p2/8/4B3/1K1Q3R b q - 17 39";
			fens[75] = "r1bqk2b/1pp2p2/2npp2r/p3n2p/5p2/8/8/1K1Q1B1R w q - 16 39";
			fens[74] = "r1bqk2b/npp2p2/3pp2r/p3n2p/5p2/8/8/1K1Q1B1R b q - 15 38";
			fens[73] = "r1bqk2b/npp2p2/3pp2r/p3n2p/5p2/8/4B3/1K1Q3R w q - 14 38";
			fens[72] = "r1bqk2b/1pp2p2/2npp2r/p3n2p/5p2/8/4B3/1K1Q3R b q - 13 37";
			fens[71] = "r1bqk2b/1pp2p2/2npp2r/p3n2p/5p2/8/8/1K1Q1B1R w q - 12 37";
			fens[70] = "r1bqk2b/1pp1np2/3pp2r/p3n2p/5p2/8/8/1K1Q1B1R b q - 11 36";
			fens[69] = "r1bqk2b/1pp1np2/3pp2r/p3n2p/5p2/8/4B3/1K1Q3R w q - 10 36";
			fens[68] = "r1bqk2b/1ppnnp2/3pp2r/p6p/5p2/8/4B3/1K1Q3R b q - 9 35";
			fens[67] = "r1bqk2b/1ppnnp2/3pp2r/p6p/5p2/8/8/1K1Q1B1R w q - 8 35";
			fens[66] = "r1bqk3/1ppnnp2/3pp2r/p6p/5p2/8/8/bK1Q1B1R b q - 7 34";
			fens[65] = "r1bqk3/1ppnnp2/3pp2r/p6p/5p2/8/4B3/bK1Q3R w q - 6 34";
			fens[64] = "rnbqk3/1pp1np2/3pp2r/p6p/5p2/8/4B3/bK1Q3R b q - 5 33";
			fens[63] = "rnbqk3/1pp1np2/3pp2r/p6p/5p2/8/8/bK1Q1B1R w q - 4 33";
			fens[62] = "rnbqk3/1pp1npb1/3pp2r/p6p/5p2/8/8/1K1Q1B1R b q - 3 32";
			fens[61] = "rnbqk3/1pp1npb1/3pp2r/p6p/5p2/8/4B3/1K1Q3R w q - 2 32";
			fens[60] = "r1bqk3/1pp1npb1/2npp2r/p6p/5p2/8/4B3/1K1Q3R b q - 1 31";
			fens[59] = "r1bqk3/1pp1npb1/2npp2r/p6p/5p2/8/8/1K1Q1B1R w q - 0 31";
			fens[58] = "r1bqk3/1pppnpb1/2n1p2r/p6p/5p2/8/8/1K1Q1B1R b q - 1 30";
			fens[57] = "r1bqk3/1pppnpb1/2n1p2r/p6p/5p2/8/4B3/1K1Q3R w q a6 0 30";
			fens[56] = "r1bqk3/ppppnpb1/2n1p2r/7p/5p2/8/4B3/1K1Q3R b q - 9 29";
			fens[55] = "r1bqk3/ppppnpb1/2n1p2r/7p/5p2/8/8/1K1Q1B1R w q - 8 29";
			fens[54] = "rnbqk3/ppppnpb1/4p2r/7p/5p2/8/8/1K1Q1B1R b q - 7 28";
			fens[53] = "rnbqk3/ppppnpb1/4p2r/7p/5p2/8/4B3/1K1Q3R w q - 6 28";
			fens[52] = "r1bqk3/ppppnpb1/n3p2r/7p/5p2/8/4B3/1K1Q3R b q - 5 27";
			fens[51] = "r1bqk3/ppppnpb1/n3p2r/7p/5p2/8/8/1K1Q1B1R w q - 4 27";
			fens[50] = "r1bqk3/pppp1pb1/n3p2r/3n3p/5p2/8/8/1K1Q1B1R b q - 3 26";
			fens[49] = "r1bqk3/pppp1pb1/n3p2r/3n3p/5p2/8/4B3/1K1Q3R w q - 2 26";
			fens[48] = "r1bqk3/pppp1pbr/n3p3/3n3p/5p2/8/4B3/1K1Q3R b q - 1 25";
			fens[47] = "r1bqk3/pppp1pbr/n3p3/3n3p/5p2/8/8/1K1Q1B1R w q - 0 25";
			fens[46] = "r1bqk3/pppp1pbr/n3p2p/3n4/5p2/8/8/1K1Q1B1R b q - 13 24";
			fens[45] = "r1bqk3/pppp1pbr/n3p2p/3n4/5p2/8/4B3/1K1Q3R w q - 12 24";
			fens[44] = "r1bqk3/pppp1p1r/n3p2p/3n4/5p2/8/1b2B3/1K1Q3R b q - 11 23";
			fens[43] = "r1bqk3/pppp1p1r/n3p2p/3n4/5p2/8/1b6/1K1Q1B1R w q - 10 23";
			fens[42] = "r1bqk3/ppppnp1r/n3p2p/8/5p2/8/1b6/1K1Q1B1R b q - 9 22";
			fens[41] = "r1bqk3/ppppnp1r/n3p2p/8/5p2/8/1b2B3/1K1Q3R w q - 8 22";
			fens[40] = "r1bqk2r/ppppnp2/n3p2p/8/5p2/8/1b2B3/1K1Q3R b kq - 7 21";
			fens[39] = "r1bqk2r/ppppnp2/n3p2p/8/5p2/8/1b6/1K1Q1B1R w kq - 6 21";
			fens[38] = "rnbqk2r/ppppnp2/4p2p/8/5p2/8/1b6/1K1Q1B1R b kq - 5 20";
			fens[37] = "rnbqk2r/ppppnp2/4p2p/8/5p2/8/1b2B3/1K1Q3R w kq - 4 20";
			fens[36] = "rnbqk2r/ppppnp2/4p2p/8/5p2/b7/4B3/1K1Q3R b kq - 3 19";
			fens[35] = "rnbqk2r/ppppnp2/4p2p/8/5p2/b7/4B3/2KQ3R w kq - 2 19";
			fens[34] = "rnbqk2r/ppppnp2/4p2p/2b5/5p2/8/4B3/2KQ3R b kq - 1 18";
			fens[33] = "rnbqk2r/ppppnp2/4p2p/2b5/5p2/8/8/2KQ1B1R w kq - 0 18";
			fens[32] = "rnbqk2r/ppppnp1p/4p3/2b5/5p2/8/8/2KQ1B1R b kq - 3 17";
			fens[31] = "rnbqk2r/ppppnp1p/4p3/2b5/5p2/8/4B3/2KQ3R w kq - 2 17";
			fens[30] = "rnbqk1nr/pppp1p1p/4p3/2b5/5p2/8/4B3/2KQ3R b kq - 1 16";
			fens[29] = "rnbqk1nr/pppp1p1p/4p3/2b5/5p2/8/8/2KQ1B1R w kq - 0 16";
			fens[28] = "rnbqk1nr/pppp1p1p/4p3/2P5/3b1p2/8/8/2KQ1B1R b kq - 0 15";
			fens[27] = "rnbqk1nr/pppp1p1p/4p3/8/2Pb1p2/8/8/2KQ1B1R w kq - 0 15";
			fens[26] = "rnbqk1nr/pppp1p1p/4p3/6p1/2Pb1P2/8/8/2KQ1B1R b kq - 0 14";
			fens[25] = "rnbqk1nr/pppp1p1p/4p3/6p1/2Pb4/5P2/8/2KQ1B1R w kq - 0 14";
			fens[24] = "rnbqk1nr/pppp1p1p/4p3/6p1/2PP4/5P2/8/b1KQ1B1R b kq - 0 13";
			fens[23] = "rnbqk1nr/pppp1p1p/4p3/6p1/2P5/3P1P2/8/b1KQ1B1R w kq - 0 13";
			fens[22] = "rnbqk1nr/pppp1p1p/4p3/6p1/2P5/2bP1P2/8/R1KQ1B1R b kq - 1 12";
			fens[21] = "rnbqk1nr/pppp1p1p/4p3/6p1/2P5/2bP1P2/3K4/R2Q1B1R w kq - 0 12";
			fens[20] = "rnbqk1nr/pppp1p1p/4p3/6p1/1bP5/2NP1P2/3K4/R2Q1B1R b kq - 1 11";
			fens[19] = "rnbqk1nr/pppp1p1p/4p3/6p1/1bP5/3P1P2/3K4/RN1Q1B1R w kq - 0 11";
			fens[18] = "rnbqk1nr/pppp1p1p/3bp3/6p1/1PP5/3P1P2/3K4/RN1Q1B1R b kq - 0 10";
			fens[17] = "rnbqk1nr/pppp1p1p/3bp3/6p1/1P6/2PP1P2/3K4/RN1Q1B1R w kq - 2 10";
			fens[16] = "rnbqk1nr/pppp1p1p/4p3/6p1/1P6/2PP1Pb1/3K4/RN1Q1B1R b kq - 1 9";
			fens[15] = "rnbqk1nr/pppp1p1p/4p3/6p1/1P6/2PP1Pb1/8/RN1QKB1R w KQkq - 0 9";
			fens[14] = "rnbqk1nr/pppp1p1p/4p3/6p1/1P6/2PP1PP1/7b/RN1QKB1R b KQkq - 0 8";
			fens[13] = "rnbqk1nr/pppp1p1p/4p3/6p1/8/1PPP1PP1/7b/RN1QKB1R w KQkq - 0 8";
			fens[12] = "rnbqk1nr/pppp1p1p/4p3/6p1/8/1PPP1PP1/7P/RN1QKBbR b KQkq - 0 7";
			fens[11] = "rnbqk1nr/pppp1p1p/4p3/6p1/8/1PPP1P2/6PP/RN1QKBbR w KQkq - 0 7";
			fens[10] = "rnbqk1nr/pppp1p1p/4p3/6p1/8/1PPPbP2/6PP/RN1QKBNR b KQkq - 0 6";
			fens[9] = "rnbqk1nr/pppp1p1p/4p3/6p1/8/1PPPb3/5PPP/RN1QKBNR w KQkq - 0 6";
			fens[8] = "rnbqk1nr/pppp1p1p/4p3/6p1/8/1PPPP3/5PPP/RNbQKBNR b KQkq - 0 5";
			fens[7] = "rnbqk1nr/pppp1p1p/4p3/6p1/8/1PPP4/4PPPP/RNbQKBNR w KQkq g6 0 5";
			fens[6] = "rnbqk1nr/pppp1ppp/4p3/8/8/1PPP4/4PPPP/RNbQKBNR b KQkq - 0 4";
			fens[5] = "rnbqk1nr/pppp1ppp/4p3/8/8/1PP5/3PPPPP/RNbQKBNR w KQkq - 0 4";
			fens[4] = "rnbqk1nr/pppp1ppp/4p3/8/8/bPP5/3PPPPP/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqk1nr/pppp1ppp/4p3/8/8/bP6/2PPPPPP/RNBQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/4p3/8/8/PP6/2PPPPPP/RNBQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/4p3/8/8/P7/1PPPPPPP/RNBQKBNR w KQkq - 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test57", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test57: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test58() return boolean is
			@noparse
			LOG::LogInfo(message: "test58: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 e7e5 b2b3 d7d5";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/8/PP6/2PPPPPP/RNBQKBNR w KQkq d6 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/8/PP6/2PPPPPP/RNBQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/P7/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test58", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test58: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test59() return boolean is
			@noparse
			LOG::LogInfo(message: "test59: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 d7d5";
			fens[1] = "rnbqkbnr/ppp1pppp/8/3p4/8/P7/1PPPPPPP/RNBQKBNR w KQkq d6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test59", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test59: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test6() return boolean is
			@noparse
			LOG::LogInfo(message: "test6: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 b8a6";
			fens[1] = "r1bqkbnr/pppppppp/n7/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 1 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test6", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test6: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test60() return boolean is
			@noparse
			LOG::LogInfo(message: "test60: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 a7a5 d2d4 e7e5 d4e5 f7f6 e5f6 d7d5 e4d5 h7h6 f6g7 c7c5 g7h8q h6h5 h8g8 c8g4 d1d3 b8a6 d3g6 e8e7 g6f7 e7d6 f7e6 d6c7 d5d6 f8d6 g8f7 c7b6 e6b3 a6b4 f1c4 g4f5 b3a4 b4a6 a4b5 b6a7 f7b7";
			fens[36] = "r2q4/kQ6/n2b4/pQp2b1p/2B5/8/PPP2PPP/RNB1K1NR b KQ - 0 19";
			fens[35] = "r2q4/kp3Q2/n2b4/pQp2b1p/2B5/8/PPP2PPP/RNB1K1NR w KQ - 10 19";
			fens[34] = "r2q4/1p3Q2/nk1b4/pQp2b1p/2B5/8/PPP2PPP/RNB1K1NR b KQ - 9 18";
			fens[33] = "r2q4/1p3Q2/nk1b4/p1p2b1p/Q1B5/8/PPP2PPP/RNB1K1NR w KQ - 8 18";
			fens[32] = "r2q4/1p3Q2/1k1b4/p1p2b1p/QnB5/8/PPP2PPP/RNB1K1NR b KQ - 7 17";
			fens[31] = "r2q4/1p3Q2/1k1b4/p1p2b1p/1nB5/1Q6/PPP2PPP/RNB1K1NR w KQ - 6 17";
			fens[30] = "r2q4/1p3Q2/1k1b4/p1p4p/1nB3b1/1Q6/PPP2PPP/RNB1K1NR b KQ - 5 16";
			fens[29] = "r2q4/1p3Q2/1k1b4/p1p4p/1n4b1/1Q6/PPP2PPP/RNB1KBNR w KQ - 4 16";
			fens[28] = "r2q4/1p3Q2/nk1b4/p1p4p/6b1/1Q6/PPP2PPP/RNB1KBNR b KQ - 3 15";
			fens[27] = "r2q4/1p3Q2/nk1bQ3/p1p4p/6b1/8/PPP2PPP/RNB1KBNR w KQ - 2 15";
			fens[26] = "r2q4/1pk2Q2/n2bQ3/p1p4p/6b1/8/PPP2PPP/RNB1KBNR b KQ - 1 14";
			fens[25] = "r2q2Q1/1pk5/n2bQ3/p1p4p/6b1/8/PPP2PPP/RNB1KBNR w KQ - 0 14";
			fens[24] = "r2q1bQ1/1pk5/n2PQ3/p1p4p/6b1/8/PPP2PPP/RNB1KBNR b KQ - 0 13";
			fens[23] = "r2q1bQ1/1pk5/n3Q3/p1pP3p/6b1/8/PPP2PPP/RNB1KBNR w KQ - 9 13";
			fens[22] = "r2q1bQ1/1p6/n2kQ3/p1pP3p/6b1/8/PPP2PPP/RNB1KBNR b KQ - 8 12";
			fens[21] = "r2q1bQ1/1p3Q2/n2k4/p1pP3p/6b1/8/PPP2PPP/RNB1KBNR w KQ - 7 12";
			fens[20] = "r2q1bQ1/1p2kQ2/n7/p1pP3p/6b1/8/PPP2PPP/RNB1KBNR b KQ - 6 11";
			fens[19] = "r2q1bQ1/1p2k3/n5Q1/p1pP3p/6b1/8/PPP2PPP/RNB1KBNR w KQ - 5 11";
			fens[18] = "r2qkbQ1/1p6/n5Q1/p1pP3p/6b1/8/PPP2PPP/RNB1KBNR b KQq - 4 10";
			fens[17] = "r2qkbQ1/1p6/n7/p1pP3p/6b1/3Q4/PPP2PPP/RNB1KBNR w KQq - 3 10";
			fens[16] = "rn1qkbQ1/1p6/8/p1pP3p/6b1/3Q4/PPP2PPP/RNB1KBNR b KQq - 2 9";
			fens[15] = "rn1qkbQ1/1p6/8/p1pP3p/6b1/8/PPP2PPP/RNBQKBNR w KQq - 1 9";
			fens[14] = "rnbqkbQ1/1p6/8/p1pP3p/8/8/PPP2PPP/RNBQKBNR b KQq - 0 8";
			fens[13] = "rnbqkbnQ/1p6/8/p1pP3p/8/8/PPP2PPP/RNBQKBNR w KQq - 0 8";
			fens[12] = "rnbqkbnQ/1p6/7p/p1pP4/8/8/PPP2PPP/RNBQKBNR b KQq - 0 7";
			fens[11] = "rnbqkbnr/1p4P1/7p/p1pP4/8/8/PPP2PPP/RNBQKBNR w KQkq c6 0 7";
			fens[10] = "rnbqkbnr/1pp3P1/7p/p2P4/8/8/PPP2PPP/RNBQKBNR b KQkq - 0 6";
			fens[9] = "rnbqkbnr/1pp3p1/5P1p/p2P4/8/8/PPP2PPP/RNBQKBNR w KQkq - 0 6";
			fens[8] = "rnbqkbnr/1pp3pp/5P2/p2P4/8/8/PPP2PPP/RNBQKBNR b KQkq - 0 5";
			fens[7] = "rnbqkbnr/1pp3pp/5P2/p2p4/4P3/8/PPP2PPP/RNBQKBNR w KQkq d6 0 5";
			fens[6] = "rnbqkbnr/1ppp2pp/5P2/p7/4P3/8/PPP2PPP/RNBQKBNR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/1ppp2pp/5p2/p3P3/4P3/8/PPP2PPP/RNBQKBNR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/1ppp1ppp/8/p3P3/4P3/8/PPP2PPP/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/1ppp1ppp/8/p3p3/3PP3/8/PPP2PPP/RNBQKBNR w KQkq e6 0 3";
			fens[2] = "rnbqkbnr/1ppppppp/8/p7/3PP3/8/PPP2PPP/RNBQKBNR b KQkq d3 0 2";
			fens[1] = "rnbqkbnr/1ppppppp/8/p7/4P3/8/PPPP1PPP/RNBQKBNR w KQkq a6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test60", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test60: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test61() return boolean is
			@noparse
			LOG::LogInfo(message: "test61: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 e7e5 b2b3 d7d5 c2c3 f7f6 d2d3 c7c6 e2e4 d5e4 f2f3";
			fens[10] = "rnbqkbnr/pp4pp/2p2p2/4p3/4p3/PPPP1P2/6PP/RNBQKBNR b KQkq - 0 6";
			fens[9] = "rnbqkbnr/pp4pp/2p2p2/4p3/4p3/PPPP4/5PPP/RNBQKBNR w KQkq - 0 6";
			fens[8] = "rnbqkbnr/pp4pp/2p2p2/3pp3/4P3/PPPP4/5PPP/RNBQKBNR b KQkq e3 0 5";
			fens[7] = "rnbqkbnr/pp4pp/2p2p2/3pp3/8/PPPP4/4PPPP/RNBQKBNR w KQkq - 0 5";
			fens[6] = "rnbqkbnr/ppp3pp/5p2/3pp3/8/PPPP4/4PPPP/RNBQKBNR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/ppp3pp/5p2/3pp3/8/PPP5/3PPPPP/RNBQKBNR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3pp3/8/PPP5/3PPPPP/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/8/PP6/2PPPPPP/RNBQKBNR w KQkq d6 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/8/PP6/2PPPPPP/RNBQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/P7/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test61", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test61: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test62() return boolean is
			@noparse
			LOG::LogInfo(message: "test62: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 a7a5 f2f4";
			fens[2] = "rnbqkbnr/1ppppppp/8/p7/4PP2/8/PPPP2PP/RNBQKBNR b KQkq f3 0 2";
			fens[1] = "rnbqkbnr/1ppppppp/8/p7/4P3/8/PPPP1PPP/RNBQKBNR w KQkq a6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test62", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test62: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test63() return boolean is
			@noparse
			LOG::LogInfo(message: "test63: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 e7e5 b2b3 d7d5 c2c3 f7f5 d2d3 c7c5 e2e3 b7b5 f2f3 a7a5 g2g3 g7g5 h2h3 h7h5 a3a4 h8h6 a4b5 a8a6 b5a6 b8a6 b3b4 a5b4 c3b4 c5b4 d3d4 e5d4 e3d4 d8b6 f3f4 f8c5 d4c5 b6c5 f4g5 c5c1 g5h6 c1d1 e1d1 g8h6 g3g4 h5g4 h3g4 h6g4 b1d2 f5f4 g1e2 f4f3 d2f3 d5d4 e2d4 b4b3 d4b3 a6b4 b3c1 b4d3 c1a2 d3b2 d1c1 b2d3 f1d3 g4f2 a2c3 f2h1 c3b1 c8g4 b1d2 h1f2 d2b1 g4f3 b1d2 f2d3 c1b1 f3d5 d2f1 d3b4 f1d2 b4c6 d2f1 c6d4 f1d2 d4b3 d2b3 d5b3 a1a2 b3a2";
			fens[85] = "4k3/8/8/8/8/8/b7/1K6 w - - 0 44";
			fens[84] = "4k3/8/8/8/8/1b6/R7/1K6 b - - 1 43";
			fens[83] = "4k3/8/8/8/8/1b6/8/RK6 w - - 0 43";
			fens[82] = "4k3/8/8/3b4/8/1N6/8/RK6 b - - 0 42";
			fens[81] = "4k3/8/8/3b4/8/1n6/3N4/RK6 w - - 10 42";
			fens[80] = "4k3/8/8/3b4/3n4/8/3N4/RK6 b - - 9 41";
			fens[79] = "4k3/8/8/3b4/3n4/8/8/RK3N2 w - - 8 41";
			fens[78] = "4k3/8/2n5/3b4/8/8/8/RK3N2 b - - 7 40";
			fens[77] = "4k3/8/2n5/3b4/8/8/3N4/RK6 w - - 6 40";
			fens[76] = "4k3/8/8/3b4/1n6/8/3N4/RK6 b - - 5 39";
			fens[75] = "4k3/8/8/3b4/1n6/8/8/RK3N2 w - - 4 39";
			fens[74] = "4k3/8/8/3b4/8/3n4/8/RK3N2 b - - 3 38";
			fens[73] = "4k3/8/8/3b4/8/3n4/3N4/RK6 w - - 2 38";
			fens[72] = "4k3/8/8/8/8/3n1b2/3N4/RK6 b - - 1 37";
			fens[71] = "4k3/8/8/8/8/3n1b2/3N4/R1K5 w - - 0 37";
			fens[70] = "4k3/8/8/8/8/3B1b2/3N1n2/R1K5 b - - 1 36";
			fens[69] = "4k3/8/8/8/8/3B1b2/5n2/RNK5 w - - 0 36";
			fens[68] = "4k3/8/8/8/6b1/3B1N2/5n2/RNK5 b - - 5 35";
			fens[67] = "4k3/8/8/8/6b1/3B1N2/3N1n2/R1K5 w - - 4 35";
			fens[66] = "4k3/8/8/8/6b1/3B1N2/3N4/R1K4n b - - 3 34";
			fens[65] = "4k3/8/8/8/6b1/3B1N2/8/RNK4n w - - 2 34";
			fens[64] = "2b1k3/8/8/8/8/3B1N2/8/RNK4n b - - 1 33";
			fens[63] = "2b1k3/8/8/8/8/2NB1N2/8/R1K4n w - - 0 33";
			fens[62] = "2b1k3/8/8/8/8/2NB1N2/5n2/R1K4R b - - 2 32";
			fens[61] = "2b1k3/8/8/8/8/3B1N2/N4n2/R1K4R w - - 1 32";
			fens[60] = "2b1k3/8/8/8/6n1/3B1N2/N7/R1K4R b - - 0 31";
			fens[59] = "2b1k3/8/8/8/6n1/3n1N2/N7/R1K2B1R w - - 7 31";
			fens[58] = "2b1k3/8/8/8/6n1/5N2/Nn6/R1K2B1R b - - 6 30";
			fens[57] = "2b1k3/8/8/8/6n1/5N2/Nn6/R2K1B1R w - - 5 30";
			fens[56] = "2b1k3/8/8/8/6n1/3n1N2/N7/R2K1B1R b - - 4 29";
			fens[55] = "2b1k3/8/8/8/6n1/3n1N2/8/R1NK1B1R w - - 3 29";
			fens[54] = "2b1k3/8/8/8/1n4n1/5N2/8/R1NK1B1R b - - 2 28";
			fens[53] = "2b1k3/8/8/8/1n4n1/1N3N2/8/R2K1B1R w - - 1 28";
			fens[52] = "2b1k3/8/n7/8/6n1/1N3N2/8/R2K1B1R b - - 0 27";
			fens[51] = "2b1k3/8/n7/8/3N2n1/1p3N2/8/R2K1B1R w - - 0 27";
			fens[50] = "2b1k3/8/n7/8/1p1N2n1/5N2/8/R2K1B1R b - - 0 26";
			fens[49] = "2b1k3/8/n7/8/1p1p2n1/5N2/4N3/R2K1B1R w - - 0 26";
			fens[48] = "2b1k3/8/n7/3p4/1p4n1/5N2/4N3/R2K1B1R b - - 0 25";
			fens[47] = "2b1k3/8/n7/3p4/1p4n1/5p2/3NN3/R2K1B1R w - - 0 25";
			fens[46] = "2b1k3/8/n7/3p4/1p3pn1/8/3NN3/R2K1B1R b - - 1 24";
			fens[45] = "2b1k3/8/n7/3p4/1p3pn1/8/3N4/R2K1BNR w - - 0 24";
			fens[44] = "2b1k3/8/n7/3p1p2/1p4n1/8/3N4/R2K1BNR b - - 1 23";
			fens[43] = "2b1k3/8/n7/3p1p2/1p4n1/8/8/RN1K1BNR w - - 0 23";
			fens[42] = "2b1k3/8/n6n/3p1p2/1p4P1/8/8/RN1K1BNR b - - 0 22";
			fens[41] = "2b1k3/8/n6n/3p1p2/1p4p1/7P/8/RN1K1BNR w - - 0 22";
			fens[40] = "2b1k3/8/n6n/3p1p1p/1p4P1/7P/8/RN1K1BNR b - - 0 21";
			fens[39] = "2b1k3/8/n6n/3p1p1p/1p6/6PP/8/RN1K1BNR w - - 0 21";
			fens[38] = "2b1k1n1/8/n6P/3p1p1p/1p6/6PP/8/RN1K1BNR b - - 0 20";
			fens[37] = "2b1k1n1/8/n6P/3p1p1p/1p6/6PP/8/RN1qKBNR w KQ - 0 20";
			fens[36] = "2b1k1n1/8/n6P/3p1p1p/1p6/6PP/8/RNqQKBNR b KQ - 0 19";
			fens[35] = "2b1k1n1/8/n6r/3p1pPp/1p6/6PP/8/RNqQKBNR w KQ - 0 19";
			fens[34] = "2b1k1n1/8/n6r/2qp1pPp/1p6/6PP/8/RNBQKBNR b KQ - 0 18";
			fens[33] = "2b1k1n1/8/n6r/2qp1ppp/1p3P2/6PP/8/RNBQKBNR w KQ - 0 18";
			fens[32] = "2b1k1n1/8/nq5r/2Pp1ppp/1p3P2/6PP/8/RNBQKBNR b KQ - 0 17";
			fens[31] = "2b1k1n1/8/nq5r/2bp1ppp/1p1P1P2/6PP/8/RNBQKBNR w KQ - 1 17";
			fens[30] = "2b1kbn1/8/nq5r/3p1ppp/1p1P1P2/6PP/8/RNBQKBNR b KQ - 0 16";
			fens[29] = "2b1kbn1/8/nq5r/3p1ppp/1p1P4/5PPP/8/RNBQKBNR w KQ - 1 16";
			fens[28] = "2bqkbn1/8/n6r/3p1ppp/1p1P4/5PPP/8/RNBQKBNR b KQ - 0 15";
			fens[27] = "2bqkbn1/8/n6r/3p1ppp/1p1p4/4PPPP/8/RNBQKBNR w KQ - 0 15";
			fens[26] = "2bqkbn1/8/n6r/3ppppp/1p1P4/4PPPP/8/RNBQKBNR b KQ - 0 14";
			fens[25] = "2bqkbn1/8/n6r/3ppppp/1p6/3PPPPP/8/RNBQKBNR w KQ - 0 14";
			fens[24] = "2bqkbn1/8/n6r/2pppppp/1P6/3PPPPP/8/RNBQKBNR b KQ - 0 13";
			fens[23] = "2bqkbn1/8/n6r/2pppppp/1p6/2PPPPPP/8/RNBQKBNR w KQ - 0 13";
			fens[22] = "2bqkbn1/8/n6r/p1pppppp/1P6/2PPPPPP/8/RNBQKBNR b KQ - 0 12";
			fens[21] = "2bqkbn1/8/n6r/p1pppppp/8/1PPPPPPP/8/RNBQKBNR w KQ - 0 12";
			fens[20] = "1nbqkbn1/8/P6r/p1pppppp/8/1PPPPPPP/8/RNBQKBNR b KQ - 0 11";
			fens[19] = "1nbqkbn1/8/r6r/pPpppppp/8/1PPPPPPP/8/RNBQKBNR w KQ - 1 11";
			fens[18] = "rnbqkbn1/8/7r/pPpppppp/8/1PPPPPPP/8/RNBQKBNR b KQq - 0 10";
			fens[17] = "rnbqkbn1/8/7r/pppppppp/P7/1PPPPPPP/8/RNBQKBNR w KQq - 1 10";
			fens[16] = "rnbqkbnr/8/8/pppppppp/P7/1PPPPPPP/8/RNBQKBNR b KQkq - 0 9";
			fens[15] = "rnbqkbnr/8/8/pppppppp/8/PPPPPPPP/8/RNBQKBNR w KQkq h6 0 9";
			fens[14] = "rnbqkbnr/7p/8/ppppppp1/8/PPPPPPPP/8/RNBQKBNR b KQkq - 0 8";
			fens[13] = "rnbqkbnr/7p/8/ppppppp1/8/PPPPPPP1/7P/RNBQKBNR w KQkq g6 0 8";
			fens[12] = "rnbqkbnr/6pp/8/pppppp2/8/PPPPPPP1/7P/RNBQKBNR b KQkq - 0 7";
			fens[11] = "rnbqkbnr/6pp/8/pppppp2/8/PPPPPP2/6PP/RNBQKBNR w KQkq a6 0 7";
			fens[10] = "rnbqkbnr/p5pp/8/1ppppp2/8/PPPPPP2/6PP/RNBQKBNR b KQkq - 0 6";
			fens[9] = "rnbqkbnr/p5pp/8/1ppppp2/8/PPPPP3/5PPP/RNBQKBNR w KQkq b6 0 6";
			fens[8] = "rnbqkbnr/pp4pp/8/2pppp2/8/PPPPP3/5PPP/RNBQKBNR b KQkq - 0 5";
			fens[7] = "rnbqkbnr/pp4pp/8/2pppp2/8/PPPP4/4PPPP/RNBQKBNR w KQkq c6 0 5";
			fens[6] = "rnbqkbnr/ppp3pp/8/3ppp2/8/PPPP4/4PPPP/RNBQKBNR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/ppp3pp/8/3ppp2/8/PPP5/3PPPPP/RNBQKBNR w KQkq f6 0 4";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3pp3/8/PPP5/3PPPPP/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/8/PP6/2PPPPPP/RNBQKBNR w KQkq d6 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/8/PP6/2PPPPPP/RNBQKBNR b KQkq - 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/P7/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test63", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test63: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test64() return boolean is
			@noparse
			LOG::LogInfo(message: "test64: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 d7d6 d1h5 d6d5 e4d5 b7b5 d5d6 c7d6 f1b5 b8d7 h5f3 a7a5 f3a8 e7e5 a8a5 f7f5 a5d8 e8f7 b5c4 d6d5 d8c8 e5e4 c8d7 f7f6 d7d5 g7g5 d5e6 f6g7 e6f7 g7h6 c4e2 e4e3 f2e3 f8a3 f7h5 h6g7 e2c4 g5g4 h5f7 g7h6 g1f3 f5f4 f3e5 g4g3 e5g4 h6g5 h2h3 h7h5 f7f6 g8f6 e3e4 h5h4 e4e5 f6e4 d2d3 e4d2 c1d2 a3b4 d2b4 h8h5 h1f1 f4f3 f1f3 h5h6 f3f6 h6h5 b4d2";
			fens[66] = "8/8/5R2/4P1kr/2B3Np/3P2pP/PPPB2P1/RN2K3 b Q - 4 34";
			fens[65] = "8/8/5R2/4P1kr/1BB3Np/3P2pP/PPP3P1/RN2K3 w Q - 3 34";
			fens[64] = "8/8/5R1r/4P1k1/1BB3Np/3P2pP/PPP3P1/RN2K3 b Q - 2 33";
			fens[63] = "8/8/7r/4P1k1/1BB3Np/3P1RpP/PPP3P1/RN2K3 w Q - 1 33";
			fens[62] = "8/8/8/4P1kr/1BB3Np/3P1RpP/PPP3P1/RN2K3 b Q - 0 32";
			fens[61] = "8/8/8/4P1kr/1BB3Np/3P1ppP/PPP3P1/RN2KR2 w Q - 0 32";
			fens[60] = "8/8/8/4P1kr/1BB2pNp/3P2pP/PPP3P1/RN2KR2 b Q - 2 31";
			fens[59] = "8/8/8/4P1kr/1BB2pNp/3P2pP/PPP3P1/RN2K2R w KQ - 1 31";
			fens[58] = "7r/8/8/4P1k1/1BB2pNp/3P2pP/PPP3P1/RN2K2R b KQ - 0 30";
			fens[57] = "7r/8/8/4P1k1/1bB2pNp/3P2pP/PPPB2P1/RN2K2R w KQ - 1 30";
			fens[56] = "7r/8/8/4P1k1/2B2pNp/b2P2pP/PPPB2P1/RN2K2R b KQ - 0 29";
			fens[55] = "7r/8/8/4P1k1/2B2pNp/b2P2pP/PPPn2P1/RNB1K2R w KQ - 1 29";
			fens[54] = "7r/8/8/4P1k1/2B1npNp/b2P2pP/PPP3P1/RNB1K2R b KQ - 0 28";
			fens[53] = "7r/8/8/4P1k1/2B1npNp/b5pP/PPPP2P1/RNB1K2R w KQ - 1 28";
			fens[52] = "7r/8/5n2/4P1k1/2B2pNp/b5pP/PPPP2P1/RNB1K2R b KQ - 0 27";
			fens[51] = "7r/8/5n2/6k1/2B1PpNp/b5pP/PPPP2P1/RNB1K2R w KQ - 0 27";
			fens[50] = "7r/8/5n2/6kp/2B1PpN1/b5pP/PPPP2P1/RNB1K2R b KQ - 0 26";
			fens[49] = "7r/8/5n2/6kp/2B2pN1/b3P1pP/PPPP2P1/RNB1K2R w KQ - 0 26";
			fens[48] = "6nr/8/5Q2/6kp/2B2pN1/b3P1pP/PPPP2P1/RNB1K2R b KQ - 1 25";
			fens[47] = "6nr/5Q2/8/6kp/2B2pN1/b3P1pP/PPPP2P1/RNB1K2R w KQ h6 0 25";
			fens[46] = "6nr/5Q1p/8/6k1/2B2pN1/b3P1pP/PPPP2P1/RNB1K2R b KQ - 0 24";
			fens[45] = "6nr/5Q1p/8/6k1/2B2pN1/b3P1p1/PPPP2PP/RNB1K2R w KQ - 2 24";
			fens[44] = "6nr/5Q1p/7k/8/2B2pN1/b3P1p1/PPPP2PP/RNB1K2R b KQ - 1 23";
			fens[43] = "6nr/5Q1p/7k/4N3/2B2p2/b3P1p1/PPPP2PP/RNB1K2R w KQ - 0 23";
			fens[42] = "6nr/5Q1p/7k/4N3/2B2pp1/b3P3/PPPP2PP/RNB1K2R b KQ - 1 22";
			fens[41] = "6nr/5Q1p/7k/8/2B2pp1/b3PN2/PPPP2PP/RNB1K2R w KQ - 0 22";
			fens[40] = "6nr/5Q1p/7k/5p2/2B3p1/b3PN2/PPPP2PP/RNB1K2R b KQ - 3 21";
			fens[39] = "6nr/5Q1p/7k/5p2/2B3p1/b3P3/PPPP2PP/RNB1K1NR w KQ - 2 21";
			fens[38] = "6nr/5Qkp/8/5p2/2B3p1/b3P3/PPPP2PP/RNB1K1NR b KQ - 1 20";
			fens[37] = "6nr/6kp/8/5p1Q/2B3p1/b3P3/PPPP2PP/RNB1K1NR w KQ - 0 20";
			fens[36] = "6nr/6kp/8/5ppQ/2B5/b3P3/PPPP2PP/RNB1K1NR b KQ - 4 19";
			fens[35] = "6nr/6kp/8/5ppQ/8/b3P3/PPPPB1PP/RNB1K1NR w KQ - 3 19";
			fens[34] = "6nr/7p/7k/5ppQ/8/b3P3/PPPPB1PP/RNB1K1NR b KQ - 2 18";
			fens[33] = "6nr/5Q1p/7k/5pp1/8/b3P3/PPPPB1PP/RNB1K1NR w KQ - 1 18";
			fens[32] = "5bnr/5Q1p/7k/5pp1/8/4P3/PPPPB1PP/RNB1K1NR b KQ - 0 17";
			fens[31] = "5bnr/5Q1p/7k/5pp1/8/4p3/PPPPBPPP/RNB1K1NR w KQ - 0 17";
			fens[30] = "5bnr/5Q1p/7k/5pp1/4p3/8/PPPPBPPP/RNB1K1NR b KQ - 5 16";
			fens[29] = "5bnr/5Q1p/7k/5pp1/2B1p3/8/PPPP1PPP/RNB1K1NR w KQ - 4 16";
			fens[28] = "5bnr/5Qkp/8/5pp1/2B1p3/8/PPPP1PPP/RNB1K1NR b KQ - 3 15";
			fens[27] = "5bnr/6kp/4Q3/5pp1/2B1p3/8/PPPP1PPP/RNB1K1NR w KQ - 2 15";
			fens[26] = "5bnr/7p/4Qk2/5pp1/2B1p3/8/PPPP1PPP/RNB1K1NR b KQ - 1 14";
			fens[25] = "5bnr/7p/5k2/3Q1pp1/2B1p3/8/PPPP1PPP/RNB1K1NR w KQ g6 0 14";
			fens[24] = "5bnr/6pp/5k2/3Q1p2/2B1p3/8/PPPP1PPP/RNB1K1NR b KQ - 0 13";
			fens[23] = "5bnr/3Q2pp/5k2/3p1p2/2B1p3/8/PPPP1PPP/RNB1K1NR w KQ - 1 13";
			fens[22] = "5bnr/3Q1kpp/8/3p1p2/2B1p3/8/PPPP1PPP/RNB1K1NR b KQ - 0 12";
			fens[21] = "2Q2bnr/3n1kpp/8/3p1p2/2B1p3/8/PPPP1PPP/RNB1K1NR w KQ - 0 12";
			fens[20] = "2Q2bnr/3n1kpp/8/3ppp2/2B5/8/PPPP1PPP/RNB1K1NR b KQ - 0 11";
			fens[19] = "2bQ1bnr/3n1kpp/8/3ppp2/2B5/8/PPPP1PPP/RNB1K1NR w KQ - 0 11";
			fens[18] = "2bQ1bnr/3n1kpp/3p4/4pp2/2B5/8/PPPP1PPP/RNB1K1NR b KQ - 2 10";
			fens[17] = "2bQ1bnr/3n1kpp/3p4/1B2pp2/8/8/PPPP1PPP/RNB1K1NR w KQ - 1 10";
			fens[16] = "2bQkbnr/3n2pp/3p4/1B2pp2/8/8/PPPP1PPP/RNB1K1NR b KQk - 0 9";
			fens[15] = "2bqkbnr/3n2pp/3p4/QB2pp2/8/8/PPPP1PPP/RNB1K1NR w KQk f6 0 9";
			fens[14] = "2bqkbnr/3n1ppp/3p4/QB2p3/8/8/PPPP1PPP/RNB1K1NR b KQk - 0 8";
			fens[13] = "Q1bqkbnr/3n1ppp/3p4/pB2p3/8/8/PPPP1PPP/RNB1K1NR w KQk e6 0 8";
			fens[12] = "Q1bqkbnr/3npppp/3p4/pB6/8/8/PPPP1PPP/RNB1K1NR b KQk - 0 7";
			fens[11] = "r1bqkbnr/3npppp/3p4/pB6/8/5Q2/PPPP1PPP/RNB1K1NR w KQkq a6 0 7";
			fens[10] = "r1bqkbnr/p2npppp/3p4/1B6/8/5Q2/PPPP1PPP/RNB1K1NR b KQkq - 2 6";
			fens[9] = "r1bqkbnr/p2npppp/3p4/1B5Q/8/8/PPPP1PPP/RNB1K1NR w KQkq - 1 6";
			fens[8] = "rnbqkbnr/p3pppp/3p4/1B5Q/8/8/PPPP1PPP/RNB1K1NR b KQkq - 0 5";
			fens[7] = "rnbqkbnr/p3pppp/3p4/1p5Q/8/8/PPPP1PPP/RNB1KBNR w KQkq - 0 5";
			fens[6] = "rnbqkbnr/p1p1pppp/3P4/1p5Q/8/8/PPPP1PPP/RNB1KBNR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/p1p1pppp/8/1p1P3Q/8/8/PPPP1PPP/RNB1KBNR w KQkq b6 0 4";
			fens[4] = "rnbqkbnr/ppp1pppp/8/3P3Q/8/8/PPPP1PPP/RNB1KBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/ppp1pppp/8/3p3Q/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/ppp1pppp/3p4/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/ppp1pppp/3p4/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test64", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test64: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test65() return boolean is
			@noparse
			LOG::LogInfo(message: "test65: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 a7a6 d2d4 a6a5 b2b4 a5b4 c2c3 b4c3 b1c3 b7b6 c3a4 c7c6 a4b6 c6c5 b6a8 e7e5 d4e5 f7f5 e4f5 g7g5 f5g6 d7d5 e5d6 b8a6 g2g3 a6b4 f1h3 b4c2 e1f1 d8a5 h3c8 h7h5 d1c2 g8h6 c1d2 h6g4 d2a5 h5h4 c2c3 h4h3 c3h8 g4e3 f2e3 c5c4 a1c1 c4c3 c1c3";
			fens[46] = "N1B1kb1Q/8/3P2P1/B7/8/2R1P1Pp/P6P/5KNR b - - 0 24";
			fens[45] = "N1B1kb1Q/8/3P2P1/B7/8/2p1P1Pp/P6P/2R2KNR w - - 0 24";
			fens[44] = "N1B1kb1Q/8/3P2P1/B7/2p5/4P1Pp/P6P/2R2KNR b - - 1 23";
			fens[43] = "N1B1kb1Q/8/3P2P1/B7/2p5/4P1Pp/P6P/R4KNR w - - 0 23";
			fens[42] = "N1B1kb1Q/8/3P2P1/B1p5/8/4P1Pp/P6P/R4KNR b - - 0 22";
			fens[41] = "N1B1kb1Q/8/3P2P1/B1p5/8/4n1Pp/P4P1P/R4KNR w - - 1 22";
			fens[40] = "N1B1kb1Q/8/3P2P1/B1p5/6n1/6Pp/P4P1P/R4KNR b - - 0 21";
			fens[39] = "N1B1kb1r/8/3P2P1/B1p5/6n1/2Q3Pp/P4P1P/R4KNR w k - 0 21";
			fens[38] = "N1B1kb1r/8/3P2P1/B1p5/6np/2Q3P1/P4P1P/R4KNR b k - 1 20";
			fens[37] = "N1B1kb1r/8/3P2P1/B1p5/6np/6P1/P1Q2P1P/R4KNR w k - 0 20";
			fens[36] = "N1B1kb1r/8/3P2P1/B1p4p/6n1/6P1/P1Q2P1P/R4KNR b k - 0 19";
			fens[35] = "N1B1kb1r/8/3P2P1/q1p4p/6n1/6P1/P1QB1P1P/R4KNR w k - 3 19";
			fens[34] = "N1B1kb1r/8/3P2Pn/q1p4p/8/6P1/P1QB1P1P/R4KNR b k - 2 18";
			fens[33] = "N1B1kb1r/8/3P2Pn/q1p4p/8/6P1/P1Q2P1P/R1B2KNR w k - 1 18";
			fens[32] = "N1B1kbnr/8/3P2P1/q1p4p/8/6P1/P1Q2P1P/R1B2KNR b k - 0 17";
			fens[31] = "N1B1kbnr/8/3P2P1/q1p4p/8/6P1/P1n2P1P/R1BQ1KNR w k h6 0 17";
			fens[30] = "N1B1kbnr/7p/3P2P1/q1p5/8/6P1/P1n2P1P/R1BQ1KNR b k - 0 16";
			fens[29] = "N1b1kbnr/7p/3P2P1/q1p5/8/6PB/P1n2P1P/R1BQ1KNR w k - 5 16";
			fens[28] = "N1bqkbnr/7p/3P2P1/2p5/8/6PB/P1n2P1P/R1BQ1KNR b k - 4 15";
			fens[27] = "N1bqkbnr/7p/3P2P1/2p5/8/6PB/P1n2P1P/R1BQK1NR w KQk - 3 15";
			fens[26] = "N1bqkbnr/7p/3P2P1/2p5/1n6/6PB/P4P1P/R1BQK1NR b KQk - 2 14";
			fens[25] = "N1bqkbnr/7p/3P2P1/2p5/1n6/6P1/P4P1P/R1BQKBNR w KQk - 1 14";
			fens[24] = "N1bqkbnr/7p/n2P2P1/2p5/8/6P1/P4P1P/R1BQKBNR b KQk - 0 13";
			fens[23] = "N1bqkbnr/7p/n2P2P1/2p5/8/8/P4PPP/R1BQKBNR w KQk - 1 13";
			fens[22] = "Nnbqkbnr/7p/3P2P1/2p5/8/8/P4PPP/R1BQKBNR b KQk - 0 12";
			fens[21] = "Nnbqkbnr/7p/6P1/2ppP3/8/8/P4PPP/R1BQKBNR w KQk d6 0 12";
			fens[20] = "Nnbqkbnr/3p3p/6P1/2p1P3/8/8/P4PPP/R1BQKBNR b KQk - 0 11";
			fens[19] = "Nnbqkbnr/3p3p/8/2p1PPp1/8/8/P4PPP/R1BQKBNR w KQk g6 0 11";
			fens[18] = "Nnbqkbnr/3p2pp/8/2p1PP2/8/8/P4PPP/R1BQKBNR b KQk - 0 10";
			fens[17] = "Nnbqkbnr/3p2pp/8/2p1Pp2/4P3/8/P4PPP/R1BQKBNR w KQk f6 0 10";
			fens[16] = "Nnbqkbnr/3p1ppp/8/2p1P3/4P3/8/P4PPP/R1BQKBNR b KQk - 0 9";
			fens[15] = "Nnbqkbnr/3p1ppp/8/2p1p3/3PP3/8/P4PPP/R1BQKBNR w KQk e6 0 9";
			fens[14] = "Nnbqkbnr/3ppppp/8/2p5/3PP3/8/P4PPP/R1BQKBNR b KQk - 0 8";
			fens[13] = "rnbqkbnr/3ppppp/1N6/2p5/3PP3/8/P4PPP/R1BQKBNR w KQkq - 0 8";
			fens[12] = "rnbqkbnr/3ppppp/1Np5/8/3PP3/8/P4PPP/R1BQKBNR b KQkq - 0 7";
			fens[11] = "rnbqkbnr/3ppppp/1pp5/8/N2PP3/8/P4PPP/R1BQKBNR w KQkq - 0 7";
			fens[10] = "rnbqkbnr/2pppppp/1p6/8/N2PP3/8/P4PPP/R1BQKBNR b KQkq - 1 6";
			fens[9] = "rnbqkbnr/2pppppp/1p6/8/3PP3/2N5/P4PPP/R1BQKBNR w KQkq - 0 6";
			fens[8] = "rnbqkbnr/1ppppppp/8/8/3PP3/2N5/P4PPP/R1BQKBNR b KQkq - 0 5";
			fens[7] = "rnbqkbnr/1ppppppp/8/8/3PP3/2p5/P4PPP/RNBQKBNR w KQkq - 0 5";
			fens[6] = "rnbqkbnr/1ppppppp/8/8/1p1PP3/2P5/P4PPP/RNBQKBNR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/1ppppppp/8/8/1p1PP3/8/P1P2PPP/RNBQKBNR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/1ppppppp/8/p7/1P1PP3/8/P1P2PPP/RNBQKBNR b KQkq b3 0 3";
			fens[3] = "rnbqkbnr/1ppppppp/8/p7/3PP3/8/PPP2PPP/RNBQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/1ppppppp/p7/8/3PP3/8/PPP2PPP/RNBQKBNR b KQkq d3 0 2";
			fens[1] = "rnbqkbnr/1ppppppp/p7/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test65", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test65: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test66() return boolean is
			@noparse
			LOG::LogInfo(message: "test66: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a4 e7e5 c2c4 d7d5 c4d5 d8d5 b2b3 f8b4 e2e3 g8f6 f2f3 e8g8 g2g3 c8g4 f3g4 f6g4 a4a5 d5h1 h2h3 g4h2 a5a6 h1g1 b1a3 g1g3 e1e2 g3h3 d2d3 h3g4 e2f2 g4d1 a3b5 b7a6 b5d6 c7d6 f1h3 b4c3 e3e4 c3a1 c1f4 e5f4 h3c8 f8c8 f2g2 d1d3 g2h1 d3b3 e4e5 d6e5 h1g2 b3g3 g2h1 h2g4";
			fens[51] = "rnr3k1/p4ppp/p7/4p3/5pn1/6q1/8/b6K w - - 4 27";
			fens[50] = "rnr3k1/p4ppp/p7/4p3/5p2/6q1/7n/b6K b - - 3 26";
			fens[49] = "rnr3k1/p4ppp/p7/4p3/5p2/6q1/6Kn/b7 w - - 2 26";
			fens[48] = "rnr3k1/p4ppp/p7/4p3/5p2/1q6/6Kn/b7 b - - 1 25";
			fens[47] = "rnr3k1/p4ppp/p7/4p3/5p2/1q6/7n/b6K w - - 0 25";
			fens[46] = "rnr3k1/p4ppp/p2p4/4P3/5p2/1q6/7n/b6K b - - 0 24";
			fens[45] = "rnr3k1/p4ppp/p2p4/8/4Pp2/1q6/7n/b6K w - - 0 24";
			fens[44] = "rnr3k1/p4ppp/p2p4/8/4Pp2/1P1q4/7n/b6K b - - 1 23";
			fens[43] = "rnr3k1/p4ppp/p2p4/8/4Pp2/1P1q4/6Kn/b7 w - - 0 23";
			fens[42] = "rnr3k1/p4ppp/p2p4/8/4Pp2/1P1P4/6Kn/b2q4 b - - 1 22";
			fens[41] = "rnr3k1/p4ppp/p2p4/8/4Pp2/1P1P4/5K1n/b2q4 w - - 0 22";
			fens[40] = "rnB2rk1/p4ppp/p2p4/8/4Pp2/1P1P4/5K1n/b2q4 b - - 1 21";
			fens[39] = "rn3rk1/p4ppp/p2p4/8/4Pp2/1P1P3B/5K1n/b2q4 w - - 0 21";
			fens[38] = "rn3rk1/p4ppp/p2p4/4p3/4PB2/1P1P3B/5K1n/b2q4 b - - 1 20";
			fens[37] = "rn3rk1/p4ppp/p2p4/4p3/4P3/1P1P3B/5K1n/b1Bq4 w - - 0 20";
			fens[36] = "rn3rk1/p4ppp/p2p4/4p3/4P3/1PbP3B/5K1n/R1Bq4 b - - 0 19";
			fens[35] = "rn3rk1/p4ppp/p2p4/4p3/8/1PbPP2B/5K1n/R1Bq4 w - - 2 19";
			fens[34] = "rn3rk1/p4ppp/p2p4/4p3/1b6/1P1PP2B/5K1n/R1Bq4 b - - 1 18";
			fens[33] = "rn3rk1/p4ppp/p2p4/4p3/1b6/1P1PP3/5K1n/R1Bq1B2 w - - 0 18";
			fens[32] = "rn3rk1/p1p2ppp/p2N4/4p3/1b6/1P1PP3/5K1n/R1Bq1B2 b - - 1 17";
			fens[31] = "rn3rk1/p1p2ppp/p7/1N2p3/1b6/1P1PP3/5K1n/R1Bq1B2 w - - 0 17";
			fens[30] = "rn3rk1/ppp2ppp/P7/1N2p3/1b6/1P1PP3/5K1n/R1Bq1B2 b - - 1 16";
			fens[29] = "rn3rk1/ppp2ppp/P7/4p3/1b6/NP1PP3/5K1n/R1Bq1B2 w - - 0 16";
			fens[28] = "rn3rk1/ppp2ppp/P7/4p3/1b4q1/NP1PP3/5K1n/R1BQ1B2 b - - 2 15";
			fens[27] = "rn3rk1/ppp2ppp/P7/4p3/1b4q1/NP1PP3/4K2n/R1BQ1B2 w - - 1 15";
			fens[26] = "rn3rk1/ppp2ppp/P7/4p3/1b6/NP1PP2q/4K2n/R1BQ1B2 b - - 0 14";
			fens[25] = "rn3rk1/ppp2ppp/P7/4p3/1b6/NP2P2q/3PK2n/R1BQ1B2 w - - 0 14";
			fens[24] = "rn3rk1/ppp2ppp/P7/4p3/1b6/NP2P1qP/3PK2n/R1BQ1B2 b - - 1 13";
			fens[23] = "rn3rk1/ppp2ppp/P7/4p3/1b6/NP2P1qP/3P3n/R1BQKB2 w Q - 0 13";
			fens[22] = "rn3rk1/ppp2ppp/P7/4p3/1b6/NP2P1PP/3P3n/R1BQKBq1 b Q - 1 12";
			fens[21] = "rn3rk1/ppp2ppp/P7/4p3/1b6/1P2P1PP/3P3n/RNBQKBq1 w Q - 0 12";
			fens[20] = "rn3rk1/ppp2ppp/P7/4p3/1b6/1P2P1PP/3P3n/RNBQKBNq b Q - 0 11";
			fens[19] = "rn3rk1/ppp2ppp/8/P3p3/1b6/1P2P1PP/3P3n/RNBQKBNq w Q - 1 11";
			fens[18] = "rn3rk1/ppp2ppp/8/P3p3/1b4n1/1P2P1PP/3P4/RNBQKBNq b Q - 0 10";
			fens[17] = "rn3rk1/ppp2ppp/8/P3p3/1b4n1/1P2P1P1/3P3P/RNBQKBNq w Q - 0 10";
			fens[16] = "rn3rk1/ppp2ppp/8/P2qp3/1b4n1/1P2P1P1/3P3P/RNBQKBNR b KQ - 0 9";
			fens[15] = "rn3rk1/ppp2ppp/8/3qp3/Pb4n1/1P2P1P1/3P3P/RNBQKBNR w KQ - 0 9";
			fens[14] = "rn3rk1/ppp2ppp/5n2/3qp3/Pb4P1/1P2P1P1/3P3P/RNBQKBNR b KQ - 0 8";
			fens[13] = "rn3rk1/ppp2ppp/5n2/3qp3/Pb4b1/1P2PPP1/3P3P/RNBQKBNR w KQ - 1 8";
			fens[12] = "rnb2rk1/ppp2ppp/5n2/3qp3/Pb6/1P2PPP1/3P3P/RNBQKBNR b KQ - 0 7";
			fens[11] = "rnb2rk1/ppp2ppp/5n2/3qp3/Pb6/1P2PP2/3P2PP/RNBQKBNR w KQ - 1 7";
			fens[10] = "rnb1k2r/ppp2ppp/5n2/3qp3/Pb6/1P2PP2/3P2PP/RNBQKBNR b KQkq - 0 6";
			fens[9] = "rnb1k2r/ppp2ppp/5n2/3qp3/Pb6/1P2P3/3P1PPP/RNBQKBNR w KQkq - 1 6";
			fens[8] = "rnb1k1nr/ppp2ppp/8/3qp3/Pb6/1P2P3/3P1PPP/RNBQKBNR b KQkq - 0 5";
			fens[7] = "rnb1k1nr/ppp2ppp/8/3qp3/Pb6/1P6/3PPPPP/RNBQKBNR w KQkq - 1 5";
			fens[6] = "rnb1kbnr/ppp2ppp/8/3qp3/P7/1P6/3PPPPP/RNBQKBNR b KQkq - 0 4";
			fens[5] = "rnb1kbnr/ppp2ppp/8/3qp3/P7/8/1P1PPPPP/RNBQKBNR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/ppp2ppp/8/3Pp3/P7/8/1P1PPPPP/RNBQKBNR b KQkq - 0 3";
			fens[3] = "rnbqkbnr/ppp2ppp/8/3pp3/P1P5/8/1P1PPPPP/RNBQKBNR w KQkq d6 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/P1P5/8/1P1PPPPP/RNBQKBNR b KQkq c3 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/P7/8/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/P7/8/1PPPPPPP/RNBQKBNR b KQkq a3 0 1";
			
			result = ::test_do_move(name: "test66", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test66: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test67() return boolean is
			@noparse
			LOG::LogInfo(message: "test67: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 b8c6 d1h5 c6b8 f1b5 e7e5 h5f7 e8f7 b5d7 c8d7 d2d4 e5d4 c2c3 d4c3 b2c3 f7e6 c1f4 b7b6 g1f3 d7e8 e1g1 e6f6 f1d1 d8d1 f3e1 d1b1 a1b1 f6e6 e4e5 e6d5 b1b5 e8b5 c3c4 d5c4 e1c2 b5e8 c2e3 c4d3 e3d5 d3d4 d5c7 g8e7 c7a8 e7c8 e5e6 d4d5 f4b8 d5e6 b8a7 c8a7 a8b6 a7c8 b6c8 e6d5 c8b6 d5d4 a2a4 e8a4 b6a4 d4d3 a4c5 f8c5 g2g4 c5f2 g1f2 d3d2 f2f3 d2d3 f3f4 d3d4 f4f5 d4d5 g4g5 g7g6 f5f6 d5d6 f6g7 h8b8 g7h7 b8b1 h7g6 d6e5 h2h4 e5f4 h4h5 f4e5 h5h6 b1a1 h6h7 a1b1 h7h8q e5d6 h8f6 d6c7 f6c3 c7b8 c3e5 b8a8 e5e4 b1b7 e4b1 b7g7 g6g7 a8a7 b1b5 a7a8 g7f7 a8a7 f7e7 a7a8 e7d7 a8a7 d7c7 a7a8 b5b7";
			fens[114] = "k7/1QK5/8/6P1/8/8/8/8 b - - 12 58";
			fens[113] = "k7/2K5/8/1Q4P1/8/8/8/8 w - - 11 58";
			fens[112] = "8/k1K5/8/1Q4P1/8/8/8/8 b - - 10 57";
			fens[111] = "8/k2K4/8/1Q4P1/8/8/8/8 w - - 9 57";
			fens[110] = "k7/3K4/8/1Q4P1/8/8/8/8 b - - 8 56";
			fens[109] = "k7/4K3/8/1Q4P1/8/8/8/8 w - - 7 56";
			fens[108] = "8/k3K3/8/1Q4P1/8/8/8/8 b - - 6 55";
			fens[107] = "8/k4K2/8/1Q4P1/8/8/8/8 w - - 5 55";
			fens[106] = "k7/5K2/8/1Q4P1/8/8/8/8 b - - 4 54";
			fens[105] = "k7/6K1/8/1Q4P1/8/8/8/8 w - - 3 54";
			fens[104] = "8/k5K1/8/1Q4P1/8/8/8/8 b - - 2 53";
			fens[103] = "8/k5K1/8/6P1/8/8/8/1Q6 w - - 1 53";
			fens[102] = "k7/6K1/8/6P1/8/8/8/1Q6 b - - 0 52";
			fens[101] = "k7/6r1/6K1/6P1/8/8/8/1Q6 w - - 11 52";
			fens[100] = "k7/1r6/6K1/6P1/8/8/8/1Q6 b - - 10 51";
			fens[99] = "k7/1r6/6K1/6P1/4Q3/8/8/8 w - - 9 51";
			fens[98] = "k7/8/6K1/6P1/4Q3/8/8/1r6 b - - 8 50";
			fens[97] = "k7/8/6K1/4Q1P1/8/8/8/1r6 w - - 7 50";
			fens[96] = "1k6/8/6K1/4Q1P1/8/8/8/1r6 b - - 6 49";
			fens[95] = "1k6/8/6K1/6P1/8/2Q5/8/1r6 w - - 5 49";
			fens[94] = "8/2k5/6K1/6P1/8/2Q5/8/1r6 b - - 4 48";
			fens[93] = "8/2k5/5QK1/6P1/8/8/8/1r6 w - - 3 48";
			fens[92] = "8/8/3k1QK1/6P1/8/8/8/1r6 b - - 2 47";
			fens[91] = "7Q/8/3k2K1/6P1/8/8/8/1r6 w - - 1 47";
			fens[90] = "7Q/8/6K1/4k1P1/8/8/8/1r6 b - - 0 46";
			fens[89] = "8/7P/6K1/4k1P1/8/8/8/1r6 w - - 1 46";
			fens[88] = "8/7P/6K1/4k1P1/8/8/8/r7 b - - 0 45";
			fens[87] = "8/8/6KP/4k1P1/8/8/8/r7 w - - 1 45";
			fens[86] = "8/8/6KP/4k1P1/8/8/8/1r6 b - - 0 44";
			fens[85] = "8/8/6K1/4k1PP/8/8/8/1r6 w - - 1 44";
			fens[84] = "8/8/6K1/6PP/5k2/8/8/1r6 b - - 0 43";
			fens[83] = "8/8/6K1/6P1/5k1P/8/8/1r6 w - - 1 43";
			fens[82] = "8/8/6K1/4k1P1/7P/8/8/1r6 b - h3 0 42";
			fens[81] = "8/8/6K1/4k1P1/8/8/7P/1r6 w - - 1 42";
			fens[80] = "8/8/3k2K1/6P1/8/8/7P/1r6 b - - 0 41";
			fens[79] = "8/7K/3k2p1/6P1/8/8/7P/1r6 w - - 1 41";
			fens[78] = "1r6/7K/3k2p1/6P1/8/8/7P/8 b - - 0 40";
			fens[77] = "1r6/6Kp/3k2p1/6P1/8/8/7P/8 w - - 4 40";
			fens[76] = "7r/6Kp/3k2p1/6P1/8/8/7P/8 b - - 3 39";
			fens[75] = "7r/7p/3k1Kp1/6P1/8/8/7P/8 w - - 2 39";
			fens[74] = "7r/7p/5Kp1/3k2P1/8/8/7P/8 b - - 1 38";
			fens[73] = "7r/7p/6p1/3k1KP1/8/8/7P/8 w - - 0 38";
			fens[72] = "7r/6pp/8/3k1KP1/8/8/7P/8 b - - 0 37";
			fens[71] = "7r/6pp/8/3k1K2/6P1/8/7P/8 w - - 7 37";
			fens[70] = "7r/6pp/8/5K2/3k2P1/8/7P/8 b - - 6 36";
			fens[69] = "7r/6pp/8/8/3k1KP1/8/7P/8 w - - 5 36";
			fens[68] = "7r/6pp/8/8/5KP1/3k4/7P/8 b - - 4 35";
			fens[67] = "7r/6pp/8/8/6P1/3k1K2/7P/8 w - - 3 35";
			fens[66] = "7r/6pp/8/8/6P1/5K2/3k3P/8 b - - 2 34";
			fens[65] = "7r/6pp/8/8/6P1/8/3k1K1P/8 w - - 1 34";
			fens[64] = "7r/6pp/8/8/6P1/3k4/5K1P/8 b - - 0 33";
			fens[63] = "7r/6pp/8/8/6P1/3k4/5b1P/6K1 w - - 0 33";
			fens[62] = "7r/6pp/8/2b5/6P1/3k4/5P1P/6K1 b - g3 0 32";
			fens[61] = "7r/6pp/8/2b5/8/3k4/5PPP/6K1 w - - 0 32";
			fens[60] = "5b1r/6pp/8/2N5/8/3k4/5PPP/6K1 b - - 2 31";
			fens[59] = "5b1r/6pp/8/8/N7/3k4/5PPP/6K1 w - - 1 31";
			fens[58] = "5b1r/6pp/8/8/N2k4/8/5PPP/6K1 b - - 0 30";
			fens[57] = "5b1r/6pp/1N6/8/b2k4/8/5PPP/6K1 w - - 0 30";
			fens[56] = "4bb1r/6pp/1N6/8/P2k4/8/5PPP/6K1 b - a3 0 29";
			fens[55] = "4bb1r/6pp/1N6/8/3k4/8/P4PPP/6K1 w - - 3 29";
			fens[54] = "4bb1r/6pp/1N6/3k4/8/8/P4PPP/6K1 b - - 2 28";
			fens[53] = "2N1bb1r/6pp/8/3k4/8/8/P4PPP/6K1 w - - 1 28";
			fens[52] = "2N1bb1r/6pp/4k3/8/8/8/P4PPP/6K1 b - - 0 27";
			fens[51] = "2n1bb1r/6pp/1N2k3/8/8/8/P4PPP/6K1 w - - 1 27";
			fens[50] = "4bb1r/n5pp/1N2k3/8/8/8/P4PPP/6K1 b - - 0 26";
			fens[49] = "N3bb1r/n5pp/1p2k3/8/8/8/P4PPP/6K1 w - - 0 26";
			fens[48] = "N1n1bb1r/B5pp/1p2k3/8/8/8/P4PPP/6K1 b - - 0 25";
			fens[47] = "NBn1bb1r/p5pp/1p2k3/8/8/8/P4PPP/6K1 w - - 0 25";
			fens[46] = "NBn1bb1r/p5pp/1p2P3/3k4/8/8/P4PPP/6K1 b - - 0 24";
			fens[45] = "Nnn1bb1r/p5pp/1p2P3/3k4/5B2/8/P4PPP/6K1 w - - 1 24";
			fens[44] = "Nnn1bb1r/p5pp/1p2P3/8/3k1B2/8/P4PPP/6K1 b - - 0 23";
			fens[43] = "Nnn1bb1r/p5pp/1p6/4P3/3k1B2/8/P4PPP/6K1 w - - 1 23";
			fens[42] = "Nn2bb1r/p3n1pp/1p6/4P3/3k1B2/8/P4PPP/6K1 b - - 0 22";
			fens[41] = "rn2bb1r/p1N1n1pp/1p6/4P3/3k1B2/8/P4PPP/6K1 w - - 1 22";
			fens[40] = "rn2bbnr/p1N3pp/1p6/4P3/3k1B2/8/P4PPP/6K1 b - - 0 21";
			fens[39] = "rn2bbnr/p1p3pp/1p6/3NP3/3k1B2/8/P4PPP/6K1 w - - 6 21";
			fens[38] = "rn2bbnr/p1p3pp/1p6/3NP3/5B2/3k4/P4PPP/6K1 b - - 5 20";
			fens[37] = "rn2bbnr/p1p3pp/1p6/4P3/5B2/3kN3/P4PPP/6K1 w - - 4 20";
			fens[36] = "rn2bbnr/p1p3pp/1p6/4P3/2k2B2/4N3/P4PPP/6K1 b - - 3 19";
			fens[35] = "rn2bbnr/p1p3pp/1p6/4P3/2k2B2/8/P1N2PPP/6K1 w - - 2 19";
			fens[34] = "rn3bnr/p1p3pp/1p6/1b2P3/2k2B2/8/P1N2PPP/6K1 b - - 1 18";
			fens[33] = "rn3bnr/p1p3pp/1p6/1b2P3/2k2B2/8/P4PPP/4N1K1 w - - 0 18";
			fens[32] = "rn3bnr/p1p3pp/1p6/1b1kP3/2P2B2/8/P4PPP/4N1K1 b - - 0 17";
			fens[31] = "rn3bnr/p1p3pp/1p6/1b1kP3/5B2/2P5/P4PPP/4N1K1 w - - 0 17";
			fens[30] = "rn2bbnr/p1p3pp/1p6/1R1kP3/5B2/2P5/P4PPP/4N1K1 b - - 2 16";
			fens[29] = "rn2bbnr/p1p3pp/1p6/3kP3/5B2/2P5/P4PPP/1R2N1K1 w - - 1 16";
			fens[28] = "rn2bbnr/p1p3pp/1p2k3/4P3/5B2/2P5/P4PPP/1R2N1K1 b - - 0 15";
			fens[27] = "rn2bbnr/p1p3pp/1p2k3/8/4PB2/2P5/P4PPP/1R2N1K1 w - - 1 15";
			fens[26] = "rn2bbnr/p1p3pp/1p3k2/8/4PB2/2P5/P4PPP/1R2N1K1 b - - 0 14";
			fens[25] = "rn2bbnr/p1p3pp/1p3k2/8/4PB2/2P5/P4PPP/Rq2N1K1 w - - 0 14";
			fens[24] = "rn2bbnr/p1p3pp/1p3k2/8/4PB2/2P5/P4PPP/RN1qN1K1 b - - 1 13";
			fens[23] = "rn2bbnr/p1p3pp/1p3k2/8/4PB2/2P2N2/P4PPP/RN1q2K1 w - - 0 13";
			fens[22] = "rn1qbbnr/p1p3pp/1p3k2/8/4PB2/2P2N2/P4PPP/RN1R2K1 b - - 5 12";
			fens[21] = "rn1qbbnr/p1p3pp/1p3k2/8/4PB2/2P2N2/P4PPP/RN3RK1 w - - 4 12";
			fens[20] = "rn1qbbnr/p1p3pp/1p2k3/8/4PB2/2P2N2/P4PPP/RN3RK1 b - - 3 11";
			fens[19] = "rn1qbbnr/p1p3pp/1p2k3/8/4PB2/2P2N2/P4PPP/RN2K2R w KQ - 2 11";
			fens[18] = "rn1q1bnr/p1pb2pp/1p2k3/8/4PB2/2P2N2/P4PPP/RN2K2R b KQ - 1 10";
			fens[17] = "rn1q1bnr/p1pb2pp/1p2k3/8/4PB2/2P5/P4PPP/RN2K1NR w KQ - 0 10";
			fens[16] = "rn1q1bnr/pppb2pp/4k3/8/4PB2/2P5/P4PPP/RN2K1NR b KQ - 2 9";
			fens[15] = "rn1q1bnr/pppb2pp/4k3/8/4P3/2P5/P4PPP/RNB1K1NR w KQ - 1 9";
			fens[14] = "rn1q1bnr/pppb1kpp/8/8/4P3/2P5/P4PPP/RNB1K1NR b KQ - 0 8";
			fens[13] = "rn1q1bnr/pppb1kpp/8/8/4P3/2p5/PP3PPP/RNB1K1NR w KQ - 0 8";
			fens[12] = "rn1q1bnr/pppb1kpp/8/8/3pP3/2P5/PP3PPP/RNB1K1NR b KQ - 0 7";
			fens[11] = "rn1q1bnr/pppb1kpp/8/8/3pP3/8/PPP2PPP/RNB1K1NR w KQ - 0 7";
			fens[10] = "rn1q1bnr/pppb1kpp/8/4p3/3PP3/8/PPP2PPP/RNB1K1NR b KQ d3 0 6";
			fens[9] = "rn1q1bnr/pppb1kpp/8/4p3/4P3/8/PPPP1PPP/RNB1K1NR w KQ - 0 6";
			fens[8] = "rnbq1bnr/pppB1kpp/8/4p3/4P3/8/PPPP1PPP/RNB1K1NR b KQ - 0 5";
			fens[7] = "rnbq1bnr/pppp1kpp/8/1B2p3/4P3/8/PPPP1PPP/RNB1K1NR w KQ - 0 5";
			fens[6] = "rnbqkbnr/pppp1Qpp/8/1B2p3/4P3/8/PPPP1PPP/RNB1K1NR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/pppp1ppp/8/1B2p2Q/4P3/8/PPPP1PPP/RNB1K1NR w KQkq e6 0 4";
			fens[4] = "rnbqkbnr/pppppppp/8/1B5Q/4P3/8/PPPP1PPP/RNB1K1NR b KQkq - 4 3";
			fens[3] = "rnbqkbnr/pppppppp/8/7Q/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 3 3";
			fens[2] = "r1bqkbnr/pppppppp/2n5/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 2 2";
			fens[1] = "r1bqkbnr/pppppppp/2n5/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 1 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test67", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test67: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test68() return boolean is
			@noparse
			LOG::LogInfo(message: "test68: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 b8c6 d1h5 c6b8 f1c4 e7e5 h5f7";
			fens[6] = "rnbqkbnr/pppp1Qpp/8/4p3/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/pppp1ppp/8/4p2Q/2B1P3/8/PPPP1PPP/RNB1K1NR w KQkq e6 0 4";
			fens[4] = "rnbqkbnr/pppppppp/8/7Q/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 4 3";
			fens[3] = "rnbqkbnr/pppppppp/8/7Q/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 3 3";
			fens[2] = "r1bqkbnr/pppppppp/2n5/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 2 2";
			fens[1] = "r1bqkbnr/pppppppp/2n5/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 1 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test68", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test68: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test69() return boolean is
			@noparse
			LOG::LogInfo(message: "test69: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a4 e7e5 c2c4 d8h4 e2e4 f8c5 b2b3 h4f2";
			fens[7] = "rnb1k1nr/pppp1ppp/8/2b1p3/P1P1P3/1P6/3P1qPP/RNBQKBNR w KQkq - 0 5";
			fens[6] = "rnb1k1nr/pppp1ppp/8/2b1p3/P1P1P2q/1P6/3P1PPP/RNBQKBNR b KQkq - 0 4";
			fens[5] = "rnb1k1nr/pppp1ppp/8/2b1p3/P1P1P2q/8/1P1P1PPP/RNBQKBNR w KQkq - 1 4";
			fens[4] = "rnb1kbnr/pppp1ppp/8/4p3/P1P1P2q/8/1P1P1PPP/RNBQKBNR b KQkq e3 0 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/4p3/P1P4q/8/1P1PPPPP/RNBQKBNR w KQkq - 1 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/P1P5/8/1P1PPPPP/RNBQKBNR b KQkq c3 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/P7/8/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/P7/8/1PPPPPPP/RNBQKBNR b KQkq a3 0 1";
			
			result = ::test_do_move(name: "test69", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test69: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test7() return boolean is
			@noparse
			LOG::LogInfo(message: "test7: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 d7d5 d1h5 d5e4 f1c4 d8d2 e1d2 g7g5 h5f7 e8d7 f7f8 g8f6 f8h6 f6h5 h6h5 h8d8 h5h7 c7c6 h7f5 d7e8 c4d3 c8f5 g1h3 f5h3 g2h3 d8d3 c2d3 e4d3 d2d3 b8a6 h1g1 a6b4 d3c4 b4c2 c4d3 c2a1 c1g5 e7e6 g1e1 a8c8 e1e6 e8d7 e6e7 d7d6 e7b7 a1c2 d3c2 d6e5 b7a7 e5e6 a7a6 c8d8 a6c6 e6f5 g5d8 f5f4 c6c3 f4e5 c3c4 e5d5 c4h4 d5e5 f2f3 e5e6 f3f4 e6d6 f4f5 d6d7 f5f6 d7d8 f6f7 d8e7 h4f4 e7d6 f7f8q d6e6 f4e4 e6d7 f8e8 d7d6 e4d4 d6c5 c2c3 c5b6 e8c8 b6a5 d4b4";
			fens[86] = "2Q5/8/8/k7/1R6/2K4P/PP5P/1N6 b - - 12 44";
			fens[85] = "2Q5/8/8/k7/3R4/2K4P/PP5P/1N6 w - - 11 44";
			fens[84] = "2Q5/8/1k6/8/3R4/2K4P/PP5P/1N6 b - - 10 43";
			fens[83] = "4Q3/8/1k6/8/3R4/2K4P/PP5P/1N6 w - - 9 43";
			fens[82] = "4Q3/8/8/2k5/3R4/2K4P/PP5P/1N6 b - - 8 42";
			fens[81] = "4Q3/8/8/2k5/3R4/7P/PPK4P/1N6 w - - 7 42";
			fens[80] = "4Q3/8/3k4/8/3R4/7P/PPK4P/1N6 b - - 6 41";
			fens[79] = "4Q3/8/3k4/8/4R3/7P/PPK4P/1N6 w - - 5 41";
			fens[78] = "4Q3/3k4/8/8/4R3/7P/PPK4P/1N6 b - - 4 40";
			fens[77] = "5Q2/3k4/8/8/4R3/7P/PPK4P/1N6 w - - 3 40";
			fens[76] = "5Q2/8/4k3/8/4R3/7P/PPK4P/1N6 b - - 2 39";
			fens[75] = "5Q2/8/4k3/8/5R2/7P/PPK4P/1N6 w - - 1 39";
			fens[74] = "5Q2/8/3k4/8/5R2/7P/PPK4P/1N6 b - - 0 38";
			fens[73] = "8/5P2/3k4/8/5R2/7P/PPK4P/1N6 w - - 3 38";
			fens[72] = "8/4kP2/8/8/5R2/7P/PPK4P/1N6 b - - 2 37";
			fens[71] = "8/4kP2/8/8/7R/7P/PPK4P/1N6 w - - 1 37";
			fens[70] = "3k4/5P2/8/8/7R/7P/PPK4P/1N6 b - - 0 36";
			fens[69] = "3k4/8/5P2/8/7R/7P/PPK4P/1N6 w - - 0 36";
			fens[68] = "3B4/3k4/5P2/8/7R/7P/PPK4P/1N6 b - - 0 35";
			fens[67] = "3B4/3k4/8/5P2/7R/7P/PPK4P/1N6 w - - 1 35";
			fens[66] = "3B4/8/3k4/5P2/7R/7P/PPK4P/1N6 b - - 0 34";
			fens[65] = "3B4/8/3k4/8/5P1R/7P/PPK4P/1N6 w - - 1 34";
			fens[64] = "3B4/8/4k3/8/5P1R/7P/PPK4P/1N6 b - - 0 33";
			fens[63] = "3B4/8/4k3/8/7R/5P1P/PPK4P/1N6 w - - 1 33";
			fens[62] = "3B4/8/8/4k3/7R/5P1P/PPK4P/1N6 b - - 0 32";
			fens[61] = "3B4/8/8/4k3/7R/7P/PPK2P1P/1N6 w - - 7 32";
			fens[60] = "3B4/8/8/3k4/7R/7P/PPK2P1P/1N6 b - - 6 31";
			fens[59] = "3B4/8/8/3k4/2R5/7P/PPK2P1P/1N6 w - - 5 31";
			fens[58] = "3B4/8/8/4k3/2R5/7P/PPK2P1P/1N6 b - - 4 30";
			fens[57] = "3B4/8/8/4k3/8/2R4P/PPK2P1P/1N6 w - - 3 30";
			fens[56] = "3B4/8/8/8/5k2/2R4P/PPK2P1P/1N6 b - - 2 29";
			fens[55] = "3B4/8/2R5/8/5k2/7P/PPK2P1P/1N6 w - - 1 29";
			fens[54] = "3B4/8/2R5/5k2/8/7P/PPK2P1P/1N6 b - - 0 28";
			fens[53] = "3r4/8/2R5/5kB1/8/7P/PPK2P1P/1N6 w - - 1 28";
			fens[52] = "3r4/8/2R1k3/6B1/8/7P/PPK2P1P/1N6 b - - 0 27";
			fens[51] = "3r4/8/R1p1k3/6B1/8/7P/PPK2P1P/1N6 w - - 3 27";
			fens[50] = "2r5/8/R1p1k3/6B1/8/7P/PPK2P1P/1N6 b - - 2 26";
			fens[49] = "2r5/R7/2p1k3/6B1/8/7P/PPK2P1P/1N6 w - - 1 26";
			fens[48] = "2r5/R7/2p5/4k1B1/8/7P/PPK2P1P/1N6 b - - 0 25";
			fens[47] = "2r5/pR6/2p5/4k1B1/8/7P/PPK2P1P/1N6 w - - 1 25";
			fens[46] = "2r5/pR6/2pk4/6B1/8/7P/PPK2P1P/1N6 b - - 0 24";
			fens[45] = "2r5/pR6/2pk4/6B1/8/3K3P/PPn2P1P/1N6 w - - 1 24";
			fens[44] = "2r5/pR6/2pk4/6B1/8/3K3P/PP3P1P/nN6 b - - 0 23";
			fens[43] = "2r5/pp2R3/2pk4/6B1/8/3K3P/PP3P1P/nN6 w - - 3 23";
			fens[42] = "2r5/pp1kR3/2p5/6B1/8/3K3P/PP3P1P/nN6 b - - 2 22";
			fens[41] = "2r5/pp1k4/2p1R3/6B1/8/3K3P/PP3P1P/nN6 w - - 1 22";
			fens[40] = "2r1k3/pp6/2p1R3/6B1/8/3K3P/PP3P1P/nN6 b - - 0 21";
			fens[39] = "2r1k3/pp6/2p1p3/6B1/8/3K3P/PP3P1P/nN2R3 w - - 2 21";
			fens[38] = "r3k3/pp6/2p1p3/6B1/8/3K3P/PP3P1P/nN2R3 b - - 1 20";
			fens[37] = "r3k3/pp6/2p1p3/6B1/8/3K3P/PP3P1P/nN4R1 w - - 0 20";
			fens[36] = "r3k3/pp2p3/2p5/6B1/8/3K3P/PP3P1P/nN4R1 b - - 0 19";
			fens[35] = "r3k3/pp2p3/2p5/6p1/8/3K3P/PP3P1P/nNB3R1 w - - 0 19";
			fens[34] = "r3k3/pp2p3/2p5/6p1/8/3K3P/PPn2P1P/RNB3R1 b - - 6 18";
			fens[33] = "r3k3/pp2p3/2p5/6p1/2K5/7P/PPn2P1P/RNB3R1 w - - 5 18";
			fens[32] = "r3k3/pp2p3/2p5/6p1/1nK5/7P/PP3P1P/RNB3R1 b - - 4 17";
			fens[31] = "r3k3/pp2p3/2p5/6p1/1n6/3K3P/PP3P1P/RNB3R1 w - - 3 17";
			fens[30] = "r3k3/pp2p3/n1p5/6p1/8/3K3P/PP3P1P/RNB3R1 b - - 2 16";
			fens[29] = "r3k3/pp2p3/n1p5/6p1/8/3K3P/PP3P1P/RNB4R w - - 1 16";
			fens[28] = "rn2k3/pp2p3/2p5/6p1/8/3K3P/PP3P1P/RNB4R b - - 0 15";
			fens[27] = "rn2k3/pp2p3/2p5/6p1/8/3p3P/PP1K1P1P/RNB4R w - - 0 15";
			fens[26] = "rn2k3/pp2p3/2p5/6p1/4p3/3P3P/PP1K1P1P/RNB4R b - - 0 14";
			fens[25] = "rn2k3/pp2p3/2p5/6p1/4p3/3r3P/PPPK1P1P/RNB4R w - - 0 14";
			fens[24] = "rn1rk3/pp2p3/2p5/6p1/4p3/3B3P/PPPK1P1P/RNB4R b - - 0 13";
			fens[23] = "rn1rk3/pp2p3/2p5/6p1/4p3/3B3b/PPPK1PPP/RNB4R w - - 0 13";
			fens[22] = "rn1rk3/pp2p3/2p5/5bp1/4p3/3B3N/PPPK1PPP/RNB4R b - - 1 12";
			fens[21] = "rn1rk3/pp2p3/2p5/5bp1/4p3/3B4/PPPK1PPP/RNB3NR w - - 0 12";
			fens[20] = "rnbrk3/pp2p3/2p5/5Qp1/4p3/3B4/PPPK1PPP/RNB3NR b - - 3 11";
			fens[19] = "rnbrk3/pp2p3/2p5/5Qp1/2B1p3/8/PPPK1PPP/RNB3NR w - - 2 11";
			fens[18] = "rnbr4/pp1kp3/2p5/5Qp1/2B1p3/8/PPPK1PPP/RNB3NR b - - 1 10";
			fens[17] = "rnbr4/pp1kp2Q/2p5/6p1/2B1p3/8/PPPK1PPP/RNB3NR w - - 0 10";
			fens[16] = "rnbr4/pppkp2Q/8/6p1/2B1p3/8/PPPK1PPP/RNB3NR b - - 0 9";
			fens[15] = "rnbr4/pppkp2p/8/6pQ/2B1p3/8/PPPK1PPP/RNB3NR w - - 1 9";
			fens[14] = "rnb4r/pppkp2p/8/6pQ/2B1p3/8/PPPK1PPP/RNB3NR b - - 0 8";
			fens[13] = "rnb4r/pppkp2p/7Q/6pn/2B1p3/8/PPPK1PPP/RNB3NR w - - 3 8";
			fens[12] = "rnb4r/pppkp2p/5n1Q/6p1/2B1p3/8/PPPK1PPP/RNB3NR b - - 2 7";
			fens[11] = "rnb2Q1r/pppkp2p/5n2/6p1/2B1p3/8/PPPK1PPP/RNB3NR w - - 1 7";
			fens[10] = "rnb2Qnr/pppkp2p/8/6p1/2B1p3/8/PPPK1PPP/RNB3NR b - - 0 6";
			fens[9] = "rnb2bnr/pppkpQ1p/8/6p1/2B1p3/8/PPPK1PPP/RNB3NR w - - 1 6";
			fens[8] = "rnb1kbnr/ppp1pQ1p/8/6p1/2B1p3/8/PPPK1PPP/RNB3NR b kq - 0 5";
			fens[7] = "rnb1kbnr/ppp1pp1p/8/6pQ/2B1p3/8/PPPK1PPP/RNB3NR w kq g6 0 5";
			fens[6] = "rnb1kbnr/ppp1pppp/8/7Q/2B1p3/8/PPPK1PPP/RNB3NR b kq - 0 4";
			fens[5] = "rnb1kbnr/ppp1pppp/8/7Q/2B1p3/8/PPPq1PPP/RNB1K1NR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/ppp1pppp/8/7Q/2B1p3/8/PPPP1PPP/RNB1K1NR b KQkq - 1 3";
			fens[3] = "rnbqkbnr/ppp1pppp/8/7Q/4p3/8/PPPP1PPP/RNB1KBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/ppp1pppp/8/3p3Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR w KQkq d6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test7", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test7: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test70() return boolean is
			@noparse
			LOG::LogInfo(message: "test70: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 d7d6 d1h5 b8c6 f1c4 a8b8 h5f7 e8d7 c4e6";
			fens[8] = "1rbq1bnr/pppkpQpp/2npB3/8/4P3/8/PPPP1PPP/RNB1K1NR b KQ - 2 5";
			fens[7] = "1rbq1bnr/pppkpQpp/2np4/8/2B1P3/8/PPPP1PPP/RNB1K1NR w KQ - 1 5";
			fens[6] = "1rbqkbnr/ppp1pQpp/2np4/8/2B1P3/8/PPPP1PPP/RNB1K1NR b KQk - 0 4";
			fens[5] = "1rbqkbnr/ppp1pppp/2np4/7Q/2B1P3/8/PPPP1PPP/RNB1K1NR w KQk - 4 4";
			fens[4] = "r1bqkbnr/ppp1pppp/2np4/7Q/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 3 3";
			fens[3] = "r1bqkbnr/ppp1pppp/2np4/7Q/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 2 3";
			fens[2] = "rnbqkbnr/ppp1pppp/3p4/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/ppp1pppp/3p4/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test70", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test70: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test71() return boolean is
			@noparse
			LOG::LogInfo(message: "test71: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a3 e7e5 h2h4 d8h4 g1f3 f8c5 f3h4 d7d6 h4f5 c8f5 d2d3 g7g5 h1h6 g8h6 a1a2 g5g4 d3d4 g4g3 f2g3 h6g4 b2b4 c5b4 a3b4 e5d4 d1d4 g4e5 d4f2 e5d3 c2d3 f5d3 b4b5 d3e2 f2f6 e2f1 f6e5 e8f8 c1e3 h8g8 e3d2 g8g3 e5g5 g3g5 e1f2 g5f5 d2f4 f5f4 f2e1 f1b5 g2g3 f4f3 e1d1 f3g3 b1d2 g3g2 a2a5 b8c6 a5a3 c6d4 a3f3 d4f3 d2b1 a8e8 b1d2 e8e1 d1c2 f3d2 c2b2 g2g3 b2a2 d2e4 a2b2 e1e2 b2a1 g3g1";
			fens[73] = "5k2/ppp2p1p/3p4/1b6/4n3/8/4r3/K5r1 w - - 8 38";
			fens[72] = "5k2/ppp2p1p/3p4/1b6/4n3/6r1/4r3/K7 b - - 7 37";
			fens[71] = "5k2/ppp2p1p/3p4/1b6/4n3/6r1/1K2r3/8 w - - 6 37";
			fens[70] = "5k2/ppp2p1p/3p4/1b6/4n3/6r1/1K6/4r3 b - - 5 36";
			fens[69] = "5k2/ppp2p1p/3p4/1b6/4n3/6r1/K7/4r3 w - - 4 36";
			fens[68] = "5k2/ppp2p1p/3p4/1b6/8/6r1/K2n4/4r3 b - - 3 35";
			fens[67] = "5k2/ppp2p1p/3p4/1b6/8/6r1/1K1n4/4r3 w - - 2 35";
			fens[66] = "5k2/ppp2p1p/3p4/1b6/8/8/1K1n2r1/4r3 b - - 1 34";
			fens[65] = "5k2/ppp2p1p/3p4/1b6/8/8/2Kn2r1/4r3 w - - 0 34";
			fens[64] = "5k2/ppp2p1p/3p4/1b6/8/5n2/2KN2r1/4r3 b - - 5 33";
			fens[63] = "5k2/ppp2p1p/3p4/1b6/8/5n2/3N2r1/3Kr3 w - - 4 33";
			fens[62] = "4rk2/ppp2p1p/3p4/1b6/8/5n2/3N2r1/3K4 b - - 3 32";
			fens[61] = "4rk2/ppp2p1p/3p4/1b6/8/5n2/6r1/1N1K4 w - - 2 32";
			fens[60] = "r4k2/ppp2p1p/3p4/1b6/8/5n2/6r1/1N1K4 b - - 1 31";
			fens[59] = "r4k2/ppp2p1p/3p4/1b6/8/5n2/3N2r1/3K4 w - - 0 31";
			fens[58] = "r4k2/ppp2p1p/3p4/1b6/3n4/5R2/3N2r1/3K4 b - - 7 30";
			fens[57] = "r4k2/ppp2p1p/3p4/1b6/3n4/R7/3N2r1/3K4 w - - 6 30";
			fens[56] = "r4k2/ppp2p1p/2np4/1b6/8/R7/3N2r1/3K4 b - - 5 29";
			fens[55] = "r4k2/ppp2p1p/2np4/Rb6/8/8/3N2r1/3K4 w - - 4 29";
			fens[54] = "rn3k2/ppp2p1p/3p4/Rb6/8/8/3N2r1/3K4 b - - 3 28";
			fens[53] = "rn3k2/ppp2p1p/3p4/1b6/8/8/R2N2r1/3K4 w - - 2 28";
			fens[52] = "rn3k2/ppp2p1p/3p4/1b6/8/6r1/R2N4/3K4 b - - 1 27";
			fens[51] = "rn3k2/ppp2p1p/3p4/1b6/8/6r1/R7/1N1K4 w - - 0 27";
			fens[50] = "rn3k2/ppp2p1p/3p4/1b6/8/5rP1/R7/1N1K4 b - - 2 26";
			fens[49] = "rn3k2/ppp2p1p/3p4/1b6/8/5rP1/R7/1N2K3 w - - 1 26";
			fens[48] = "rn3k2/ppp2p1p/3p4/1b6/5r2/6P1/R7/1N2K3 b - - 0 25";
			fens[47] = "rn3k2/ppp2p1p/3p4/1b6/5r2/8/R5P1/1N2K3 w - - 0 25";
			fens[46] = "rn3k2/ppp2p1p/3p4/1P6/5r2/8/R5P1/1N2Kb2 b - - 1 24";
			fens[45] = "rn3k2/ppp2p1p/3p4/1P6/5r2/8/R4KP1/1N3b2 w - - 0 24";
			fens[44] = "rn3k2/ppp2p1p/3p4/1P3r2/5B2/8/R4KP1/1N3b2 b - - 3 23";
			fens[43] = "rn3k2/ppp2p1p/3p4/1P3r2/8/8/R2B1KP1/1N3b2 w - - 2 23";
			fens[42] = "rn3k2/ppp2p1p/3p4/1P4r1/8/8/R2B1KP1/1N3b2 b - - 1 22";
			fens[41] = "rn3k2/ppp2p1p/3p4/1P4r1/8/8/R2B2P1/1N2Kb2 w - - 0 22";
			fens[40] = "rn3k2/ppp2p1p/3p4/1P4Q1/8/6r1/R2B2P1/1N2Kb2 b - - 1 21";
			fens[39] = "rn3k2/ppp2p1p/3p4/1P2Q3/8/6r1/R2B2P1/1N2Kb2 w - - 0 21";
			fens[38] = "rn3kr1/ppp2p1p/3p4/1P2Q3/8/6P1/R2B2P1/1N2Kb2 b - - 5 20";
			fens[37] = "rn3kr1/ppp2p1p/3p4/1P2Q3/8/4B1P1/R5P1/1N2Kb2 w - - 4 20";
			fens[36] = "rn3k1r/ppp2p1p/3p4/1P2Q3/8/4B1P1/R5P1/1N2Kb2 b - - 3 19";
			fens[35] = "rn3k1r/ppp2p1p/3p4/1P2Q3/8/6P1/R5P1/1NB1Kb2 w - - 2 19";
			fens[34] = "rn2k2r/ppp2p1p/3p4/1P2Q3/8/6P1/R5P1/1NB1Kb2 b kq - 1 18";
			fens[33] = "rn2k2r/ppp2p1p/3p1Q2/1P6/8/6P1/R5P1/1NB1Kb2 w kq - 0 18";
			fens[32] = "rn2k2r/ppp2p1p/3p1Q2/1P6/8/6P1/R3b1P1/1NB1KB2 b kq - 1 17";
			fens[31] = "rn2k2r/ppp2p1p/3p4/1P6/8/6P1/R3bQP1/1NB1KB2 w kq - 0 17";
			fens[30] = "rn2k2r/ppp2p1p/3p4/1P6/8/3b2P1/R3PQP1/1NB1KB2 b kq - 0 16";
			fens[29] = "rn2k2r/ppp2p1p/3p4/8/1P6/3b2P1/R3PQP1/1NB1KB2 w kq - 0 16";
			fens[28] = "rn2k2r/ppp2p1p/3p4/5b2/1P6/3P2P1/R3PQP1/1NB1KB2 b kq - 0 15";
			fens[27] = "rn2k2r/ppp2p1p/3p4/5b2/1P6/3n2P1/R1P1PQP1/1NB1KB2 w kq - 3 15";
			fens[26] = "rn2k2r/ppp2p1p/3p4/4nb2/1P6/6P1/R1P1PQP1/1NB1KB2 b kq - 2 14";
			fens[25] = "rn2k2r/ppp2p1p/3p4/4nb2/1P1Q4/6P1/R1P1P1P1/1NB1KB2 w kq - 1 14";
			fens[24] = "rn2k2r/ppp2p1p/3p4/5b2/1P1Q2n1/6P1/R1P1P1P1/1NB1KB2 b kq - 0 13";
			fens[23] = "rn2k2r/ppp2p1p/3p4/5b2/1P1p2n1/6P1/R1P1P1P1/1NBQKB2 w kq - 0 13";
			fens[22] = "rn2k2r/ppp2p1p/3p4/4pb2/1P1P2n1/6P1/R1P1P1P1/1NBQKB2 b kq - 0 12";
			fens[21] = "rn2k2r/ppp2p1p/3p4/4pb2/1b1P2n1/P5P1/R1P1P1P1/1NBQKB2 w kq - 0 12";
			fens[20] = "rn2k2r/ppp2p1p/3p4/2b1pb2/1P1P2n1/P5P1/R1P1P1P1/1NBQKB2 b kq b3 0 11";
			fens[19] = "rn2k2r/ppp2p1p/3p4/2b1pb2/3P2n1/P5P1/RPP1P1P1/1NBQKB2 w kq - 1 11";
			fens[18] = "rn2k2r/ppp2p1p/3p3n/2b1pb2/3P4/P5P1/RPP1P1P1/1NBQKB2 b kq - 0 10";
			fens[17] = "rn2k2r/ppp2p1p/3p3n/2b1pb2/3P4/P5p1/RPP1PPP1/1NBQKB2 w kq - 0 10";
			fens[16] = "rn2k2r/ppp2p1p/3p3n/2b1pb2/3P2p1/P7/RPP1PPP1/1NBQKB2 b kq - 0 9";
			fens[15] = "rn2k2r/ppp2p1p/3p3n/2b1pb2/6p1/P2P4/RPP1PPP1/1NBQKB2 w kq - 0 9";
			fens[14] = "rn2k2r/ppp2p1p/3p3n/2b1pbp1/8/P2P4/RPP1PPP1/1NBQKB2 b kq - 1 8";
			fens[13] = "rn2k2r/ppp2p1p/3p3n/2b1pbp1/8/P2P4/1PP1PPP1/RNBQKB2 w Qkq - 0 8";
			fens[12] = "rn2k1nr/ppp2p1p/3p3R/2b1pbp1/8/P2P4/1PP1PPP1/RNBQKB2 b Qkq - 1 7";
			fens[11] = "rn2k1nr/ppp2p1p/3p4/2b1pbp1/8/P2P4/1PP1PPP1/RNBQKB1R w KQkq g6 0 7";
			fens[10] = "rn2k1nr/ppp2ppp/3p4/2b1pb2/8/P2P4/1PP1PPP1/RNBQKB1R b KQkq - 0 6";
			fens[9] = "rn2k1nr/ppp2ppp/3p4/2b1pb2/8/P7/1PPPPPP1/RNBQKB1R w KQkq - 0 6";
			fens[8] = "rnb1k1nr/ppp2ppp/3p4/2b1pN2/8/P7/1PPPPPP1/RNBQKB1R b KQkq - 1 5";
			fens[7] = "rnb1k1nr/ppp2ppp/3p4/2b1p3/7N/P7/1PPPPPP1/RNBQKB1R w KQkq - 0 5";
			fens[6] = "rnb1k1nr/pppp1ppp/8/2b1p3/7N/P7/1PPPPPP1/RNBQKB1R b KQkq - 0 4";
			fens[5] = "rnb1k1nr/pppp1ppp/8/2b1p3/7q/P4N2/1PPPPPP1/RNBQKB1R w KQkq - 2 4";
			fens[4] = "rnb1kbnr/pppp1ppp/8/4p3/7q/P4N2/1PPPPPP1/RNBQKB1R b KQkq - 1 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/4p3/7q/P7/1PPPPPP1/RNBQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/7P/P7/1PPPPPP1/RNBQKBNR b KQkq h3 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/P7/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test71", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test71: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test72() return boolean is
			@noparse
			LOG::LogInfo(message: "test72: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 e7e6 d1h5 f8b4 g1f3 b4a3 f3d4 g8f6 d4e6 b7b5 e6c7 e8f8 c7a8 d7d6 b2a3 f6g8 a8b6 c8h3 g2h3 d8d7 b6d7 f8e7 d7b8 f7f5 h5f5 a7a5 f5b5 e7d8 b5a5 d8c8 a5b6 d6d5 b8a6 g7g5 b6c7";
			fens[34] = "2k3nr/2Q4p/N7/3p2p1/4P3/P6P/P1PP1P1P/RNB1KB1R b KQ - 1 18";
			fens[33] = "2k3nr/7p/NQ6/3p2p1/4P3/P6P/P1PP1P1P/RNB1KB1R w KQ g6 0 18";
			fens[32] = "2k3nr/6pp/NQ6/3p4/4P3/P6P/P1PP1P1P/RNB1KB1R b KQ - 1 17";
			fens[31] = "1Nk3nr/6pp/1Q6/3p4/4P3/P6P/P1PP1P1P/RNB1KB1R w KQ - 0 17";
			fens[30] = "1Nk3nr/6pp/1Q1p4/8/4P3/P6P/P1PP1P1P/RNB1KB1R b KQ - 2 16";
			fens[29] = "1Nk3nr/6pp/3p4/Q7/4P3/P6P/P1PP1P1P/RNB1KB1R w KQ - 1 16";
			fens[28] = "1N1k2nr/6pp/3p4/Q7/4P3/P6P/P1PP1P1P/RNB1KB1R b KQ - 0 15";
			fens[27] = "1N1k2nr/6pp/3p4/pQ6/4P3/P6P/P1PP1P1P/RNB1KB1R w KQ - 1 15";
			fens[26] = "1N4nr/4k1pp/3p4/pQ6/4P3/P6P/P1PP1P1P/RNB1KB1R b KQ - 0 14";
			fens[25] = "1N4nr/4k1pp/3p4/pp3Q2/4P3/P6P/P1PP1P1P/RNB1KB1R w KQ a6 0 14";
			fens[24] = "1N4nr/p3k1pp/3p4/1p3Q2/4P3/P6P/P1PP1P1P/RNB1KB1R b KQ - 0 13";
			fens[23] = "1N4nr/p3k1pp/3p4/1p3p1Q/4P3/P6P/P1PP1P1P/RNB1KB1R w KQ f6 0 13";
			fens[22] = "1N4nr/p3kppp/3p4/1p5Q/4P3/P6P/P1PP1P1P/RNB1KB1R b KQ - 0 12";
			fens[21] = "1n4nr/p2Nkppp/3p4/1p5Q/4P3/P6P/P1PP1P1P/RNB1KB1R w KQ - 1 12";
			fens[20] = "1n3knr/p2N1ppp/3p4/1p5Q/4P3/P6P/P1PP1P1P/RNB1KB1R b KQ - 0 11";
			fens[19] = "1n3knr/p2q1ppp/1N1p4/1p5Q/4P3/P6P/P1PP1P1P/RNB1KB1R w KQ - 1 11";
			fens[18] = "1n1q1knr/p4ppp/1N1p4/1p5Q/4P3/P6P/P1PP1P1P/RNB1KB1R b KQ - 0 10";
			fens[17] = "1n1q1knr/p4ppp/1N1p4/1p5Q/4P3/P6b/P1PP1PPP/RNB1KB1R w KQ - 3 10";
			fens[16] = "1nbq1knr/p4ppp/1N1p4/1p5Q/4P3/P7/P1PP1PPP/RNB1KB1R b KQ - 2 9";
			fens[15] = "Nnbq1knr/p4ppp/3p4/1p5Q/4P3/P7/P1PP1PPP/RNB1KB1R w KQ - 1 9";
			fens[14] = "Nnbq1k1r/p4ppp/3p1n2/1p5Q/4P3/P7/P1PP1PPP/RNB1KB1R b KQ - 0 8";
			fens[13] = "Nnbq1k1r/p4ppp/3p1n2/1p5Q/4P3/b7/PPPP1PPP/RNB1KB1R w KQ - 0 8";
			fens[12] = "Nnbq1k1r/p2p1ppp/5n2/1p5Q/4P3/b7/PPPP1PPP/RNB1KB1R b KQ - 0 7";
			fens[11] = "rnbq1k1r/p1Np1ppp/5n2/1p5Q/4P3/b7/PPPP1PPP/RNB1KB1R w KQ - 1 7";
			fens[10] = "rnbqk2r/p1Np1ppp/5n2/1p5Q/4P3/b7/PPPP1PPP/RNB1KB1R b KQkq - 0 6";
			fens[9] = "rnbqk2r/p1pp1ppp/4Nn2/1p5Q/4P3/b7/PPPP1PPP/RNB1KB1R w KQkq b6 0 6";
			fens[8] = "rnbqk2r/pppp1ppp/4Nn2/7Q/4P3/b7/PPPP1PPP/RNB1KB1R b KQkq - 0 5";
			fens[7] = "rnbqk2r/pppp1ppp/4pn2/7Q/3NP3/b7/PPPP1PPP/RNB1KB1R w KQkq - 6 5";
			fens[6] = "rnbqk1nr/pppp1ppp/4p3/7Q/3NP3/b7/PPPP1PPP/RNB1KB1R b KQkq - 5 4";
			fens[5] = "rnbqk1nr/pppp1ppp/4p3/7Q/4P3/b4N2/PPPP1PPP/RNB1KB1R w KQkq - 4 4";
			fens[4] = "rnbqk1nr/pppp1ppp/4p3/7Q/1b2P3/5N2/PPPP1PPP/RNB1KB1R b KQkq - 3 3";
			fens[3] = "rnbqk1nr/pppp1ppp/4p3/7Q/1b2P3/8/PPPP1PPP/RNB1KBNR w KQkq - 2 3";
			fens[2] = "rnbqkbnr/pppp1ppp/4p3/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/4p3/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test72", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test72: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test73() return boolean is
			@noparse
			LOG::LogInfo(message: "test73: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b1a3 e7e5 a3b5 d8h4 b5c7 e8d8 c7a8 f8c5 a8b6 h4f2";
			fens[9] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/8/8/PPPPPqPP/R1BQKBNR w KQ - 0 6";
			fens[8] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 2 5";
			fens[7] = "Nnbk2nr/pp1p1ppp/8/2b1p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 5";
			fens[6] = "Nnbk1bnr/pp1p1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 0 4";
			fens[5] = "rnbk1bnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 4";
			fens[4] = "rnb1kbnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQkq - 0 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/1N2p3/7q/8/PPPPPPPP/R1BQKBNR w KQkq - 2 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/1N2p3/8/8/PPPPPPPP/R1BQKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/N7/PPPPPPPP/R1BQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/N7/PPPPPPPP/R1BQKBNR b KQkq - 1 1";
			
			result = ::test_do_move(name: "test73", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test73: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test74() return boolean is
			@noparse
			LOG::LogInfo(message: "test74: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b1a3 e7e5 a3b5 d8h4 b5c7 e8d8 c7a8 f8c5 a8b6 h4f2";
			fens[9] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/8/8/PPPPPqPP/R1BQKBNR w KQ - 0 6";
			fens[8] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 2 5";
			fens[7] = "Nnbk2nr/pp1p1ppp/8/2b1p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 5";
			fens[6] = "Nnbk1bnr/pp1p1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 0 4";
			fens[5] = "rnbk1bnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 4";
			fens[4] = "rnb1kbnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQkq - 0 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/1N2p3/7q/8/PPPPPPPP/R1BQKBNR w KQkq - 2 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/1N2p3/8/8/PPPPPPPP/R1BQKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/N7/PPPPPPPP/R1BQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/N7/PPPPPPPP/R1BQKBNR b KQkq - 1 1";
			
			result = ::test_do_move(name: "test74", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test74: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test75() return boolean is
			@noparse
			LOG::LogInfo(message: "test75: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e3 a7a5 d1h5 c7c5 f1c4 e7e5 h5f7";
			fens[6] = "rnbqkbnr/1p1p1Qpp/8/p1p1p3/2B5/4P3/PPPP1PPP/RNB1K1NR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/1p1p1ppp/8/p1p1p2Q/2B5/4P3/PPPP1PPP/RNB1K1NR w KQkq e6 0 4";
			fens[4] = "rnbqkbnr/1p1ppppp/8/p1p4Q/2B5/4P3/PPPP1PPP/RNB1K1NR b KQkq - 1 3";
			fens[3] = "rnbqkbnr/1p1ppppp/8/p1p4Q/8/4P3/PPPP1PPP/RNB1KBNR w KQkq c6 0 3";
			fens[2] = "rnbqkbnr/1ppppppp/8/p6Q/8/4P3/PPPP1PPP/RNB1KBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/1ppppppp/8/p7/8/4P3/PPPP1PPP/RNBQKBNR w KQkq a6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/4P3/PPPP1PPP/RNBQKBNR b KQkq - 0 1";
			
			result = ::test_do_move(name: "test75", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test75: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test76() return boolean is
			@noparse
			LOG::LogInfo(message: "test76: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "a2a4 e7e5 c2c4 d8h4 e2e4 f8c5 b2b3 h4f2";
			fens[7] = "rnb1k1nr/pppp1ppp/8/2b1p3/P1P1P3/1P6/3P1qPP/RNBQKBNR w KQkq - 0 5";
			fens[6] = "rnb1k1nr/pppp1ppp/8/2b1p3/P1P1P2q/1P6/3P1PPP/RNBQKBNR b KQkq - 0 4";
			fens[5] = "rnb1k1nr/pppp1ppp/8/2b1p3/P1P1P2q/8/1P1P1PPP/RNBQKBNR w KQkq - 1 4";
			fens[4] = "rnb1kbnr/pppp1ppp/8/4p3/P1P1P2q/8/1P1P1PPP/RNBQKBNR b KQkq e3 0 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/4p3/P1P4q/8/1P1PPPPP/RNBQKBNR w KQkq - 1 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/4p3/P1P5/8/1P1PPPPP/RNBQKBNR b KQkq c3 0 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/P7/8/1PPPPPPP/RNBQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/P7/8/1PPPPPPP/RNBQKBNR b KQkq a3 0 1";
			
			result = ::test_do_move(name: "test76", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test76: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test77() return boolean is
			@noparse
			LOG::LogInfo(message: "test77: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 d7d6 d1h5 d6d5 f1c4 d5c4 g1f3 b7b5 e1g1 e7e5 h5e5 e8d7 e5d5 d7e7 d5a8 c4c3 a8b8 c7c5 f1e1 a7a5 b1c3 b5b4 c3d5 e7e8 b8b5 d8d7 d5c7 e8d8 f3e5 g7g5 e5d7 c8a6 d7f8 g8f6 b5d7 f6d7 f8d7 a6f1 e4e5 h7h5 e1f1 f7f5 e5f6 h8h6 f6f7 h6c6 f7f8q d8c7 f8b8 c7d7 f1e1 b4b3 b8e8 d7c7 e1e6 c7b7 e8f7 b7a8 e6e8 c6c8 e8c8";
			fens[60] = "k1R5/5Q2/8/p1p3pp/8/1p6/PPPP1PPP/R1B3K1 b - - 0 31";
			fens[59] = "k1r1R3/5Q2/8/p1p3pp/8/1p6/PPPP1PPP/R1B3K1 w - - 8 31";
			fens[58] = "k3R3/5Q2/2r5/p1p3pp/8/1p6/PPPP1PPP/R1B3K1 b - - 7 30";
			fens[57] = "k7/5Q2/2r1R3/p1p3pp/8/1p6/PPPP1PPP/R1B3K1 w - - 6 30";
			fens[56] = "8/1k3Q2/2r1R3/p1p3pp/8/1p6/PPPP1PPP/R1B3K1 b - - 5 29";
			fens[55] = "4Q3/1k6/2r1R3/p1p3pp/8/1p6/PPPP1PPP/R1B3K1 w - - 4 29";
			fens[54] = "4Q3/2k5/2r1R3/p1p3pp/8/1p6/PPPP1PPP/R1B3K1 b - - 3 28";
			fens[53] = "4Q3/2k5/2r5/p1p3pp/8/1p6/PPPP1PPP/R1B1R1K1 w - - 2 28";
			fens[52] = "4Q3/3k4/2r5/p1p3pp/8/1p6/PPPP1PPP/R1B1R1K1 b - - 1 27";
			fens[51] = "1Q6/3k4/2r5/p1p3pp/8/1p6/PPPP1PPP/R1B1R1K1 w - - 0 27";
			fens[50] = "1Q6/3k4/2r5/p1p3pp/1p6/8/PPPP1PPP/R1B1R1K1 b - - 1 26";
			fens[49] = "1Q6/3k4/2r5/p1p3pp/1p6/8/PPPP1PPP/R1B2RK1 w - - 0 26";
			fens[48] = "1Q6/2kN4/2r5/p1p3pp/1p6/8/PPPP1PPP/R1B2RK1 b - - 1 25";
			fens[47] = "5Q2/2kN4/2r5/p1p3pp/1p6/8/PPPP1PPP/R1B2RK1 w - - 0 25";
			fens[46] = "3k1Q2/2NN4/2r5/p1p3pp/1p6/8/PPPP1PPP/R1B2RK1 b - - 0 24";
			fens[45] = "3k4/2NN1P2/2r5/p1p3pp/1p6/8/PPPP1PPP/R1B2RK1 w - - 1 24";
			fens[44] = "3k4/2NN1P2/7r/p1p3pp/1p6/8/PPPP1PPP/R1B2RK1 b - - 0 23";
			fens[43] = "3k4/2NN4/5P1r/p1p3pp/1p6/8/PPPP1PPP/R1B2RK1 w - - 1 23";
			fens[42] = "3k3r/2NN4/5P2/p1p3pp/1p6/8/PPPP1PPP/R1B2RK1 b - - 0 22";
			fens[41] = "3k3r/2NN4/8/p1p1Pppp/1p6/8/PPPP1PPP/R1B2RK1 w - f6 0 22";
			fens[40] = "3k3r/2NN1p2/8/p1p1P1pp/1p6/8/PPPP1PPP/R1B2RK1 b - - 0 21";
			fens[39] = "3k3r/2NN1p2/8/p1p1P1pp/1p6/8/PPPP1PPP/R1B1RbK1 w - h6 0 21";
			fens[38] = "3k3r/2NN1p1p/8/p1p1P1p1/1p6/8/PPPP1PPP/R1B1RbK1 b - - 0 20";
			fens[37] = "3k3r/2NN1p1p/8/p1p3p1/1p2P3/8/PPPP1PPP/R1B1RbK1 w - - 1 20";
			fens[36] = "3k3r/2NN1p1p/b7/p1p3p1/1p2P3/8/PPPP1PPP/R1B1R1K1 b - - 0 19";
			fens[35] = "3k1N1r/2Nn1p1p/b7/p1p3p1/1p2P3/8/PPPP1PPP/R1B1R1K1 w - - 0 19";
			fens[34] = "3k1N1r/2NQ1p1p/b4n2/p1p3p1/1p2P3/8/PPPP1PPP/R1B1R1K1 b - - 2 18";
			fens[33] = "3k1N1r/2N2p1p/b4n2/pQp3p1/1p2P3/8/PPPP1PPP/R1B1R1K1 w - - 1 18";
			fens[32] = "3k1Nnr/2N2p1p/b7/pQp3p1/1p2P3/8/PPPP1PPP/R1B1R1K1 b - - 0 17";
			fens[31] = "3k1bnr/2NN1p1p/b7/pQp3p1/1p2P3/8/PPPP1PPP/R1B1R1K1 w - - 1 17";
			fens[30] = "2bk1bnr/2NN1p1p/8/pQp3p1/1p2P3/8/PPPP1PPP/R1B1R1K1 b - - 0 16";
			fens[29] = "2bk1bnr/2Nq1p1p/8/pQp1N1p1/1p2P3/8/PPPP1PPP/R1B1R1K1 w - g6 0 16";
			fens[28] = "2bk1bnr/2Nq1ppp/8/pQp1N3/1p2P3/8/PPPP1PPP/R1B1R1K1 b - - 7 15";
			fens[27] = "2bk1bnr/2Nq1ppp/8/pQp5/1p2P3/5N2/PPPP1PPP/R1B1R1K1 w - - 6 15";
			fens[26] = "2b1kbnr/2Nq1ppp/8/pQp5/1p2P3/5N2/PPPP1PPP/R1B1R1K1 b - - 5 14";
			fens[25] = "2b1kbnr/3q1ppp/8/pQpN4/1p2P3/5N2/PPPP1PPP/R1B1R1K1 w - - 4 14";
			fens[24] = "2bqkbnr/5ppp/8/pQpN4/1p2P3/5N2/PPPP1PPP/R1B1R1K1 b - - 3 13";
			fens[23] = "1Qbqkbnr/5ppp/8/p1pN4/1p2P3/5N2/PPPP1PPP/R1B1R1K1 w - - 2 13";
			fens[22] = "1Qbq1bnr/4kppp/8/p1pN4/1p2P3/5N2/PPPP1PPP/R1B1R1K1 b - - 1 12";
			fens[21] = "1Qbq1bnr/4kppp/8/p1p5/1p2P3/2N2N2/PPPP1PPP/R1B1R1K1 w - - 0 12";
			fens[20] = "1Qbq1bnr/4kppp/8/ppp5/4P3/2N2N2/PPPP1PPP/R1B1R1K1 b - - 0 11";
			fens[19] = "1Qbq1bnr/4kppp/8/ppp5/4P3/2p2N2/PPPP1PPP/RNB1R1K1 w - a6 0 11";
			fens[18] = "1Qbq1bnr/p3kppp/8/1pp5/4P3/2p2N2/PPPP1PPP/RNB1R1K1 b - - 1 10";
			fens[17] = "1Qbq1bnr/p3kppp/8/1pp5/4P3/2p2N2/PPPP1PPP/RNB2RK1 w - c6 0 10";
			fens[16] = "1Qbq1bnr/p1p1kppp/8/1p6/4P3/2p2N2/PPPP1PPP/RNB2RK1 b - - 0 9";
			fens[15] = "Qnbq1bnr/p1p1kppp/8/1p6/4P3/2p2N2/PPPP1PPP/RNB2RK1 w - - 0 9";
			fens[14] = "Qnbq1bnr/p1p1kppp/8/1p6/2p1P3/5N2/PPPP1PPP/RNB2RK1 b - - 0 8";
			fens[13] = "rnbq1bnr/p1p1kppp/8/1p1Q4/2p1P3/5N2/PPPP1PPP/RNB2RK1 w - - 3 8";
			fens[12] = "rnbq1bnr/p1pk1ppp/8/1p1Q4/2p1P3/5N2/PPPP1PPP/RNB2RK1 b - - 2 7";
			fens[11] = "rnbq1bnr/p1pk1ppp/8/1p2Q3/2p1P3/5N2/PPPP1PPP/RNB2RK1 w - - 1 7";
			fens[10] = "rnbqkbnr/p1p2ppp/8/1p2Q3/2p1P3/5N2/PPPP1PPP/RNB2RK1 b kq - 0 6";
			fens[9] = "rnbqkbnr/p1p2ppp/8/1p2p2Q/2p1P3/5N2/PPPP1PPP/RNB2RK1 w kq e6 0 6";
			fens[8] = "rnbqkbnr/p1p1pppp/8/1p5Q/2p1P3/5N2/PPPP1PPP/RNB2RK1 b kq - 1 5";
			fens[7] = "rnbqkbnr/p1p1pppp/8/1p5Q/2p1P3/5N2/PPPP1PPP/RNB1K2R w KQkq b6 0 5";
			fens[6] = "rnbqkbnr/ppp1pppp/8/7Q/2p1P3/5N2/PPPP1PPP/RNB1K2R b KQkq - 1 4";
			fens[5] = "rnbqkbnr/ppp1pppp/8/7Q/2p1P3/8/PPPP1PPP/RNB1K1NR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/ppp1pppp/8/3p3Q/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 1 3";
			fens[3] = "rnbqkbnr/ppp1pppp/8/3p3Q/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/ppp1pppp/3p4/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/ppp1pppp/3p4/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test77", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test77: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test78() return boolean is
			@noparse
			LOG::LogInfo(message: "test78: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b1c3 e7e5 c3d5 d8h4 d5c7 e8d8 c7a8 f8c5 a8b6 h4f2";
			fens[9] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/8/8/PPPPPqPP/R1BQKBNR w KQ - 0 6";
			fens[8] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 2 5";
			fens[7] = "Nnbk2nr/pp1p1ppp/8/2b1p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 5";
			fens[6] = "Nnbk1bnr/pp1p1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 0 4";
			fens[5] = "rnbk1bnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 4";
			fens[4] = "rnb1kbnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQkq - 0 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/3Np3/7q/8/PPPPPPPP/R1BQKBNR w KQkq - 2 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/3Np3/8/8/PPPPPPPP/R1BQKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/2N5/PPPPPPPP/R1BQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/2N5/PPPPPPPP/R1BQKBNR b KQkq - 1 1";
			
			result = ::test_do_move(name: "test78", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test78: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test79() return boolean is
			@noparse
			LOG::LogInfo(message: "test79: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 b8a6 d1h5 a6b8 f1c4 b7b5 h5f7";
			fens[6] = "rnbqkbnr/p1pppQpp/8/1p6/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/p1pppppp/8/1p5Q/2B1P3/8/PPPP1PPP/RNB1K1NR w KQkq b6 0 4";
			fens[4] = "rnbqkbnr/pppppppp/8/7Q/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 4 3";
			fens[3] = "rnbqkbnr/pppppppp/8/7Q/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 3 3";
			fens[2] = "r1bqkbnr/pppppppp/n7/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 2 2";
			fens[1] = "r1bqkbnr/pppppppp/n7/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 1 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test79", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test79: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test8() return boolean is
			@noparse
			LOG::LogInfo(message: "test8: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b1a3 e7e5 a3b5 c7c6 b5c3 d7d5 f2f3 c8f5 d2d4 e5e4 f3f4 f8b4 g2g4 f5g4 g1f3 g4f3 e2f3 e4f3 d1f3 g8f6 f3e2 f6e4 e2f3 e8g8 f3h3 f8e8 h3e3 e4g3 e3e8 d8e8 e1f2 g3h1 f2g2 e8e1 g2h1 e1f1";
			fens[35] = "rn4k1/pp3ppp/2p5/3p4/1b1P1P2/2N5/PPP4P/R1B2q1K w - - 0 19";
			fens[34] = "rn4k1/pp3ppp/2p5/3p4/1b1P1P2/2N5/PPP4P/R1B1qB1K b - - 0 18";
			fens[33] = "rn4k1/pp3ppp/2p5/3p4/1b1P1P2/2N5/PPP3KP/R1B1qB1n w - - 2 18";
			fens[32] = "rn2q1k1/pp3ppp/2p5/3p4/1b1P1P2/2N5/PPP3KP/R1B2B1n b - - 1 17";
			fens[31] = "rn2q1k1/pp3ppp/2p5/3p4/1b1P1P2/2N5/PPP2K1P/R1B2B1n w - - 0 17";
			fens[30] = "rn2q1k1/pp3ppp/2p5/3p4/1b1P1P2/2N3n1/PPP2K1P/R1B2B1R b - - 1 16";
			fens[29] = "rn2q1k1/pp3ppp/2p5/3p4/1b1P1P2/2N3n1/PPP4P/R1B1KB1R w KQ - 0 16";
			fens[28] = "rn1qQ1k1/pp3ppp/2p5/3p4/1b1P1P2/2N3n1/PPP4P/R1B1KB1R b KQ - 0 15";
			fens[27] = "rn1qr1k1/pp3ppp/2p5/3p4/1b1P1P2/2N1Q1n1/PPP4P/R1B1KB1R w KQ - 9 15";
			fens[26] = "rn1qr1k1/pp3ppp/2p5/3p4/1b1PnP2/2N1Q3/PPP4P/R1B1KB1R b KQ - 8 14";
			fens[25] = "rn1qr1k1/pp3ppp/2p5/3p4/1b1PnP2/2N4Q/PPP4P/R1B1KB1R w KQ - 7 14";
			fens[24] = "rn1q1rk1/pp3ppp/2p5/3p4/1b1PnP2/2N4Q/PPP4P/R1B1KB1R b KQ - 6 13";
			fens[23] = "rn1q1rk1/pp3ppp/2p5/3p4/1b1PnP2/2N2Q2/PPP4P/R1B1KB1R w KQ - 5 13";
			fens[22] = "rn1qk2r/pp3ppp/2p5/3p4/1b1PnP2/2N2Q2/PPP4P/R1B1KB1R b KQkq - 4 12";
			fens[21] = "rn1qk2r/pp3ppp/2p5/3p4/1b1PnP2/2N5/PPP1Q2P/R1B1KB1R w KQkq - 3 12";
			fens[20] = "rn1qk2r/pp3ppp/2p2n2/3p4/1b1P1P2/2N5/PPP1Q2P/R1B1KB1R b KQkq - 2 11";
			fens[19] = "rn1qk2r/pp3ppp/2p2n2/3p4/1b1P1P2/2N2Q2/PPP4P/R1B1KB1R w KQkq - 1 11";
			fens[18] = "rn1qk1nr/pp3ppp/2p5/3p4/1b1P1P2/2N2Q2/PPP4P/R1B1KB1R b KQkq - 0 10";
			fens[17] = "rn1qk1nr/pp3ppp/2p5/3p4/1b1P1P2/2N2p2/PPP4P/R1BQKB1R w KQkq - 0 10";
			fens[16] = "rn1qk1nr/pp3ppp/2p5/3p4/1b1PpP2/2N2P2/PPP4P/R1BQKB1R b KQkq - 0 9";
			fens[15] = "rn1qk1nr/pp3ppp/2p5/3p4/1b1PpP2/2N2b2/PPP1P2P/R1BQKB1R w KQkq - 0 9";
			fens[14] = "rn1qk1nr/pp3ppp/2p5/3p4/1b1PpPb1/2N2N2/PPP1P2P/R1BQKB1R b KQkq - 1 8";
			fens[13] = "rn1qk1nr/pp3ppp/2p5/3p4/1b1PpPb1/2N5/PPP1P2P/R1BQKBNR w KQkq - 0 8";
			fens[12] = "rn1qk1nr/pp3ppp/2p5/3p1b2/1b1PpPP1/2N5/PPP1P2P/R1BQKBNR b KQkq g3 0 7";
			fens[11] = "rn1qk1nr/pp3ppp/2p5/3p1b2/1b1PpP2/2N5/PPP1P1PP/R1BQKBNR w KQkq - 1 7";
			fens[10] = "rn1qkbnr/pp3ppp/2p5/3p1b2/3PpP2/2N5/PPP1P1PP/R1BQKBNR b KQkq - 0 6";
			fens[9] = "rn1qkbnr/pp3ppp/2p5/3p1b2/3Pp3/2N2P2/PPP1P1PP/R1BQKBNR w KQkq - 0 6";
			fens[8] = "rn1qkbnr/pp3ppp/2p5/3ppb2/3P4/2N2P2/PPP1P1PP/R1BQKBNR b KQkq d3 0 5";
			fens[7] = "rn1qkbnr/pp3ppp/2p5/3ppb2/8/2N2P2/PPPPP1PP/R1BQKBNR w KQkq - 1 5";
			fens[6] = "rnbqkbnr/pp3ppp/2p5/3pp3/8/2N2P2/PPPPP1PP/R1BQKBNR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/pp3ppp/2p5/3pp3/8/2N5/PPPPPPPP/R1BQKBNR w KQkq d6 0 4";
			fens[4] = "rnbqkbnr/pp1p1ppp/2p5/4p3/8/2N5/PPPPPPPP/R1BQKBNR b KQkq - 1 3";
			fens[3] = "rnbqkbnr/pp1p1ppp/2p5/1N2p3/8/8/PPPPPPPP/R1BQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/1N2p3/8/8/PPPPPPPP/R1BQKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/N7/PPPPPPPP/R1BQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/N7/PPPPPPPP/R1BQKBNR b KQkq - 1 1";
			
			result = ::test_do_move(name: "test8", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test8: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test80() return boolean is
			@noparse
			LOG::LogInfo(message: "test80: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b1c3 e7e5 c3d5 d8h4 d5c7 e8d8 c7a8 f8c5 a8b6 h4f2";
			fens[9] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/8/8/PPPPPqPP/R1BQKBNR w KQ - 0 6";
			fens[8] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 2 5";
			fens[7] = "Nnbk2nr/pp1p1ppp/8/2b1p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 5";
			fens[6] = "Nnbk1bnr/pp1p1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 0 4";
			fens[5] = "rnbk1bnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 4";
			fens[4] = "rnb1kbnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQkq - 0 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/3Np3/7q/8/PPPPPPPP/R1BQKBNR w KQkq - 2 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/3Np3/8/8/PPPPPPPP/R1BQKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/2N5/PPPPPPPP/R1BQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/2N5/PPPPPPPP/R1BQKBNR b KQkq - 1 1";
			
			result = ::test_do_move(name: "test80", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test80: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test81() return boolean is
			@noparse
			LOG::LogInfo(message: "test81: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 b8c6 d1h5 c6b8 f1c4 d7d5 c4d5 d8d5 e4d5 c8h3 h5h3 e8d8 c2c4 g8f6 g1f3 f6e4 e1g1 e4g3 h3g3 e7e5 g3e5 f8a3 b1a3 b8a6 d2d3 a6b4 c1g5 d8c8 e5f5 c8b8 f1e1 b4c2 e1e8 h8e8 a3c2 e8e1 a1e1 h7h6 e1e8";
			fens[38] = "rk2R3/ppp2pp1/7p/3P1QB1/2P5/3P1N2/PPN2PPP/6K1 b - - 1 20";
			fens[37] = "rk6/ppp2pp1/7p/3P1QB1/2P5/3P1N2/PPN2PPP/4R1K1 w - - 0 20";
			fens[36] = "rk6/ppp2ppp/8/3P1QB1/2P5/3P1N2/PPN2PPP/4R1K1 b - - 0 19";
			fens[35] = "rk6/ppp2ppp/8/3P1QB1/2P5/3P1N2/PPN2PPP/R3r1K1 w - - 1 19";
			fens[34] = "rk2r3/ppp2ppp/8/3P1QB1/2P5/3P1N2/PPN2PPP/R5K1 b - - 0 18";
			fens[33] = "rk2r3/ppp2ppp/8/3P1QB1/2P5/N2P1N2/PPn2PPP/R5K1 w - - 0 18";
			fens[32] = "rk2R2r/ppp2ppp/8/3P1QB1/2P5/N2P1N2/PPn2PPP/R5K1 b - - 8 17";
			fens[31] = "rk5r/ppp2ppp/8/3P1QB1/2P5/N2P1N2/PPn2PPP/R3R1K1 w - - 7 17";
			fens[30] = "rk5r/ppp2ppp/8/3P1QB1/1nP5/N2P1N2/PP3PPP/R3R1K1 b - - 6 16";
			fens[29] = "rk5r/ppp2ppp/8/3P1QB1/1nP5/N2P1N2/PP3PPP/R4RK1 w - - 5 16";
			fens[28] = "r1k4r/ppp2ppp/8/3P1QB1/1nP5/N2P1N2/PP3PPP/R4RK1 b - - 4 15";
			fens[27] = "r1k4r/ppp2ppp/8/3PQ1B1/1nP5/N2P1N2/PP3PPP/R4RK1 w - - 3 15";
			fens[26] = "r2k3r/ppp2ppp/8/3PQ1B1/1nP5/N2P1N2/PP3PPP/R4RK1 b - - 2 14";
			fens[25] = "r2k3r/ppp2ppp/8/3PQ3/1nP5/N2P1N2/PP3PPP/R1B2RK1 w - - 1 14";
			fens[24] = "r2k3r/ppp2ppp/n7/3PQ3/2P5/N2P1N2/PP3PPP/R1B2RK1 b - - 0 13";
			fens[23] = "r2k3r/ppp2ppp/n7/3PQ3/2P5/N4N2/PP1P1PPP/R1B2RK1 w - - 1 13";
			fens[22] = "rn1k3r/ppp2ppp/8/3PQ3/2P5/N4N2/PP1P1PPP/R1B2RK1 b - - 0 12";
			fens[21] = "rn1k3r/ppp2ppp/8/3PQ3/2P5/b4N2/PP1P1PPP/RNB2RK1 w - - 1 12";
			fens[20] = "rn1k1b1r/ppp2ppp/8/3PQ3/2P5/5N2/PP1P1PPP/RNB2RK1 b - - 0 11";
			fens[19] = "rn1k1b1r/ppp2ppp/8/3Pp3/2P5/5NQ1/PP1P1PPP/RNB2RK1 w - e6 0 11";
			fens[18] = "rn1k1b1r/ppp1pppp/8/3P4/2P5/5NQ1/PP1P1PPP/RNB2RK1 b - - 0 10";
			fens[17] = "rn1k1b1r/ppp1pppp/8/3P4/2P5/5NnQ/PP1P1PPP/RNB2RK1 w - - 5 10";
			fens[16] = "rn1k1b1r/ppp1pppp/8/3P4/2P1n3/5N1Q/PP1P1PPP/RNB2RK1 b - - 4 9";
			fens[15] = "rn1k1b1r/ppp1pppp/8/3P4/2P1n3/5N1Q/PP1P1PPP/RNB1K2R w KQ - 3 9";
			fens[14] = "rn1k1b1r/ppp1pppp/5n2/3P4/2P5/5N1Q/PP1P1PPP/RNB1K2R b KQ - 2 8";
			fens[13] = "rn1k1b1r/ppp1pppp/5n2/3P4/2P5/7Q/PP1P1PPP/RNB1K1NR w KQ - 1 8";
			fens[12] = "rn1k1bnr/ppp1pppp/8/3P4/2P5/7Q/PP1P1PPP/RNB1K1NR b KQ c3 0 7";
			fens[11] = "rn1k1bnr/ppp1pppp/8/3P4/8/7Q/PPPP1PPP/RNB1K1NR w KQ - 1 7";
			fens[10] = "rn2kbnr/ppp1pppp/8/3P4/8/7Q/PPPP1PPP/RNB1K1NR b KQkq - 0 6";
			fens[9] = "rn2kbnr/ppp1pppp/8/3P3Q/8/7b/PPPP1PPP/RNB1K1NR w KQkq - 1 6";
			fens[8] = "rnb1kbnr/ppp1pppp/8/3P3Q/8/8/PPPP1PPP/RNB1K1NR b KQkq - 0 5";
			fens[7] = "rnb1kbnr/ppp1pppp/8/3q3Q/4P3/8/PPPP1PPP/RNB1K1NR w KQkq - 0 5";
			fens[6] = "rnbqkbnr/ppp1pppp/8/3B3Q/4P3/8/PPPP1PPP/RNB1K1NR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/ppp1pppp/8/3p3Q/2B1P3/8/PPPP1PPP/RNB1K1NR w KQkq d6 0 4";
			fens[4] = "rnbqkbnr/pppppppp/8/7Q/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 4 3";
			fens[3] = "rnbqkbnr/pppppppp/8/7Q/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 3 3";
			fens[2] = "r1bqkbnr/pppppppp/2n5/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 2 2";
			fens[1] = "r1bqkbnr/pppppppp/2n5/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 1 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test81", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test81: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test82() return boolean is
			@noparse
			LOG::LogInfo(message: "test82: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b1a3 e7e5 a3b5 d8h4 b5c7 e8d8 c7a8 f8c5 a8b6 h4f2";
			fens[9] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/8/8/PPPPPqPP/R1BQKBNR w KQ - 0 6";
			fens[8] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 2 5";
			fens[7] = "Nnbk2nr/pp1p1ppp/8/2b1p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 5";
			fens[6] = "Nnbk1bnr/pp1p1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 0 4";
			fens[5] = "rnbk1bnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 4";
			fens[4] = "rnb1kbnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQkq - 0 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/1N2p3/7q/8/PPPPPPPP/R1BQKBNR w KQkq - 2 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/1N2p3/8/8/PPPPPPPP/R1BQKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/N7/PPPPPPPP/R1BQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/N7/PPPPPPPP/R1BQKBNR b KQkq - 1 1";
			
			result = ::test_do_move(name: "test82", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test82: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test83() return boolean is
			@noparse
			LOG::LogInfo(message: "test83: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 b8c6 d1h5 c6b8 f1c4 e7e5 h5f7";
			fens[6] = "rnbqkbnr/pppp1Qpp/8/4p3/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/pppp1ppp/8/4p2Q/2B1P3/8/PPPP1PPP/RNB1K1NR w KQkq e6 0 4";
			fens[4] = "rnbqkbnr/pppppppp/8/7Q/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 4 3";
			fens[3] = "rnbqkbnr/pppppppp/8/7Q/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 3 3";
			fens[2] = "r1bqkbnr/pppppppp/2n5/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 2 2";
			fens[1] = "r1bqkbnr/pppppppp/2n5/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 1 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test83", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test83: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test84() return boolean is
			@noparse
			LOG::LogInfo(message: "test84: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 b8a6 d1h5 a6b8 f1c4 d7d5 h5f7 e8f7 c4d5 d8d5 e4d5 g7g6 d2d3 f7g7 c1g5 c7c6 d5c6 b7c6 c2c4 g7f7 g1f3 f7e6 e1g1 e6f5 f1e1 f5g4 e1e4 g4f5 f3h4 f5g5 g2g3 c6c5 e4e5 g5g4 g1g2 g6g5 f2f3 g4h5 g3g4 h5h4 b1c3 c8g4 f3g4 h4g4 a1f1 h7h5 c3e2 a7a6 f1f4 g5f4 e2f4 g4f4 e5e4 f4f5 d3d4 f5e4 d4c5 e4d4 c5c6 d4c4 c6c7 h5h4 c7c8q c4b5 c8f8 b5c5 f8e7 g8e7 h2h3 e7c8 b2b3 h8e8 a2a3 c5d4 b3b4 d4d3 a3a4 d3e4 b4b5 a6b5 a4b5 e8d8 b5b6 c8b6 g2h2 b6c8 h2g2 e4f4 g2h2 f4f3 h2h1 d8e8 h1h2 e8d8 h2h1 d8e8 h1h2 e8d8";
			fens[97] = "rnnr4/8/8/8/7p/5k1P/7K/8 w - - 14 50";
			fens[96] = "rnn1r3/8/8/8/7p/5k1P/7K/8 b - - 13 49";
			fens[95] = "rnn1r3/8/8/8/7p/5k1P/8/7K w - - 12 49";
			fens[94] = "rnnr4/8/8/8/7p/5k1P/8/7K b - - 11 48";
			fens[93] = "rnnr4/8/8/8/7p/5k1P/7K/8 w - - 10 48";
			fens[92] = "rnn1r3/8/8/8/7p/5k1P/7K/8 b - - 9 47";
			fens[91] = "rnn1r3/8/8/8/7p/5k1P/8/7K w - - 8 47";
			fens[90] = "rnnr4/8/8/8/7p/5k1P/8/7K b - - 7 46";
			fens[89] = "rnnr4/8/8/8/7p/5k1P/7K/8 w - - 6 46";
			fens[88] = "rnnr4/8/8/8/5k1p/7P/7K/8 b - - 5 45";
			fens[87] = "rnnr4/8/8/8/5k1p/7P/6K1/8 w - - 4 45";
			fens[86] = "rnnr4/8/8/8/4k2p/7P/6K1/8 b - - 3 44";
			fens[85] = "rnnr4/8/8/8/4k2p/7P/7K/8 w - - 2 44";
			fens[84] = "rn1r4/8/1n6/8/4k2p/7P/7K/8 b - - 1 43";
			fens[83] = "rn1r4/8/1n6/8/4k2p/7P/6K1/8 w - - 0 43";
			fens[82] = "rnnr4/8/1P6/8/4k2p/7P/6K1/8 b - - 0 42";
			fens[81] = "rnnr4/8/8/1P6/4k2p/7P/6K1/8 w - - 1 42";
			fens[80] = "rnn1r3/8/8/1P6/4k2p/7P/6K1/8 b - - 0 41";
			fens[79] = "rnn1r3/8/8/1p6/P3k2p/7P/6K1/8 w - - 0 41";
			fens[78] = "rnn1r3/8/p7/1P6/P3k2p/7P/6K1/8 b - - 0 40";
			fens[77] = "rnn1r3/8/p7/8/PP2k2p/7P/6K1/8 w - - 1 40";
			fens[76] = "rnn1r3/8/p7/8/PP5p/3k3P/6K1/8 b - - 0 39";
			fens[75] = "rnn1r3/8/p7/8/1P5p/P2k3P/6K1/8 w - - 1 39";
			fens[74] = "rnn1r3/8/p7/8/1P1k3p/P6P/6K1/8 b - - 0 38";
			fens[73] = "rnn1r3/8/p7/8/3k3p/PP5P/6K1/8 w - - 1 38";
			fens[72] = "rnn1r3/8/p7/2k5/7p/PP5P/6K1/8 b - - 0 37";
			fens[71] = "rnn1r3/8/p7/2k5/7p/1P5P/P5K1/8 w - - 1 37";
			fens[70] = "rnn4r/8/p7/2k5/7p/1P5P/P5K1/8 b - - 0 36";
			fens[69] = "rnn4r/8/p7/2k5/7p/7P/PP4K1/8 w - - 1 36";
			fens[68] = "rn5r/4n3/p7/2k5/7p/7P/PP4K1/8 b - - 0 35";
			fens[67] = "rn5r/4n3/p7/2k5/7p/8/PP4KP/8 w - - 0 35";
			fens[66] = "rn4nr/4Q3/p7/2k5/7p/8/PP4KP/8 b - - 0 34";
			fens[65] = "rn3Qnr/4p3/p7/2k5/7p/8/PP4KP/8 w - - 1 34";
			fens[64] = "rn3Qnr/4p3/p7/1k6/7p/8/PP4KP/8 b - - 0 33";
			fens[63] = "rnQ2bnr/4p3/p7/1k6/7p/8/PP4KP/8 w - - 1 33";
			fens[62] = "rnQ2bnr/4p3/p7/8/2k4p/8/PP4KP/8 b - - 0 32";
			fens[61] = "rn3bnr/2P1p3/p7/8/2k4p/8/PP4KP/8 w - - 0 32";
			fens[60] = "rn3bnr/2P1p3/p7/7p/2k5/8/PP4KP/8 b - - 0 31";
			fens[59] = "rn3bnr/4p3/p1P5/7p/2k5/8/PP4KP/8 w - - 0 31";
			fens[58] = "rn3bnr/4p3/p1P5/7p/2Pk4/8/PP4KP/8 b - - 0 30";
			fens[57] = "rn3bnr/4p3/p7/2P4p/2Pk4/8/PP4KP/8 w - - 1 30";
			fens[56] = "rn3bnr/4p3/p7/2P4p/2P1k3/8/PP4KP/8 b - - 0 29";
			fens[55] = "rn3bnr/4p3/p7/2p4p/2PPk3/8/PP4KP/8 w - - 0 29";
			fens[54] = "rn3bnr/4p3/p7/2p2k1p/2PPR3/8/PP4KP/8 b - - 0 28";
			fens[53] = "rn3bnr/4p3/p7/2p2k1p/2P1R3/3P4/PP4KP/8 w - - 2 28";
			fens[52] = "rn3bnr/4p3/p7/2p4p/2P1Rk2/3P4/PP4KP/8 b - - 1 27";
			fens[51] = "rn3bnr/4p3/p7/2p1R2p/2P2k2/3P4/PP4KP/8 w - - 0 27";
			fens[50] = "rn3bnr/4p3/p7/2p1R2p/2P2Nk1/3P4/PP4KP/8 b - - 0 26";
			fens[49] = "rn3bnr/4p3/p7/2p1R2p/2P2pk1/3P4/PP2N1KP/8 w - - 0 26";
			fens[48] = "rn3bnr/4p3/p7/2p1R1pp/2P2Rk1/3P4/PP2N1KP/8 b - - 1 25";
			fens[47] = "rn3bnr/4p3/p7/2p1R1pp/2P3k1/3P4/PP2N1KP/5R2 w - - 0 25";
			fens[46] = "rn3bnr/p3p3/8/2p1R1pp/2P3k1/3P4/PP2N1KP/5R2 b - - 1 24";
			fens[45] = "rn3bnr/p3p3/8/2p1R1pp/2P3k1/2NP4/PP4KP/5R2 w - h6 0 24";
			fens[44] = "rn3bnr/p3p2p/8/2p1R1p1/2P3k1/2NP4/PP4KP/5R2 b - - 1 23";
			fens[43] = "rn3bnr/p3p2p/8/2p1R1p1/2P3k1/2NP4/PP4KP/R7 w - - 0 23";
			fens[42] = "rn3bnr/p3p2p/8/2p1R1p1/2P3Pk/2NP4/PP4KP/R7 b - - 0 22";
			fens[41] = "rn3bnr/p3p2p/8/2p1R1p1/2P3bk/2NP1P2/PP4KP/R7 w - - 0 22";
			fens[40] = "rnb2bnr/p3p2p/8/2p1R1p1/2P3Pk/2NP1P2/PP4KP/R7 b - - 1 21";
			fens[39] = "rnb2bnr/p3p2p/8/2p1R1p1/2P3Pk/3P1P2/PP4KP/RN6 w - - 0 21";
			fens[38] = "rnb2bnr/p3p2p/8/2p1R1pk/2P3PN/3P1P2/PP4KP/RN6 b - - 0 20";
			fens[37] = "rnb2bnr/p3p2p/8/2p1R1pk/2P4N/3P1PP1/PP4KP/RN6 w - - 1 20";
			fens[36] = "rnb2bnr/p3p2p/8/2p1R1p1/2P3kN/3P1PP1/PP4KP/RN6 b - - 0 19";
			fens[35] = "rnb2bnr/p3p2p/8/2p1R1p1/2P3kN/3P2P1/PP3PKP/RN6 w - - 0 19";
			fens[34] = "rnb2bnr/p3p2p/6p1/2p1R3/2P3kN/3P2P1/PP3PKP/RN6 b - - 3 18";
			fens[33] = "rnb2bnr/p3p2p/6p1/2p1R3/2P3kN/3P2P1/PP3P1P/RN4K1 w - - 2 18";
			fens[32] = "rnb2bnr/p3p2p/6p1/2p1R1k1/2P4N/3P2P1/PP3P1P/RN4K1 b - - 1 17";
			fens[31] = "rnb2bnr/p3p2p/6p1/2p3k1/2P1R2N/3P2P1/PP3P1P/RN4K1 w - - 0 17";
			fens[30] = "rnb2bnr/p3p2p/2p3p1/6k1/2P1R2N/3P2P1/PP3P1P/RN4K1 b - - 0 16";
			fens[29] = "rnb2bnr/p3p2p/2p3p1/6k1/2P1R2N/3P4/PP3PPP/RN4K1 w - - 0 16";
			fens[28] = "rnb2bnr/p3p2p/2p3p1/5kB1/2P1R2N/3P4/PP3PPP/RN4K1 b - - 10 15";
			fens[27] = "rnb2bnr/p3p2p/2p3p1/5kB1/2P1R3/3P1N2/PP3PPP/RN4K1 w - - 9 15";
			fens[26] = "rnb2bnr/p3p2p/2p3p1/6B1/2P1R1k1/3P1N2/PP3PPP/RN4K1 b - - 8 14";
			fens[25] = "rnb2bnr/p3p2p/2p3p1/6B1/2P3k1/3P1N2/PP3PPP/RN2R1K1 w - - 7 14";
			fens[24] = "rnb2bnr/p3p2p/2p3p1/5kB1/2P5/3P1N2/PP3PPP/RN2R1K1 b - - 6 13";
			fens[23] = "rnb2bnr/p3p2p/2p3p1/5kB1/2P5/3P1N2/PP3PPP/RN3RK1 w - - 5 13";
			fens[22] = "rnb2bnr/p3p2p/2p1k1p1/6B1/2P5/3P1N2/PP3PPP/RN3RK1 b - - 4 12";
			fens[21] = "rnb2bnr/p3p2p/2p1k1p1/6B1/2P5/3P1N2/PP3PPP/RN2K2R w KQ - 3 12";
			fens[20] = "rnb2bnr/p3pk1p/2p3p1/6B1/2P5/3P1N2/PP3PPP/RN2K2R b KQ - 2 11";
			fens[19] = "rnb2bnr/p3pk1p/2p3p1/6B1/2P5/3P4/PP3PPP/RN2K1NR w KQ - 1 11";
			fens[18] = "rnb2bnr/p3p1kp/2p3p1/6B1/2P5/3P4/PP3PPP/RN2K1NR b KQ c3 0 10";
			fens[17] = "rnb2bnr/p3p1kp/2p3p1/6B1/8/3P4/PPP2PPP/RN2K1NR w KQ - 0 10";
			fens[16] = "rnb2bnr/pp2p1kp/2P3p1/6B1/8/3P4/PPP2PPP/RN2K1NR b KQ - 0 9";
			fens[15] = "rnb2bnr/pp2p1kp/2p3p1/3P2B1/8/3P4/PPP2PPP/RN2K1NR w KQ - 0 9";
			fens[14] = "rnb2bnr/ppp1p1kp/6p1/3P2B1/8/3P4/PPP2PPP/RN2K1NR b KQ - 2 8";
			fens[13] = "rnb2bnr/ppp1p1kp/6p1/3P4/8/3P4/PPP2PPP/RNB1K1NR w KQ - 1 8";
			fens[12] = "rnb2bnr/ppp1pk1p/6p1/3P4/8/3P4/PPP2PPP/RNB1K1NR b KQ - 0 7";
			fens[11] = "rnb2bnr/ppp1pk1p/6p1/3P4/8/8/PPPP1PPP/RNB1K1NR w KQ - 0 7";
			fens[10] = "rnb2bnr/ppp1pkpp/8/3P4/8/8/PPPP1PPP/RNB1K1NR b KQ - 0 6";
			fens[9] = "rnb2bnr/ppp1pkpp/8/3q4/4P3/8/PPPP1PPP/RNB1K1NR w KQ - 0 6";
			fens[8] = "rnbq1bnr/ppp1pkpp/8/3B4/4P3/8/PPPP1PPP/RNB1K1NR b KQ - 0 5";
			fens[7] = "rnbq1bnr/ppp1pkpp/8/3p4/2B1P3/8/PPPP1PPP/RNB1K1NR w KQ - 0 5";
			fens[6] = "rnbqkbnr/ppp1pQpp/8/3p4/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/ppp1pppp/8/3p3Q/2B1P3/8/PPPP1PPP/RNB1K1NR w KQkq d6 0 4";
			fens[4] = "rnbqkbnr/pppppppp/8/7Q/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 4 3";
			fens[3] = "rnbqkbnr/pppppppp/8/7Q/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 3 3";
			fens[2] = "r1bqkbnr/pppppppp/n7/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 2 2";
			fens[1] = "r1bqkbnr/pppppppp/n7/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 1 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test84", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test84: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test85() return boolean is
			@noparse
			LOG::LogInfo(message: "test85: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b1a3 e7e5 a3b5 d8h4 b5c7 e8d8 c7a8 f8c5 a8b6 h4f2";
			fens[9] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/8/8/PPPPPqPP/R1BQKBNR w KQ - 0 6";
			fens[8] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 2 5";
			fens[7] = "Nnbk2nr/pp1p1ppp/8/2b1p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 5";
			fens[6] = "Nnbk1bnr/pp1p1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 0 4";
			fens[5] = "rnbk1bnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 4";
			fens[4] = "rnb1kbnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQkq - 0 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/1N2p3/7q/8/PPPPPPPP/R1BQKBNR w KQkq - 2 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/1N2p3/8/8/PPPPPPPP/R1BQKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/N7/PPPPPPPP/R1BQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/N7/PPPPPPPP/R1BQKBNR b KQkq - 1 1";
			
			result = ::test_do_move(name: "test85", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test85: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test86() return boolean is
			@noparse
			LOG::LogInfo(message: "test86: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 b8c6 d1h5 c6b8 f1c4 b7b5 h5f7";
			fens[6] = "rnbqkbnr/p1pppQpp/8/1p6/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/p1pppppp/8/1p5Q/2B1P3/8/PPPP1PPP/RNB1K1NR w KQkq b6 0 4";
			fens[4] = "rnbqkbnr/pppppppp/8/7Q/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 4 3";
			fens[3] = "rnbqkbnr/pppppppp/8/7Q/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 3 3";
			fens[2] = "r1bqkbnr/pppppppp/2n5/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 2 2";
			fens[1] = "r1bqkbnr/pppppppp/2n5/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 1 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test86", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test86: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test87() return boolean is
			@noparse
			LOG::LogInfo(message: "test87: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b1c3 e7e5 c3b5 c7c6 b5c7 d8c7 g1f3 d7d5 f3g5 f7f6 g5f7 e8f7 h2h4 c7d7 h1h3 f8c5 h3b3 d7g4 b3b6 a7b6 g2g3 g4h4 f1h3 h4h3 g3g4 h3h1";
			fens[25] = "rnb3nr/1p3kpp/1pp2p2/2bpp3/6P1/8/PPPPPP2/R1BQK2q w Q - 1 14";
			fens[24] = "rnb3nr/1p3kpp/1pp2p2/2bpp3/6P1/7q/PPPPPP2/R1BQK3 b Q - 0 13";
			fens[23] = "rnb3nr/1p3kpp/1pp2p2/2bpp3/8/6Pq/PPPPPP2/R1BQK3 w Q - 0 13";
			fens[22] = "rnb3nr/1p3kpp/1pp2p2/2bpp3/7q/6PB/PPPPPP2/R1BQK3 b Q - 1 12";
			fens[21] = "rnb3nr/1p3kpp/1pp2p2/2bpp3/7q/6P1/PPPPPP2/R1BQKB2 w Q - 0 12";
			fens[20] = "rnb3nr/1p3kpp/1pp2p2/2bpp3/6qP/6P1/PPPPPP2/R1BQKB2 b Q - 0 11";
			fens[19] = "rnb3nr/1p3kpp/1pp2p2/2bpp3/6qP/8/PPPPPPP1/R1BQKB2 w Q - 0 11";
			fens[18] = "rnb3nr/pp3kpp/1Rp2p2/2bpp3/6qP/8/PPPPPPP1/R1BQKB2 b Q - 6 10";
			fens[17] = "rnb3nr/pp3kpp/2p2p2/2bpp3/6qP/1R6/PPPPPPP1/R1BQKB2 w Q - 5 10";
			fens[16] = "rnb3nr/pp1q1kpp/2p2p2/2bpp3/7P/1R6/PPPPPPP1/R1BQKB2 b Q - 4 9";
			fens[15] = "rnb3nr/pp1q1kpp/2p2p2/2bpp3/7P/7R/PPPPPPP1/R1BQKB2 w Q - 3 9";
			fens[14] = "rnb2bnr/pp1q1kpp/2p2p2/3pp3/7P/7R/PPPPPPP1/R1BQKB2 b Q - 2 8";
			fens[13] = "rnb2bnr/pp1q1kpp/2p2p2/3pp3/7P/8/PPPPPPP1/R1BQKB1R w KQ - 1 8";
			fens[12] = "rnb2bnr/ppq2kpp/2p2p2/3pp3/7P/8/PPPPPPP1/R1BQKB1R b KQ h3 0 7";
			fens[11] = "rnb2bnr/ppq2kpp/2p2p2/3pp3/8/8/PPPPPPPP/R1BQKB1R w KQ - 0 7";
			fens[10] = "rnb1kbnr/ppq2Npp/2p2p2/3pp3/8/8/PPPPPPPP/R1BQKB1R b KQkq - 1 6";
			fens[9] = "rnb1kbnr/ppq3pp/2p2p2/3pp1N1/8/8/PPPPPPPP/R1BQKB1R w KQkq - 0 6";
			fens[8] = "rnb1kbnr/ppq2ppp/2p5/3pp1N1/8/8/PPPPPPPP/R1BQKB1R b KQkq - 1 5";
			fens[7] = "rnb1kbnr/ppq2ppp/2p5/3pp3/8/5N2/PPPPPPPP/R1BQKB1R w KQkq d6 0 5";
			fens[6] = "rnb1kbnr/ppqp1ppp/2p5/4p3/8/5N2/PPPPPPPP/R1BQKB1R b KQkq - 1 4";
			fens[5] = "rnb1kbnr/ppqp1ppp/2p5/4p3/8/8/PPPPPPPP/R1BQKBNR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/ppNp1ppp/2p5/4p3/8/8/PPPPPPPP/R1BQKBNR b KQkq - 1 3";
			fens[3] = "rnbqkbnr/pp1p1ppp/2p5/1N2p3/8/8/PPPPPPPP/R1BQKBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/1N2p3/8/8/PPPPPPPP/R1BQKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/2N5/PPPPPPPP/R1BQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/2N5/PPPPPPPP/R1BQKBNR b KQkq - 1 1";
			
			result = ::test_do_move(name: "test87", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test87: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test88() return boolean is
			@noparse
			LOG::LogInfo(message: "test88: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "d2d4 b8a6 e2e4 g8f6 d1h5 f6h5 f1a6 b7a6 g1f3 h5f6 f3g5 f6e4 f2f3 e4g5 f3f4 g5e6 e1g1 e6d4 c2c3 d4c6 b1d2 c6b8 d2c4 h8g8 c1e3 g8h8 f4f5 h8g8 g2g4 g8h8 h2h3 h8g8 h3h4 g8h8 g4g5 h8g8 f5f6 e7f6 g5f6 g7f6 g1h2 e8e7 f1e1 e7e6 e3d4 e6d5 b2b3 a6a5 c4e3 d5e4 e3c4 e4f3 e1e3 f3f4 a1f1 f4g4 e3g3 g4h4 f1f4 g8g4 f4g4 h4h5 d4f6 d7d5 f6d8 c8g4 d8c7 d5c4 c7b8 a8b8 b3c4 h5h4 c4c5 f8c5 c3c4 g4c8 h2g2 c5f8 g2f3 a5a4 f3f4 a4a3 g3g1 h4h3 f4f3 h3h2 f3f2 b8a8 g1g5 h2h3 g5g8 h3h4 g8f8 c8b7 f8f7 b7c8 f7h7 h4g5 h7f7 a7a5 f2f3 a8b8 c4c5 g5h5 c5c6 h5g6 c6c7 g6f7 c7b8q c8g4 f3g4 f7g6 b8f8 g6h7 f8f5 h7h8 f5g5 a5a4 g4f5 h8h7 f5f6 h7h8 g5g7";
			fens[122] = "7k/6Q1/5K2/8/p7/p7/P7/8 b - - 5 62";
			fens[121] = "7k/8/5K2/6Q1/p7/p7/P7/8 w - - 4 62";
			fens[120] = "8/7k/5K2/6Q1/p7/p7/P7/8 b - - 3 61";
			fens[119] = "8/7k/8/5KQ1/p7/p7/P7/8 w - - 2 61";
			fens[118] = "7k/8/8/5KQ1/p7/p7/P7/8 b - - 1 60";
			fens[117] = "7k/8/8/6Q1/p5K1/p7/P7/8 w - - 0 60";
			fens[116] = "7k/8/8/p5Q1/6K1/p7/P7/8 b - - 6 59";
			fens[115] = "7k/8/8/p4Q2/6K1/p7/P7/8 w - - 5 59";
			fens[114] = "8/7k/8/p4Q2/6K1/p7/P7/8 b - - 4 58";
			fens[113] = "5Q2/7k/8/p7/6K1/p7/P7/8 w - - 3 58";
			fens[112] = "5Q2/8/6k1/p7/6K1/p7/P7/8 b - - 2 57";
			fens[111] = "1Q6/8/6k1/p7/6K1/p7/P7/8 w - - 1 57";
			fens[110] = "1Q6/5k2/8/p7/6K1/p7/P7/8 b - - 0 56";
			fens[109] = "1Q6/5k2/8/p7/6b1/p4K2/P7/8 w - - 1 56";
			fens[108] = "1Qb5/5k2/8/p7/8/p4K2/P7/8 b - - 0 55";
			fens[107] = "1rb5/2P2k2/8/p7/8/p4K2/P7/8 w - - 0 55";
			fens[106] = "1rb5/2P2R2/6k1/p7/8/p4K2/P7/8 b - - 0 54";
			fens[105] = "1rb5/5R2/2P3k1/p7/8/p4K2/P7/8 w - - 1 54";
			fens[104] = "1rb5/5R2/2P5/p6k/8/p4K2/P7/8 b - - 0 53";
			fens[103] = "1rb5/5R2/8/p1P4k/8/p4K2/P7/8 w - - 1 53";
			fens[102] = "1rb5/5R2/8/p1P3k1/8/p4K2/P7/8 b - - 0 52";
			fens[101] = "1rb5/5R2/8/p5k1/2P5/p4K2/P7/8 w - - 2 52";
			fens[100] = "r1b5/5R2/8/p5k1/2P5/p4K2/P7/8 b - - 1 51";
			fens[99] = "r1b5/5R2/8/p5k1/2P5/p7/P4K2/8 w - a6 0 51";
			fens[98] = "r1b5/p4R2/8/6k1/2P5/p7/P4K2/8 b - - 2 50";
			fens[97] = "r1b5/p6R/8/6k1/2P5/p7/P4K2/8 w - - 1 50";
			fens[96] = "r1b5/p6R/8/8/2P4k/p7/P4K2/8 b - - 0 49";
			fens[95] = "r1b5/p4R1p/8/8/2P4k/p7/P4K2/8 w - - 1 49";
			fens[94] = "r7/pb3R1p/8/8/2P4k/p7/P4K2/8 b - - 0 48";
			fens[93] = "r4R2/pb3p1p/8/8/2P4k/p7/P4K2/8 w - - 1 48";
			fens[92] = "r1b2R2/p4p1p/8/8/2P4k/p7/P4K2/8 b - - 0 47";
			fens[91] = "r1b2bR1/p4p1p/8/8/2P4k/p7/P4K2/8 w - - 10 47";
			fens[90] = "r1b2bR1/p4p1p/8/8/2P5/p6k/P4K2/8 b - - 9 46";
			fens[89] = "r1b2b2/p4p1p/8/6R1/2P5/p6k/P4K2/8 w - - 8 46";
			fens[88] = "r1b2b2/p4p1p/8/6R1/2P5/p7/P4K1k/8 b - - 7 45";
			fens[87] = "r1b2b2/p4p1p/8/8/2P5/p7/P4K1k/6R1 w - - 6 45";
			fens[86] = "1rb2b2/p4p1p/8/8/2P5/p7/P4K1k/6R1 b - - 5 44";
			fens[85] = "1rb2b2/p4p1p/8/8/2P5/p4K2/P6k/6R1 w - - 4 44";
			fens[84] = "1rb2b2/p4p1p/8/8/2P5/p4K1k/P7/6R1 b - - 3 43";
			fens[83] = "1rb2b2/p4p1p/8/8/2P2K2/p6k/P7/6R1 w - - 2 43";
			fens[82] = "1rb2b2/p4p1p/8/8/2P2K1k/p7/P7/6R1 b - - 1 42";
			fens[81] = "1rb2b2/p4p1p/8/8/2P2K1k/p5R1/P7/8 w - - 0 42";
			fens[80] = "1rb2b2/p4p1p/8/8/p1P2K1k/6R1/P7/8 b - - 1 41";
			fens[79] = "1rb2b2/p4p1p/8/8/p1P4k/5KR1/P7/8 w - - 0 41";
			fens[78] = "1rb2b2/p4p1p/8/p7/2P4k/5KR1/P7/8 b - - 4 40";
			fens[77] = "1rb2b2/p4p1p/8/p7/2P4k/6R1/P5K1/8 w - - 3 40";
			fens[76] = "1rb5/p4p1p/8/p1b5/2P4k/6R1/P5K1/8 b - - 2 39";
			fens[75] = "1rb5/p4p1p/8/p1b5/2P4k/6R1/P6K/8 w - - 1 39";
			fens[74] = "1r6/p4p1p/8/p1b5/2P3bk/6R1/P6K/8 b - - 0 38";
			fens[73] = "1r6/p4p1p/8/p1b5/6bk/2P3R1/P6K/8 w - - 0 38";
			fens[72] = "1r3b2/p4p1p/8/p1P5/6bk/2P3R1/P6K/8 b - - 0 37";
			fens[71] = "1r3b2/p4p1p/8/p7/2P3bk/2P3R1/P6K/8 w - - 1 37";
			fens[70] = "1r3b2/p4p1p/8/p6k/2P3b1/2P3R1/P6K/8 b - - 0 36";
			fens[69] = "1r3b2/p4p1p/8/p6k/2p3b1/1PP3R1/P6K/8 w - - 0 36";
			fens[68] = "rB3b2/p4p1p/8/p6k/2p3b1/1PP3R1/P6K/8 b - - 0 35";
			fens[67] = "rn3b2/p1B2p1p/8/p6k/2p3b1/1PP3R1/P6K/8 w - - 0 35";
			fens[66] = "rn3b2/p1B2p1p/8/p2p3k/2N3b1/1PP3R1/P6K/8 b - - 0 34";
			fens[65] = "rn1B1b2/p1p2p1p/8/p2p3k/2N3b1/1PP3R1/P6K/8 w - - 0 34";
			fens[64] = "rnbB1b2/p1p2p1p/8/p2p3k/2N3R1/1PP3R1/P6K/8 b - - 0 33";
			fens[63] = "rnbq1b2/p1p2p1p/5B2/p2p3k/2N3R1/1PP3R1/P6K/8 w - d6 0 33";
			fens[62] = "rnbq1b2/p1pp1p1p/5B2/p6k/2N3R1/1PP3R1/P6K/8 b - - 0 32";
			fens[61] = "rnbq1b2/p1pp1p1p/5p2/p6k/2NB2R1/1PP3R1/P6K/8 w - - 1 32";
			fens[60] = "rnbq1b2/p1pp1p1p/5p2/p7/2NB2Rk/1PP3R1/P6K/8 b - - 0 31";
			fens[59] = "rnbq1b2/p1pp1p1p/5p2/p7/2NB1Rrk/1PP3R1/P6K/8 w - - 2 31";
			fens[58] = "rnbq1br1/p1pp1p1p/5p2/p7/2NB1R1k/1PP3R1/P6K/8 b - - 1 30";
			fens[57] = "rnbq1br1/p1pp1p1p/5p2/p7/2NB3k/1PP3R1/P6K/5R2 w - - 0 30";
			fens[56] = "rnbq1br1/p1pp1p1p/5p2/p7/2NB2kP/1PP3R1/P6K/5R2 b - - 9 29";
			fens[55] = "rnbq1br1/p1pp1p1p/5p2/p7/2NB2kP/1PP1R3/P6K/5R2 w - - 8 29";
			fens[54] = "rnbq1br1/p1pp1p1p/5p2/p7/2NB1k1P/1PP1R3/P6K/5R2 b - - 7 28";
			fens[53] = "rnbq1br1/p1pp1p1p/5p2/p7/2NB1k1P/1PP1R3/P6K/R7 w - - 6 28";
			fens[52] = "rnbq1br1/p1pp1p1p/5p2/p7/2NB3P/1PP1Rk2/P6K/R7 b - - 5 27";
			fens[51] = "rnbq1br1/p1pp1p1p/5p2/p7/2NB3P/1PP2k2/P6K/R3R3 w - - 4 27";
			fens[50] = "rnbq1br1/p1pp1p1p/5p2/p7/2NBk2P/1PP5/P6K/R3R3 b - - 3 26";
			fens[49] = "rnbq1br1/p1pp1p1p/5p2/p7/3Bk2P/1PP1N3/P6K/R3R3 w - - 2 26";
			fens[48] = "rnbq1br1/p1pp1p1p/5p2/p2k4/3B3P/1PP1N3/P6K/R3R3 b - - 1 25";
			fens[47] = "rnbq1br1/p1pp1p1p/5p2/p2k4/2NB3P/1PP5/P6K/R3R3 w - - 0 25";
			fens[46] = "rnbq1br1/p1pp1p1p/p4p2/3k4/2NB3P/1PP5/P6K/R3R3 b - - 0 24";
			fens[45] = "rnbq1br1/p1pp1p1p/p4p2/3k4/2NB3P/2P5/PP5K/R3R3 w - - 6 24";
			fens[44] = "rnbq1br1/p1pp1p1p/p3kp2/8/2NB3P/2P5/PP5K/R3R3 b - - 5 23";
			fens[43] = "rnbq1br1/p1pp1p1p/p3kp2/8/2N4P/2P1B3/PP5K/R3R3 w - - 4 23";
			fens[42] = "rnbq1br1/p1ppkp1p/p4p2/8/2N4P/2P1B3/PP5K/R3R3 b - - 3 22";
			fens[41] = "rnbq1br1/p1ppkp1p/p4p2/8/2N4P/2P1B3/PP5K/R4R2 w - - 2 22";
			fens[40] = "rnbqkbr1/p1pp1p1p/p4p2/8/2N4P/2P1B3/PP5K/R4R2 b q - 1 21";
			fens[39] = "rnbqkbr1/p1pp1p1p/p4p2/8/2N4P/2P1B3/PP6/R4RK1 w q - 0 21";
			fens[38] = "rnbqkbr1/p1pp1ppp/p4P2/8/2N4P/2P1B3/PP6/R4RK1 b q - 0 20";
			fens[37] = "rnbqkbr1/p1pp1ppp/p4p2/6P1/2N4P/2P1B3/PP6/R4RK1 w q - 0 20";
			fens[36] = "rnbqkbr1/p1pppppp/p4P2/6P1/2N4P/2P1B3/PP6/R4RK1 b q - 0 19";
			fens[35] = "rnbqkbr1/p1pppppp/p7/5PP1/2N4P/2P1B3/PP6/R4RK1 w q - 1 19";
			fens[34] = "rnbqkb1r/p1pppppp/p7/5PP1/2N4P/2P1B3/PP6/R4RK1 b q - 0 18";
			fens[33] = "rnbqkb1r/p1pppppp/p7/5P2/2N3PP/2P1B3/PP6/R4RK1 w q - 1 18";
			fens[32] = "rnbqkbr1/p1pppppp/p7/5P2/2N3PP/2P1B3/PP6/R4RK1 b q - 0 17";
			fens[31] = "rnbqkbr1/p1pppppp/p7/5P2/2N3P1/2P1B2P/PP6/R4RK1 w q - 1 17";
			fens[30] = "rnbqkb1r/p1pppppp/p7/5P2/2N3P1/2P1B2P/PP6/R4RK1 b q - 0 16";
			fens[29] = "rnbqkb1r/p1pppppp/p7/5P2/2N3P1/2P1B3/PP5P/R4RK1 w q - 1 16";
			fens[28] = "rnbqkbr1/p1pppppp/p7/5P2/2N3P1/2P1B3/PP5P/R4RK1 b q g3 0 15";
			fens[27] = "rnbqkbr1/p1pppppp/p7/5P2/2N5/2P1B3/PP4PP/R4RK1 w q - 1 15";
			fens[26] = "rnbqkb1r/p1pppppp/p7/5P2/2N5/2P1B3/PP4PP/R4RK1 b q - 0 14";
			fens[25] = "rnbqkb1r/p1pppppp/p7/8/2N2P2/2P1B3/PP4PP/R4RK1 w q - 7 14";
			fens[24] = "rnbqkbr1/p1pppppp/p7/8/2N2P2/2P1B3/PP4PP/R4RK1 b q - 6 13";
			fens[23] = "rnbqkbr1/p1pppppp/p7/8/2N2P2/2P5/PP4PP/R1B2RK1 w q - 5 13";
			fens[22] = "rnbqkb1r/p1pppppp/p7/8/2N2P2/2P5/PP4PP/R1B2RK1 b kq - 4 12";
			fens[21] = "rnbqkb1r/p1pppppp/p7/8/5P2/2P5/PP1N2PP/R1B2RK1 w kq - 3 12";
			fens[20] = "r1bqkb1r/p1pppppp/p1n5/8/5P2/2P5/PP1N2PP/R1B2RK1 b kq - 2 11";
			fens[19] = "r1bqkb1r/p1pppppp/p1n5/8/5P2/2P5/PP4PP/RNB2RK1 w kq - 1 11";
			fens[18] = "r1bqkb1r/p1pppppp/p7/8/3n1P2/2P5/PP4PP/RNB2RK1 b kq - 0 10";
			fens[17] = "r1bqkb1r/p1pppppp/p7/8/3n1P2/8/PPP3PP/RNB2RK1 w kq - 0 10";
			fens[16] = "r1bqkb1r/p1pppppp/p3n3/8/3P1P2/8/PPP3PP/RNB2RK1 b kq - 2 9";
			fens[15] = "r1bqkb1r/p1pppppp/p3n3/8/3P1P2/8/PPP3PP/RNB1K2R w KQkq - 1 9";
			fens[14] = "r1bqkb1r/p1pppppp/p7/6n1/3P1P2/8/PPP3PP/RNB1K2R b KQkq - 0 8";
			fens[13] = "r1bqkb1r/p1pppppp/p7/6n1/3P4/5P2/PPP3PP/RNB1K2R w KQkq - 0 8";
			fens[12] = "r1bqkb1r/p1pppppp/p7/6N1/3Pn3/5P2/PPP3PP/RNB1K2R b KQkq - 0 7";
			fens[11] = "r1bqkb1r/p1pppppp/p7/6N1/3Pn3/8/PPP2PPP/RNB1K2R w KQkq - 0 7";
			fens[10] = "r1bqkb1r/p1pppppp/p4n2/6N1/3PP3/8/PPP2PPP/RNB1K2R b KQkq - 3 6";
			fens[9] = "r1bqkb1r/p1pppppp/p4n2/8/3PP3/5N2/PPP2PPP/RNB1K2R w KQkq - 2 6";
			fens[8] = "r1bqkb1r/p1pppppp/p7/7n/3PP3/5N2/PPP2PPP/RNB1K2R b KQkq - 1 5";
			fens[7] = "r1bqkb1r/p1pppppp/p7/7n/3PP3/8/PPP2PPP/RNB1K1NR w KQkq - 0 5";
			fens[6] = "r1bqkb1r/pppppppp/B7/7n/3PP3/8/PPP2PPP/RNB1K1NR b KQkq - 0 4";
			fens[5] = "r1bqkb1r/pppppppp/n7/7n/3PP3/8/PPP2PPP/RNB1KBNR w KQkq - 0 4";
			fens[4] = "r1bqkb1r/pppppppp/n4n2/7Q/3PP3/8/PPP2PPP/RNB1KBNR b KQkq - 2 3";
			fens[3] = "r1bqkb1r/pppppppp/n4n2/8/3PP3/8/PPP2PPP/RNBQKBNR w KQkq - 1 3";
			fens[2] = "r1bqkbnr/pppppppp/n7/8/3PP3/8/PPP2PPP/RNBQKBNR b KQkq e3 0 2";
			fens[1] = "r1bqkbnr/pppppppp/n7/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq d3 0 1";
			
			result = ::test_do_move(name: "test88", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test88: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test89() return boolean is
			@noparse
			LOG::LogInfo(message: "test89: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b1c3 e7e5 c3d5 d8h4 d5c7 e8d8 c7a8 f8c5 a8b6 h4f2";
			fens[9] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/8/8/PPPPPqPP/R1BQKBNR w KQ - 0 6";
			fens[8] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 2 5";
			fens[7] = "Nnbk2nr/pp1p1ppp/8/2b1p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 5";
			fens[6] = "Nnbk1bnr/pp1p1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 0 4";
			fens[5] = "rnbk1bnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 4";
			fens[4] = "rnb1kbnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQkq - 0 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/3Np3/7q/8/PPPPPPPP/R1BQKBNR w KQkq - 2 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/3Np3/8/8/PPPPPPPP/R1BQKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/2N5/PPPPPPPP/R1BQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/2N5/PPPPPPPP/R1BQKBNR b KQkq - 1 1";
			
			result = ::test_do_move(name: "test89", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test89: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test9() return boolean is
			@noparse
			LOG::LogInfo(message: "test9: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 f7f6 d1h5 g7g6 h5f3 d7d6 f1c4 d6d5 c4d5 e7e6 d5c4 b7b6 e4e5 c7c6 g1e2 c8b7 c4b5 c6b5 f3b7 f6e5 b7a8 a7a5 e1g1 f8d6 e2c3 b5b4 c3b5 e8d7 b5d6 d7d6 a2a3 b4a3 a1a3 g8e7 a3d3 e7d5 b1c3 d8g8 c3d5 e6d5 a8d5 g8d5 d3d5 d6d5 f1e1 g6g5 d2d3 d5d6 c1g5 h8e8 g5e3 b6b5 c2c3 d6c6 b2b4 a5a4 e1a1 e8f8 c3c4 b5c4 d3c4 c6b7 a1a4 f8f5 b4b5 b8d7 c4c5 h7h5 c5c6 b7c7 c6d7 c7d7 b5b6 f5f8 b6b7 f8b8 a4b4 d7e7 e3c5 e7d7 c5a7 b8b7 b4b7 d7d8 a7b6 d8c8 b7a7 e5e4 f2f3 e4f3 g2f3 c8b8 f3f4 h5h4 f4f5 b8c8 f5f6 h4h3 f6f7 c8b8 f7f8q";
			fens[100] = "1k3Q2/R7/1B6/8/8/7p/7P/6K1 b - - 0 51";
			fens[99] = "1k6/R4P2/1B6/8/8/7p/7P/6K1 w - - 1 51";
			fens[98] = "2k5/R4P2/1B6/8/8/7p/7P/6K1 b - - 0 50";
			fens[97] = "2k5/R7/1B3P2/8/8/7p/7P/6K1 w - - 0 50";
			fens[96] = "2k5/R7/1B3P2/8/7p/8/7P/6K1 b - - 0 49";
			fens[95] = "2k5/R7/1B6/5P2/7p/8/7P/6K1 w - - 1 49";
			fens[94] = "1k6/R7/1B6/5P2/7p/8/7P/6K1 b - - 0 48";
			fens[93] = "1k6/R7/1B6/8/5P1p/8/7P/6K1 w - - 0 48";
			fens[92] = "1k6/R7/1B6/7p/5P2/8/7P/6K1 b - - 0 47";
			fens[91] = "1k6/R7/1B6/7p/8/5P2/7P/6K1 w - - 1 47";
			fens[90] = "2k5/R7/1B6/7p/8/5P2/7P/6K1 b - - 0 46";
			fens[89] = "2k5/R7/1B6/7p/8/5p2/6PP/6K1 w - - 0 46";
			fens[88] = "2k5/R7/1B6/7p/4p3/5P2/6PP/6K1 b - - 0 45";
			fens[87] = "2k5/R7/1B6/7p/4p3/8/5PPP/6K1 w - - 0 45";
			fens[86] = "2k5/R7/1B6/4p2p/8/8/5PPP/6K1 b - - 4 44";
			fens[85] = "2k5/1R6/1B6/4p2p/8/8/5PPP/6K1 w - - 3 44";
			fens[84] = "3k4/1R6/1B6/4p2p/8/8/5PPP/6K1 b - - 2 43";
			fens[83] = "3k4/BR6/8/4p2p/8/8/5PPP/6K1 w - - 1 43";
			fens[82] = "8/BR1k4/8/4p2p/8/8/5PPP/6K1 b - - 0 42";
			fens[81] = "8/Br1k4/8/4p2p/1R6/8/5PPP/6K1 w - - 0 42";
			fens[80] = "1r6/BP1k4/8/4p2p/1R6/8/5PPP/6K1 b - - 6 41";
			fens[79] = "1r6/1P1k4/8/2B1p2p/1R6/8/5PPP/6K1 w - - 5 41";
			fens[78] = "1r6/1P2k3/8/2B1p2p/1R6/8/5PPP/6K1 b - - 4 40";
			fens[77] = "1r6/1P2k3/8/4p2p/1R6/4B3/5PPP/6K1 w - - 3 40";
			fens[76] = "1r6/1P1k4/8/4p2p/1R6/4B3/5PPP/6K1 b - - 2 39";
			fens[75] = "1r6/1P1k4/8/4p2p/R7/4B3/5PPP/6K1 w - - 1 39";
			fens[74] = "5r2/1P1k4/8/4p2p/R7/4B3/5PPP/6K1 b - - 0 38";
			fens[73] = "5r2/3k4/1P6/4p2p/R7/4B3/5PPP/6K1 w - - 1 38";
			fens[72] = "8/3k4/1P6/4pr1p/R7/4B3/5PPP/6K1 b - - 0 37";
			fens[71] = "8/3k4/8/1P2pr1p/R7/4B3/5PPP/6K1 w - - 0 37";
			fens[70] = "8/2kP4/8/1P2pr1p/R7/4B3/5PPP/6K1 b - - 0 36";
			fens[69] = "8/2kn4/2P5/1P2pr1p/R7/4B3/5PPP/6K1 w - - 1 36";
			fens[68] = "8/1k1n4/2P5/1P2pr1p/R7/4B3/5PPP/6K1 b - - 0 35";
			fens[67] = "8/1k1n4/8/1PP1pr1p/R7/4B3/5PPP/6K1 w - h6 0 35";
			fens[66] = "8/1k1n3p/8/1PP1pr2/R7/4B3/5PPP/6K1 b - - 0 34";
			fens[65] = "8/1k1n3p/8/1P2pr2/R1P5/4B3/5PPP/6K1 w - - 1 34";
			fens[64] = "1n6/1k5p/8/1P2pr2/R1P5/4B3/5PPP/6K1 b - - 0 33";
			fens[63] = "1n6/1k5p/8/4pr2/RPP5/4B3/5PPP/6K1 w - - 1 33";
			fens[62] = "1n3r2/1k5p/8/4p3/RPP5/4B3/5PPP/6K1 b - - 0 32";
			fens[61] = "1n3r2/1k5p/8/4p3/pPP5/4B3/5PPP/R5K1 w - - 1 32";
			fens[60] = "1n3r2/7p/2k5/4p3/pPP5/4B3/5PPP/R5K1 b - - 0 31";
			fens[59] = "1n3r2/7p/2k5/4p3/pPp5/3PB3/5PPP/R5K1 w - - 0 31";
			fens[58] = "1n3r2/7p/2k5/1p2p3/pPP5/3PB3/5PPP/R5K1 b - - 0 30";
			fens[57] = "1n3r2/7p/2k5/1p2p3/pP6/2PPB3/5PPP/R5K1 w - - 2 30";
			fens[56] = "1n2r3/7p/2k5/1p2p3/pP6/2PPB3/5PPP/R5K1 b - - 1 29";
			fens[55] = "1n2r3/7p/2k5/1p2p3/pP6/2PPB3/5PPP/4R1K1 w - - 0 29";
			fens[54] = "1n2r3/7p/2k5/pp2p3/1P6/2PPB3/5PPP/4R1K1 b - b3 0 28";
			fens[53] = "1n2r3/7p/2k5/pp2p3/8/2PPB3/1P3PPP/4R1K1 w - - 1 28";
			fens[52] = "1n2r3/7p/3k4/pp2p3/8/2PPB3/1P3PPP/4R1K1 b - - 0 27";
			fens[51] = "1n2r3/7p/3k4/pp2p3/8/3PB3/1PP2PPP/4R1K1 w - - 0 27";
			fens[50] = "1n2r3/7p/1p1k4/p3p3/8/3PB3/1PP2PPP/4R1K1 b - - 2 26";
			fens[49] = "1n2r3/7p/1p1k4/p3p1B1/8/3P4/1PP2PPP/4R1K1 w - - 1 26";
			fens[48] = "1n5r/7p/1p1k4/p3p1B1/8/3P4/1PP2PPP/4R1K1 b - - 0 25";
			fens[47] = "1n5r/7p/1p1k4/p3p1p1/8/3P4/1PP2PPP/2B1R1K1 w - - 1 25";
			fens[46] = "1n5r/7p/1p6/p2kp1p1/8/3P4/1PP2PPP/2B1R1K1 b - - 0 24";
			fens[45] = "1n5r/7p/1p6/p2kp1p1/8/8/1PPP1PPP/2B1R1K1 w - - 0 24";
			fens[44] = "1n5r/7p/1p4p1/p2kp3/8/8/1PPP1PPP/2B1R1K1 b - - 1 23";
			fens[43] = "1n5r/7p/1p4p1/p2kp3/8/8/1PPP1PPP/2B2RK1 w - - 0 23";
			fens[42] = "1n5r/7p/1p1k2p1/p2Rp3/8/8/1PPP1PPP/2B2RK1 b - - 0 22";
			fens[41] = "1n5r/7p/1p1k2p1/p2qp3/8/3R4/1PPP1PPP/2B2RK1 w - - 0 22";
			fens[40] = "1n4qr/7p/1p1k2p1/p2Qp3/8/3R4/1PPP1PPP/2B2RK1 b - - 0 21";
			fens[39] = "Qn4qr/7p/1p1k2p1/p2pp3/8/3R4/1PPP1PPP/2B2RK1 w - - 0 21";
			fens[38] = "Qn4qr/7p/1p1kp1p1/p2Np3/8/3R4/1PPP1PPP/2B2RK1 b - - 0 20";
			fens[37] = "Qn4qr/7p/1p1kp1p1/p2np3/8/2NR4/1PPP1PPP/2B2RK1 w - - 5 20";
			fens[36] = "Qn1q3r/7p/1p1kp1p1/p2np3/8/2NR4/1PPP1PPP/2B2RK1 b - - 4 19";
			fens[35] = "Qn1q3r/7p/1p1kp1p1/p2np3/8/3R4/1PPP1PPP/1NB2RK1 w - - 3 19";
			fens[34] = "Qn1q3r/4n2p/1p1kp1p1/p3p3/8/3R4/1PPP1PPP/1NB2RK1 b - - 2 18";
			fens[33] = "Qn1q3r/4n2p/1p1kp1p1/p3p3/8/R7/1PPP1PPP/1NB2RK1 w - - 1 18";
			fens[32] = "Qn1q2nr/7p/1p1kp1p1/p3p3/8/R7/1PPP1PPP/1NB2RK1 b - - 0 17";
			fens[31] = "Qn1q2nr/7p/1p1kp1p1/p3p3/8/p7/1PPP1PPP/RNB2RK1 w - - 0 17";
			fens[30] = "Qn1q2nr/7p/1p1kp1p1/p3p3/1p6/P7/1PPP1PPP/RNB2RK1 b - - 0 16";
			fens[29] = "Qn1q2nr/7p/1p1kp1p1/p3p3/1p6/8/PPPP1PPP/RNB2RK1 w - - 0 16";
			fens[28] = "Qn1q2nr/3k3p/1p1Np1p1/p3p3/1p6/8/PPPP1PPP/RNB2RK1 b - - 0 15";
			fens[27] = "Qn1q2nr/3k3p/1p1bp1p1/pN2p3/1p6/8/PPPP1PPP/RNB2RK1 w - - 2 15";
			fens[26] = "Qn1qk1nr/7p/1p1bp1p1/pN2p3/1p6/8/PPPP1PPP/RNB2RK1 b k - 1 14";
			fens[25] = "Qn1qk1nr/7p/1p1bp1p1/p3p3/1p6/2N5/PPPP1PPP/RNB2RK1 w k - 0 14";
			fens[24] = "Qn1qk1nr/7p/1p1bp1p1/pp2p3/8/2N5/PPPP1PPP/RNB2RK1 b k - 3 13";
			fens[23] = "Qn1qk1nr/7p/1p1bp1p1/pp2p3/8/8/PPPPNPPP/RNB2RK1 w k - 2 13";
			fens[22] = "Qn1qkbnr/7p/1p2p1p1/pp2p3/8/8/PPPPNPPP/RNB2RK1 b k - 1 12";
			fens[21] = "Qn1qkbnr/7p/1p2p1p1/pp2p3/8/8/PPPPNPPP/RNB1K2R w KQk a6 0 12";
			fens[20] = "Qn1qkbnr/p6p/1p2p1p1/1p2p3/8/8/PPPPNPPP/RNB1K2R b KQk - 0 11";
			fens[19] = "rn1qkbnr/pQ5p/1p2p1p1/1p2p3/8/8/PPPPNPPP/RNB1K2R w KQkq - 0 11";
			fens[18] = "rn1qkbnr/pQ5p/1p2ppp1/1p2P3/8/8/PPPPNPPP/RNB1K2R b KQkq - 0 10";
			fens[17] = "rn1qkbnr/pb5p/1p2ppp1/1p2P3/8/5Q2/PPPPNPPP/RNB1K2R w KQkq - 0 10";
			fens[16] = "rn1qkbnr/pb5p/1pp1ppp1/1B2P3/8/5Q2/PPPPNPPP/RNB1K2R b KQkq - 3 9";
			fens[15] = "rn1qkbnr/pb5p/1pp1ppp1/4P3/2B5/5Q2/PPPPNPPP/RNB1K2R w KQkq - 2 9";
			fens[14] = "rnbqkbnr/p6p/1pp1ppp1/4P3/2B5/5Q2/PPPPNPPP/RNB1K2R b KQkq - 1 8";
			fens[13] = "rnbqkbnr/p6p/1pp1ppp1/4P3/2B5/5Q2/PPPP1PPP/RNB1K1NR w KQkq - 0 8";
			fens[12] = "rnbqkbnr/p1p4p/1p2ppp1/4P3/2B5/5Q2/PPPP1PPP/RNB1K1NR b KQkq - 0 7";
			fens[11] = "rnbqkbnr/p1p4p/1p2ppp1/8/2B1P3/5Q2/PPPP1PPP/RNB1K1NR w KQkq - 0 7";
			fens[10] = "rnbqkbnr/ppp4p/4ppp1/8/2B1P3/5Q2/PPPP1PPP/RNB1K1NR b KQkq - 1 6";
			fens[9] = "rnbqkbnr/ppp4p/4ppp1/3B4/4P3/5Q2/PPPP1PPP/RNB1K1NR w KQkq - 0 6";
			fens[8] = "rnbqkbnr/ppp1p2p/5pp1/3B4/4P3/5Q2/PPPP1PPP/RNB1K1NR b KQkq - 0 5";
			fens[7] = "rnbqkbnr/ppp1p2p/5pp1/3p4/2B1P3/5Q2/PPPP1PPP/RNB1K1NR w KQkq - 0 5";
			fens[6] = "rnbqkbnr/ppp1p2p/3p1pp1/8/2B1P3/5Q2/PPPP1PPP/RNB1K1NR b KQkq - 1 4";
			fens[5] = "rnbqkbnr/ppp1p2p/3p1pp1/8/4P3/5Q2/PPPP1PPP/RNB1KBNR w KQkq - 0 4";
			fens[4] = "rnbqkbnr/ppppp2p/5pp1/8/4P3/5Q2/PPPP1PPP/RNB1KBNR b KQkq - 1 3";
			fens[3] = "rnbqkbnr/ppppp2p/5pp1/7Q/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 0 3";
			fens[2] = "rnbqkbnr/ppppp1pp/5p2/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/ppppp1pp/5p2/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test9", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test9: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test90() return boolean is
			@noparse
			LOG::LogInfo(message: "test90: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "e2e4 b8a6 d1h5 a6b8 f1c4 d7d5 h5f7 e8f7";
			fens[7] = "rnbq1bnr/ppp1pkpp/8/3p4/2B1P3/8/PPPP1PPP/RNB1K1NR w KQ - 0 5";
			fens[6] = "rnbqkbnr/ppp1pQpp/8/3p4/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 0 4";
			fens[5] = "rnbqkbnr/ppp1pppp/8/3p3Q/2B1P3/8/PPPP1PPP/RNB1K1NR w KQkq d6 0 4";
			fens[4] = "rnbqkbnr/pppppppp/8/7Q/2B1P3/8/PPPP1PPP/RNB1K1NR b KQkq - 4 3";
			fens[3] = "rnbqkbnr/pppppppp/8/7Q/4P3/8/PPPP1PPP/RNB1KBNR w KQkq - 3 3";
			fens[2] = "r1bqkbnr/pppppppp/n7/7Q/4P3/8/PPPP1PPP/RNB1KBNR b KQkq - 2 2";
			fens[1] = "r1bqkbnr/pppppppp/n7/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 1 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1";
			
			result = ::test_do_move(name: "test90", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test90: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test91() return boolean is
			@noparse
			LOG::LogInfo(message: "test91: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b1a3 e7e5 a3b5 d8h4 b5a7 f8c5 a7c8 h4f2";
			fens[7] = "rnN1k1nr/1ppp1ppp/8/2b1p3/8/8/PPPPPqPP/R1BQKBNR w KQkq - 0 5";
			fens[6] = "rnN1k1nr/1ppp1ppp/8/2b1p3/7q/8/PPPPPPPP/R1BQKBNR b KQkq - 0 4";
			fens[5] = "rnb1k1nr/Nppp1ppp/8/2b1p3/7q/8/PPPPPPPP/R1BQKBNR w KQkq - 1 4";
			fens[4] = "rnb1kbnr/Nppp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQkq - 0 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/1N2p3/7q/8/PPPPPPPP/R1BQKBNR w KQkq - 2 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/1N2p3/8/8/PPPPPPPP/R1BQKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/N7/PPPPPPPP/R1BQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/N7/PPPPPPPP/R1BQKBNR b KQkq - 1 1";
			
			result = ::test_do_move(name: "test91", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test91: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test92() return boolean is
			@noparse
			LOG::LogInfo(message: "test92: start");
			t0 = TIM::current_clock();
			
			initial_fen = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
			move_text = "b1a3 e7e5 a3b5 d8h4 b5c7 e8d8 c7a8 f8c5 a8b6 h4f2";
			fens[9] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/8/8/PPPPPqPP/R1BQKBNR w KQ - 0 6";
			fens[8] = "1nbk2nr/pp1p1ppp/1N6/2b1p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 2 5";
			fens[7] = "Nnbk2nr/pp1p1ppp/8/2b1p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 5";
			fens[6] = "Nnbk1bnr/pp1p1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQ - 0 4";
			fens[5] = "rnbk1bnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR w KQ - 1 4";
			fens[4] = "rnb1kbnr/ppNp1ppp/8/4p3/7q/8/PPPPPPPP/R1BQKBNR b KQkq - 0 3";
			fens[3] = "rnb1kbnr/pppp1ppp/8/1N2p3/7q/8/PPPPPPPP/R1BQKBNR w KQkq - 2 3";
			fens[2] = "rnbqkbnr/pppp1ppp/8/1N2p3/8/8/PPPPPPPP/R1BQKBNR b KQkq - 1 2";
			fens[1] = "rnbqkbnr/pppp1ppp/8/4p3/8/N7/PPPPPPPP/R1BQKBNR w KQkq e6 0 2";
			fens[0] = "rnbqkbnr/pppppppp/8/8/8/N7/PPPPPPPP/R1BQKBNR b KQkq - 1 1";
			
			result = ::test_do_move(name: "test92", initial_fen: initial_fen, move_text: move_text, fens: fens);
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "test92: done " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			
			return result;
			@endnoparse
		end function;

		@dialect("oal");
		function test_all() is
			@noparse
			failures = 0;
			t0 = TIM::current_clock();
			
			if not ::test1() then failures = failures + 1; end if;
			if not ::test2() then failures = failures + 1; end if;
			if not ::test3() then failures = failures + 1; end if;
			if not ::test4() then failures = failures + 1; end if;
			if not ::test5() then failures = failures + 1; end if;
			if not ::test6() then failures = failures + 1; end if;
			if not ::test7() then failures = failures + 1; end if;
			if not ::test8() then failures = failures + 1; end if;
			if not ::test9() then failures = failures + 1; end if;
			if not ::test10() then failures = failures + 1; end if;
			if not ::test11() then failures = failures + 1; end if;
			if not ::test12() then failures = failures + 1; end if;
			if not ::test13() then failures = failures + 1; end if;
			if not ::test14() then failures = failures + 1; end if;
			if not ::test15() then failures = failures + 1; end if;
			if not ::test16() then failures = failures + 1; end if;
			if not ::test17() then failures = failures + 1; end if;
			if not ::test18() then failures = failures + 1; end if;
			if not ::test19() then failures = failures + 1; end if;
			if not ::test20() then failures = failures + 1; end if;
			if not ::test21() then failures = failures + 1; end if;
			if not ::test22() then failures = failures + 1; end if;
			if not ::test23() then failures = failures + 1; end if;
			if not ::test24() then failures = failures + 1; end if;
			if not ::test25() then failures = failures + 1; end if;
			if not ::test26() then failures = failures + 1; end if;
			if not ::test27() then failures = failures + 1; end if;
			if not ::test28() then failures = failures + 1; end if;
			if not ::test29() then failures = failures + 1; end if;
			if not ::test30() then failures = failures + 1; end if;
			if not ::test31() then failures = failures + 1; end if;
			if not ::test32() then failures = failures + 1; end if;
			if not ::test33() then failures = failures + 1; end if;
			if not ::test34() then failures = failures + 1; end if;
			if not ::test35() then failures = failures + 1; end if;
			if not ::test36() then failures = failures + 1; end if;
			if not ::test37() then failures = failures + 1; end if;
			if not ::test38() then failures = failures + 1; end if;
			if not ::test39() then failures = failures + 1; end if;
			if not ::test40() then failures = failures + 1; end if;
			if not ::test41() then failures = failures + 1; end if;
			if not ::test42() then failures = failures + 1; end if;
			if not ::test43() then failures = failures + 1; end if;
			if not ::test44() then failures = failures + 1; end if;
			if not ::test45() then failures = failures + 1; end if;
			if not ::test46() then failures = failures + 1; end if;
			if not ::test47() then failures = failures + 1; end if;
			if not ::test48() then failures = failures + 1; end if;
			if not ::test49() then failures = failures + 1; end if;
			if not ::test50() then failures = failures + 1; end if;
			if not ::test51() then failures = failures + 1; end if;
			if not ::test52() then failures = failures + 1; end if;
			if not ::test53() then failures = failures + 1; end if;
			if not ::test54() then failures = failures + 1; end if;
			if not ::test55() then failures = failures + 1; end if;
			if not ::test56() then failures = failures + 1; end if;
			if not ::test57() then failures = failures + 1; end if;
			if not ::test58() then failures = failures + 1; end if;
			if not ::test59() then failures = failures + 1; end if;
			if not ::test60() then failures = failures + 1; end if;
			if not ::test61() then failures = failures + 1; end if;
			if not ::test62() then failures = failures + 1; end if;
			if not ::test63() then failures = failures + 1; end if;
			if not ::test64() then failures = failures + 1; end if;
			if not ::test65() then failures = failures + 1; end if;
			if not ::test66() then failures = failures + 1; end if;
			if not ::test67() then failures = failures + 1; end if;
			if not ::test68() then failures = failures + 1; end if;
			if not ::test69() then failures = failures + 1; end if;
			if not ::test70() then failures = failures + 1; end if;
			if not ::test71() then failures = failures + 1; end if;
			if not ::test72() then failures = failures + 1; end if;
			if not ::test73() then failures = failures + 1; end if;
			if not ::test74() then failures = failures + 1; end if;
			if not ::test75() then failures = failures + 1; end if;
			if not ::test76() then failures = failures + 1; end if;
			if not ::test77() then failures = failures + 1; end if;
			if not ::test78() then failures = failures + 1; end if;
			if not ::test79() then failures = failures + 1; end if;
			if not ::test80() then failures = failures + 1; end if;
			if not ::test81() then failures = failures + 1; end if;
			if not ::test82() then failures = failures + 1; end if;
			if not ::test83() then failures = failures + 1; end if;
			if not ::test84() then failures = failures + 1; end if;
			if not ::test85() then failures = failures + 1; end if;
			if not ::test86() then failures = failures + 1; end if;
			if not ::test87() then failures = failures + 1; end if;
			if not ::test88() then failures = failures + 1; end if;
			if not ::test89() then failures = failures + 1; end if;
			if not ::test90() then failures = failures + 1; end if;
			if not ::test91() then failures = failures + 1; end if;
			if not ::test92() then failures = failures + 1; end if;
			
			t1 = TIM::current_clock();
			LOG::LogInfo(message: "92 tests run in " + STRING::itoa(i: (t1 - t0) / 1000) + "ms");
			LOG::LogInfo(message: "Tests ran with " + STRING::itoa(i: failures) + " failures");
			ARCH::shutdown();
			@endnoparse
		end function;

	end package;

end;
